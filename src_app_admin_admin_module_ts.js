"use strict";
(self["webpackChunkWarnerPacific"] = self["webpackChunkWarnerPacific"] || []).push([["src_app_admin_admin_module_ts"],{

/***/ 13176:
/*!***********************************************!*\
  !*** ./src/app/admin/admin-routing.module.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AdminRoutingModule": () => (/* binding */ AdminRoutingModule)
/* harmony export */ });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _carrier_management_components_carrier_create_carrier_create_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./carrier-management/components/carrier-create/carrier-create.component */ 59957);
/* harmony import */ var _carrier_management_components_carrier_edit_carrier_edit_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./carrier-management/components/carrier-edit/carrier-edit.component */ 22496);
/* harmony import */ var _carrier_management_components_carrier_list_carrier_list_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./carrier-management/components/carrier-list/carrier-list.component */ 43045);
/* harmony import */ var _region_management_components_country_list_country_list_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./region-management/components/country-list/country-list.component */ 53600);
/* harmony import */ var _file_management_components_file_manager_file_manager_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./file-management/components/file-manager/file-manager.component */ 80715);
/* harmony import */ var _global_tool_suite_components_global_tool_suite_list_global_tool_suite_list_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./global-tool-suite/components/global-tool-suite-list/global-tool-suite-list.component */ 61385);
/* harmony import */ var _logs_components_logs_list_logs_list_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./logs/components/logs-list/logs-list.component */ 60136);
/* harmony import */ var _resource_center_components_resource_center_list_resource_center_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./resource-center/components/resource-center-list/resource-center.component */ 87298);
/* harmony import */ var _resource_center_components_resource_center_edit_resource_center_edit_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./resource-center/components/resource-center-edit/resource-center-edit.component */ 39560);
/* harmony import */ var _roles_components_role_management_role_management_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./roles/components/role-management/role-management.component */ 52087);
/* harmony import */ var _roles_components_role_tools_list_role_tools_list_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./roles/components/role-tools-list/role-tools-list.component */ 36128);
/* harmony import */ var _roles_components_role_tools_user_role_tools_user_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./roles/components/role-tools-user/role-tools-user.component */ 28374);
/* harmony import */ var _tools_management_components_tool_create_tool_create_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./tools-management/components/tool-create/tool-create.component */ 30873);
/* harmony import */ var _tools_management_components_tool_edit_tool_edit_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./tools-management/components/tool-edit/tool-edit.component */ 22102);
/* harmony import */ var _tools_management_components_tool_edit_general_info_tool_edit_general_info_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./tools-management/components/tool-edit-general-info/tool-edit-general-info.component */ 79202);
/* harmony import */ var _tools_management_components_tool_edit_permission_tool_edit_permission_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./tools-management/components/tool-edit-permission/tool-edit-permission.component */ 96015);
/* harmony import */ var _tools_management_components_tool_edit_state_carrier_tool_edit_state_carrier_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./tools-management/components/tool-edit-state-carrier/tool-edit-state-carrier.component */ 53338);
/* harmony import */ var _tools_management_components_tool_list_tool_list_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./tools-management/components/tool-list/tool-list.component */ 61882);
/* harmony import */ var _user_management_components_user_create_user_create_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./user-management/components/user-create/user-create.component */ 18250);
/* harmony import */ var _user_management_components_user_edit_user_edit_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./user-management/components/user-edit/user-edit.component */ 44757);
/* harmony import */ var _user_management_components_user_edit_roles_user_edit_roles_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./user-management/components/user-edit-roles/user-edit-roles.component */ 52937);
/* harmony import */ var _user_management_components_user_edit_security_user_edit_security_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./user-management/components/user-edit-security/user-edit-security.component */ 15540);
/* harmony import */ var _user_management_components_user_list_user_list_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./user-management/components/user-list/user-list.component */ 18920);
/* harmony import */ var _carrier_management_resolvers_carrier_edit_resolver__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./carrier-management/resolvers/carrier-edit.resolver */ 218);
/* harmony import */ var _carrier_management_resolvers_carrier_list_resolver__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./carrier-management/resolvers/carrier-list.resolver */ 20296);
/* harmony import */ var _region_management_resolvers_country_list_resolver__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./region-management/resolvers/country-list.resolver */ 71461);
/* harmony import */ var _logs_resolvers_logs_list_resolver__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./logs/resolvers/logs-list.resolver */ 13559);
/* harmony import */ var _roles_resolvers_role_tools_list_resolver__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./roles/resolvers/role-tools-list.resolver */ 63199);
/* harmony import */ var _roles_resolvers_role_tools_user_resolver__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./roles/resolvers/role-tools-user.resolver */ 33887);
/* harmony import */ var _shared_resolvers_tool_edit_resolver__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../shared/resolvers/tool-edit.resolver */ 78002);
/* harmony import */ var _shared_resolvers_tool_list_roles_resolver__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../shared/resolvers/tool-list-roles.resolver */ 27837);
/* harmony import */ var _shared_resolvers_tool_list_resolver__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../shared/resolvers/tool-list.resolver */ 44809);
/* harmony import */ var _tools_management_resolvers_tool_manageable_list_resolver__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./tools-management/resolvers/tool-manageable-list.resolver */ 23545);
/* harmony import */ var _user_management_resolvers_user_edit_resolver__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./user-management/resolvers/user-edit.resolver */ 52358);
/* harmony import */ var _user_management_resolvers_user_list_resolver__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./user-management/resolvers/user-list.resolver */ 46529);
/* harmony import */ var _authentication_guards_role_guard__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../authentication/guards/role.guard */ 43784);
/* harmony import */ var _core_constants_role_constants__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../core/constants/role.constants */ 85601);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! @angular/core */ 3184);

// Components























// Resolvers
















const childRoutes = [
    { path: '', component: _global_tool_suite_components_global_tool_suite_list_global_tool_suite_list_component__WEBPACK_IMPORTED_MODULE_5__.GlobalToolSuiteListComponent },
    {
        path: 'user-management',
        children: [
            { path: '', component: _user_management_components_user_list_user_list_component__WEBPACK_IMPORTED_MODULE_22__.UserListComponent, resolve: { users: _user_management_resolvers_user_list_resolver__WEBPACK_IMPORTED_MODULE_34__.UserListResolver } },
            { path: 'create', component: _user_management_components_user_create_user_create_component__WEBPACK_IMPORTED_MODULE_18__.UserCreateComponent },
            {
                path: ':id',
                children: [
                    { path: 'contact-info', component: _user_management_components_user_edit_user_edit_component__WEBPACK_IMPORTED_MODULE_19__.UserEditComponent, resolve: { user: _user_management_resolvers_user_edit_resolver__WEBPACK_IMPORTED_MODULE_33__.UserEditResolver } },
                    { path: 'roles', component: _user_management_components_user_edit_roles_user_edit_roles_component__WEBPACK_IMPORTED_MODULE_20__.UserEditRolesComponent, resolve: { user: _user_management_resolvers_user_edit_resolver__WEBPACK_IMPORTED_MODULE_33__.UserEditResolver } },
                    { path: 'security', component: _user_management_components_user_edit_security_user_edit_security_component__WEBPACK_IMPORTED_MODULE_21__.UserEditSecurityComponent, resolve: { user: _user_management_resolvers_user_edit_resolver__WEBPACK_IMPORTED_MODULE_33__.UserEditResolver } }
                ]
            }
        ]
    },
    {
        path: 'roles',
        children: [
            { path: '', component: _roles_components_role_management_role_management_component__WEBPACK_IMPORTED_MODULE_9__.RoleManagementComponent, resolve: { tools: _shared_resolvers_tool_list_roles_resolver__WEBPACK_IMPORTED_MODULE_30__.ToolListRolesResolver } },
            { path: 'tool/:toolId', component: _roles_components_role_tools_list_role_tools_list_component__WEBPACK_IMPORTED_MODULE_10__.RoleToolsListComponent, resolve: { roles: _roles_resolvers_role_tools_list_resolver__WEBPACK_IMPORTED_MODULE_27__.RoleToolsListResolver } },
            { path: 'tool/:toolId/user/:userId', component: _roles_components_role_tools_user_role_tools_user_component__WEBPACK_IMPORTED_MODULE_11__.RoleToolsUserComponent, resolve: { user: _roles_resolvers_role_tools_user_resolver__WEBPACK_IMPORTED_MODULE_28__.RoleToolUserResolver } },
            { path: 'tool/:toolId/assign-user', component: _roles_components_role_tools_user_role_tools_user_component__WEBPACK_IMPORTED_MODULE_11__.RoleToolsUserComponent }
        ]
    },
    { path: 'logs', component: _logs_components_logs_list_logs_list_component__WEBPACK_IMPORTED_MODULE_6__.LogsListComponent, resolve: { logs: _logs_resolvers_logs_list_resolver__WEBPACK_IMPORTED_MODULE_26__.LogsListResolver }, canActivate: [_authentication_guards_role_guard__WEBPACK_IMPORTED_MODULE_35__.RoleGuard], data: { roles: [_core_constants_role_constants__WEBPACK_IMPORTED_MODULE_36__.Roles.SuperAdmin] } },
    { path: 'file-manager', component: _file_management_components_file_manager_file_manager_component__WEBPACK_IMPORTED_MODULE_4__.FileManagerComponent, canActivate: [_authentication_guards_role_guard__WEBPACK_IMPORTED_MODULE_35__.RoleGuard], data: { roles: [_core_constants_role_constants__WEBPACK_IMPORTED_MODULE_36__.Roles.SuperAdmin] } },
    { path: 'state-management', component: _region_management_components_country_list_country_list_component__WEBPACK_IMPORTED_MODULE_3__.CountryListComponent, resolve: { countries: _region_management_resolvers_country_list_resolver__WEBPACK_IMPORTED_MODULE_25__.CountryListResolver } },
    {
        path: 'carrier-management',
        children: [
            { path: '', component: _carrier_management_components_carrier_list_carrier_list_component__WEBPACK_IMPORTED_MODULE_2__.CarrierListComponent, resolve: { carriers: _carrier_management_resolvers_carrier_list_resolver__WEBPACK_IMPORTED_MODULE_24__.CarrierListResolver } },
            { path: 'create', component: _carrier_management_components_carrier_create_carrier_create_component__WEBPACK_IMPORTED_MODULE_0__.CarrierCreateComponent },
            { path: ':id', component: _carrier_management_components_carrier_edit_carrier_edit_component__WEBPACK_IMPORTED_MODULE_1__.CarrierEditComponent, resolve: { carrier: _carrier_management_resolvers_carrier_edit_resolver__WEBPACK_IMPORTED_MODULE_23__.CarrierEditResolver } }
        ]
    },
    {
        path: 'tools-management',
        children: [
            { path: '', component: _tools_management_components_tool_list_tool_list_component__WEBPACK_IMPORTED_MODULE_17__.ToolListComponent, resolve: { tools: _tools_management_resolvers_tool_manageable_list_resolver__WEBPACK_IMPORTED_MODULE_32__.ToolManageableListResolver } },
            { path: 'create', component: _tools_management_components_tool_create_tool_create_component__WEBPACK_IMPORTED_MODULE_12__.ToolCreateComponent },
            {
                path: ':id',
                children: [
                    { path: '', component: _tools_management_components_tool_edit_tool_edit_component__WEBPACK_IMPORTED_MODULE_13__.ToolEditComponent, resolve: { tool: _shared_resolvers_tool_edit_resolver__WEBPACK_IMPORTED_MODULE_29__.ToolEditResolver } },
                    { path: 'state-carrier', component: _tools_management_components_tool_edit_state_carrier_tool_edit_state_carrier_component__WEBPACK_IMPORTED_MODULE_16__.ToolEditStateCarrierComponent, resolve: { tool: _shared_resolvers_tool_edit_resolver__WEBPACK_IMPORTED_MODULE_29__.ToolEditResolver } },
                    { path: 'general-info', component: _tools_management_components_tool_edit_general_info_tool_edit_general_info_component__WEBPACK_IMPORTED_MODULE_14__.ToolEditGeneralInfoComponent, resolve: { tool: _shared_resolvers_tool_edit_resolver__WEBPACK_IMPORTED_MODULE_29__.ToolEditResolver } },
                    { path: 'permission', component: _tools_management_components_tool_edit_permission_tool_edit_permission_component__WEBPACK_IMPORTED_MODULE_15__.ToolEditPermissionComponent, resolve: { tool: _shared_resolvers_tool_edit_resolver__WEBPACK_IMPORTED_MODULE_29__.ToolEditResolver } }
                ]
            }
        ],
    },
    {
        path: 'resource-center',
        children: [
            { path: '', component: _resource_center_components_resource_center_list_resource_center_component__WEBPACK_IMPORTED_MODULE_7__.ResourceCenterComponent, resolve: { tools: _shared_resolvers_tool_list_resolver__WEBPACK_IMPORTED_MODULE_31__.ToolListResolver } },
            {
                path: ':id',
                children: [{ path: '', component: _resource_center_components_resource_center_edit_resource_center_edit_component__WEBPACK_IMPORTED_MODULE_8__.ResourceCenterEditComponent, resolve: { tool: _shared_resolvers_tool_edit_resolver__WEBPACK_IMPORTED_MODULE_29__.ToolEditResolver } }]
            }
        ]
    }
];
class AdminRoutingModule {
}
AdminRoutingModule.ɵfac = function AdminRoutingModule_Factory(t) { return new (t || AdminRoutingModule)(); };
AdminRoutingModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_37__["ɵɵdefineNgModule"]({ type: AdminRoutingModule });
AdminRoutingModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_37__["ɵɵdefineInjector"]({ imports: [[_angular_router__WEBPACK_IMPORTED_MODULE_38__.RouterModule.forChild(childRoutes)], _angular_router__WEBPACK_IMPORTED_MODULE_38__.RouterModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_37__["ɵɵsetNgModuleScope"](AdminRoutingModule, { imports: [_angular_router__WEBPACK_IMPORTED_MODULE_38__.RouterModule], exports: [_angular_router__WEBPACK_IMPORTED_MODULE_38__.RouterModule] }); })();


/***/ }),

/***/ 77095:
/*!***************************************!*\
  !*** ./src/app/admin/admin.module.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AdminModule": () => (/* binding */ AdminModule)
/* harmony export */ });
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shared/shared.module */ 44466);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var angular2_prettyjson__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! angular2-prettyjson */ 24794);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _carrier_management_components_carrier_create_carrier_create_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./carrier-management/components/carrier-create/carrier-create.component */ 59957);
/* harmony import */ var _carrier_management_components_carrier_edit_carrier_edit_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./carrier-management/components/carrier-edit/carrier-edit.component */ 22496);
/* harmony import */ var _carrier_management_components_carrier_list_carrier_list_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./carrier-management/components/carrier-list/carrier-list.component */ 43045);
/* harmony import */ var _region_management_components_country_list_country_list_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./region-management/components/country-list/country-list.component */ 53600);
/* harmony import */ var _file_management_components_file_manager_file_manager_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./file-management/components/file-manager/file-manager.component */ 80715);
/* harmony import */ var _global_tool_suite_components_global_tool_suite_list_global_tool_suite_list_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./global-tool-suite/components/global-tool-suite-list/global-tool-suite-list.component */ 61385);
/* harmony import */ var _shared_components_information_text_information_text_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../shared/components/information-text/information-text.component */ 43350);
/* harmony import */ var _logs_components_logs_list_logs_list_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./logs/components/logs-list/logs-list.component */ 60136);
/* harmony import */ var _admin_shared_region_list_region_list_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../admin/shared/region-list/region-list.component */ 60096);
/* harmony import */ var _resource_center_components_resource_center_list_resource_center_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./resource-center/components/resource-center-list/resource-center.component */ 87298);
/* harmony import */ var _resource_center_components_resource_center_edit_resource_center_edit_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./resource-center/components/resource-center-edit/resource-center-edit.component */ 39560);
/* harmony import */ var _resource_center_components_resource_link_resource_link_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./resource-center/components/resource-link/resource-link.component */ 49937);
/* harmony import */ var _roles_components_role_management_role_management_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./roles/components/role-management/role-management.component */ 52087);
/* harmony import */ var _roles_components_role_tools_list_role_tools_list_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./roles/components/role-tools-list/role-tools-list.component */ 36128);
/* harmony import */ var _roles_components_role_tools_user_role_tools_user_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./roles/components/role-tools-user/role-tools-user.component */ 28374);
/* harmony import */ var _tools_management_components_tool_create_tool_create_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./tools-management/components/tool-create/tool-create.component */ 30873);
/* harmony import */ var _tools_management_components_tool_edit_tool_edit_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./tools-management/components/tool-edit/tool-edit.component */ 22102);
/* harmony import */ var _tools_management_components_tool_edit_general_info_tool_edit_general_info_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./tools-management/components/tool-edit-general-info/tool-edit-general-info.component */ 79202);
/* harmony import */ var _tools_management_components_tool_edit_permission_tool_edit_permission_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./tools-management/components/tool-edit-permission/tool-edit-permission.component */ 96015);
/* harmony import */ var _tools_management_components_tool_edit_state_carrier_tool_edit_state_carrier_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./tools-management/components/tool-edit-state-carrier/tool-edit-state-carrier.component */ 53338);
/* harmony import */ var _tools_management_components_tool_edit_state_carrier_partial_tool_edit_state_carrier_partial_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./tools-management/components/tool-edit-state-carrier-partial/tool-edit-state-carrier-partial.component */ 61466);
/* harmony import */ var _shared_tool_icon_tool_icon_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./shared/tool-icon/tool-icon.component */ 87786);
/* harmony import */ var _shared_tool_external_tool_external_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./shared/tool-external/tool-external.component */ 96139);
/* harmony import */ var _tools_management_components_tool_list_tool_list_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./tools-management/components/tool-list/tool-list.component */ 61882);
/* harmony import */ var _user_management_components_user_list_user_list_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./user-management/components/user-list/user-list.component */ 18920);
/* harmony import */ var _user_management_components_user_create_user_create_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./user-management/components/user-create/user-create.component */ 18250);
/* harmony import */ var _user_management_components_user_edit_user_edit_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./user-management/components/user-edit/user-edit.component */ 44757);
/* harmony import */ var _shared_user_edit_password_user_edit_password_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./shared/user-edit-password/user-edit-password.component */ 44369);
/* harmony import */ var _user_management_components_user_edit_roles_user_edit_roles_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./user-management/components/user-edit-roles/user-edit-roles.component */ 52937);
/* harmony import */ var _shared_user_edit_roles_tool_user_edit_roles_tool_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./shared/user-edit-roles-tool/user-edit-roles-tool.component */ 58340);
/* harmony import */ var _user_management_components_user_edit_security_user_edit_security_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./user-management/components/user-edit-security/user-edit-security.component */ 15540);
/* harmony import */ var _admin_shared_user_type_list_user_type_list_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../admin/shared/user-type-list/user-type-list.component */ 54724);
/* harmony import */ var _admin_routing_module__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./admin-routing.module */ 13176);
/* harmony import */ var _carrier_management_resolvers_carrier_edit_resolver__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./carrier-management/resolvers/carrier-edit.resolver */ 218);
/* harmony import */ var _carrier_management_resolvers_carrier_list_resolver__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./carrier-management/resolvers/carrier-list.resolver */ 20296);
/* harmony import */ var _region_management_resolvers_country_list_resolver__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./region-management/resolvers/country-list.resolver */ 71461);
/* harmony import */ var _logs_resolvers_logs_list_resolver__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./logs/resolvers/logs-list.resolver */ 13559);
/* harmony import */ var _roles_resolvers_role_tools_list_resolver__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./roles/resolvers/role-tools-list.resolver */ 63199);
/* harmony import */ var _roles_resolvers_role_tools_user_resolver__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./roles/resolvers/role-tools-user.resolver */ 33887);
/* harmony import */ var _tools_management_resolvers_tool_manageable_list_resolver__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./tools-management/resolvers/tool-manageable-list.resolver */ 23545);
/* harmony import */ var _user_management_resolvers_user_edit_resolver__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./user-management/resolvers/user-edit.resolver */ 52358);
/* harmony import */ var _user_management_resolvers_user_list_resolver__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./user-management/resolvers/user-list.resolver */ 46529);
/* harmony import */ var _carrier_management_services_carrier_service__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./carrier-management/services/carrier.service */ 61988);
/* harmony import */ var _region_management_services_country_service__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./region-management/services/country.service */ 4487);
/* harmony import */ var _file_management_services_file_manager_service__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./file-management/services/file-manager.service */ 35755);
/* harmony import */ var _logs_services_logs_service__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./logs/services/logs.service */ 83348);
/* harmony import */ var _region_management_services_region_service__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./region-management/services/region.service */ 59194);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! @angular/core */ 3184);
//Angular and Shared Modules




// Components
































// Routing

// Resolvers









// Services






class AdminModule {
}
AdminModule.ɵfac = function AdminModule_Factory(t) { return new (t || AdminModule)(); };
AdminModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_49__["ɵɵdefineNgModule"]({ type: AdminModule });
AdminModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_49__["ɵɵdefineInjector"]({ providers: [
        _carrier_management_services_carrier_service__WEBPACK_IMPORTED_MODULE_44__.CarrierService,
        _carrier_management_resolvers_carrier_edit_resolver__WEBPACK_IMPORTED_MODULE_35__.CarrierEditResolver,
        _carrier_management_resolvers_carrier_list_resolver__WEBPACK_IMPORTED_MODULE_36__.CarrierListResolver,
        _region_management_services_country_service__WEBPACK_IMPORTED_MODULE_45__.CountryService,
        _region_management_resolvers_country_list_resolver__WEBPACK_IMPORTED_MODULE_37__.CountryListResolver,
        _file_management_services_file_manager_service__WEBPACK_IMPORTED_MODULE_46__.FileManagerService,
        _logs_resolvers_logs_list_resolver__WEBPACK_IMPORTED_MODULE_38__.LogsListResolver,
        _logs_services_logs_service__WEBPACK_IMPORTED_MODULE_47__.LogsService,
        _region_management_services_region_service__WEBPACK_IMPORTED_MODULE_48__.RegionService,
        _roles_resolvers_role_tools_list_resolver__WEBPACK_IMPORTED_MODULE_39__.RoleToolsListResolver,
        _roles_resolvers_role_tools_user_resolver__WEBPACK_IMPORTED_MODULE_40__.RoleToolUserResolver,
        _tools_management_resolvers_tool_manageable_list_resolver__WEBPACK_IMPORTED_MODULE_41__.ToolManageableListResolver,
        _user_management_resolvers_user_edit_resolver__WEBPACK_IMPORTED_MODULE_42__.UserEditResolver,
        _user_management_resolvers_user_list_resolver__WEBPACK_IMPORTED_MODULE_43__.UserListResolver
    ], imports: [[
            _angular_common__WEBPACK_IMPORTED_MODULE_50__.CommonModule,
            angular2_prettyjson__WEBPACK_IMPORTED_MODULE_1__.PrettyJsonModule,
            _admin_routing_module__WEBPACK_IMPORTED_MODULE_34__.AdminRoutingModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_51__.FormsModule,
            _shared_shared_module__WEBPACK_IMPORTED_MODULE_0__.SharedModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_49__["ɵɵsetNgModuleScope"](AdminModule, { declarations: [_carrier_management_components_carrier_create_carrier_create_component__WEBPACK_IMPORTED_MODULE_2__.CarrierCreateComponent,
        _carrier_management_components_carrier_edit_carrier_edit_component__WEBPACK_IMPORTED_MODULE_3__.CarrierEditComponent,
        _carrier_management_components_carrier_list_carrier_list_component__WEBPACK_IMPORTED_MODULE_4__.CarrierListComponent,
        _file_management_components_file_manager_file_manager_component__WEBPACK_IMPORTED_MODULE_6__.FileManagerComponent,
        _region_management_components_country_list_country_list_component__WEBPACK_IMPORTED_MODULE_5__.CountryListComponent,
        _global_tool_suite_components_global_tool_suite_list_global_tool_suite_list_component__WEBPACK_IMPORTED_MODULE_7__.GlobalToolSuiteListComponent,
        _shared_components_information_text_information_text_component__WEBPACK_IMPORTED_MODULE_8__.InformationTextComponent,
        _logs_components_logs_list_logs_list_component__WEBPACK_IMPORTED_MODULE_9__.LogsListComponent,
        _admin_shared_region_list_region_list_component__WEBPACK_IMPORTED_MODULE_10__.RegionListComponent,
        _resource_center_components_resource_center_list_resource_center_component__WEBPACK_IMPORTED_MODULE_11__.ResourceCenterComponent,
        _resource_center_components_resource_center_edit_resource_center_edit_component__WEBPACK_IMPORTED_MODULE_12__.ResourceCenterEditComponent,
        _resource_center_components_resource_link_resource_link_component__WEBPACK_IMPORTED_MODULE_13__.ResourceLinkComponent,
        _roles_components_role_management_role_management_component__WEBPACK_IMPORTED_MODULE_14__.RoleManagementComponent,
        _roles_components_role_tools_list_role_tools_list_component__WEBPACK_IMPORTED_MODULE_15__.RoleToolsListComponent,
        _roles_components_role_tools_user_role_tools_user_component__WEBPACK_IMPORTED_MODULE_16__.RoleToolsUserComponent,
        _tools_management_components_tool_create_tool_create_component__WEBPACK_IMPORTED_MODULE_17__.ToolCreateComponent,
        _tools_management_components_tool_edit_tool_edit_component__WEBPACK_IMPORTED_MODULE_18__.ToolEditComponent,
        _tools_management_components_tool_edit_general_info_tool_edit_general_info_component__WEBPACK_IMPORTED_MODULE_19__.ToolEditGeneralInfoComponent,
        _tools_management_components_tool_edit_permission_tool_edit_permission_component__WEBPACK_IMPORTED_MODULE_20__.ToolEditPermissionComponent,
        _tools_management_components_tool_edit_state_carrier_tool_edit_state_carrier_component__WEBPACK_IMPORTED_MODULE_21__.ToolEditStateCarrierComponent,
        _tools_management_components_tool_edit_state_carrier_partial_tool_edit_state_carrier_partial_component__WEBPACK_IMPORTED_MODULE_22__.ToolEditStateCarrierPartialComponent,
        _shared_tool_external_tool_external_component__WEBPACK_IMPORTED_MODULE_24__.ToolExternalComponent,
        _shared_tool_icon_tool_icon_component__WEBPACK_IMPORTED_MODULE_23__.ToolIconComponent,
        _tools_management_components_tool_list_tool_list_component__WEBPACK_IMPORTED_MODULE_25__.ToolListComponent,
        _user_management_components_user_create_user_create_component__WEBPACK_IMPORTED_MODULE_27__.UserCreateComponent,
        _user_management_components_user_edit_user_edit_component__WEBPACK_IMPORTED_MODULE_28__.UserEditComponent,
        _shared_user_edit_password_user_edit_password_component__WEBPACK_IMPORTED_MODULE_29__.UserEditPasswordComponent,
        _user_management_components_user_edit_roles_user_edit_roles_component__WEBPACK_IMPORTED_MODULE_30__.UserEditRolesComponent,
        _shared_user_edit_roles_tool_user_edit_roles_tool_component__WEBPACK_IMPORTED_MODULE_31__.UserEditRolesToolComponent,
        _user_management_components_user_edit_security_user_edit_security_component__WEBPACK_IMPORTED_MODULE_32__.UserEditSecurityComponent,
        _user_management_components_user_list_user_list_component__WEBPACK_IMPORTED_MODULE_26__.UserListComponent,
        _admin_shared_user_type_list_user_type_list_component__WEBPACK_IMPORTED_MODULE_33__.UserTypeListComponent], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_50__.CommonModule,
        angular2_prettyjson__WEBPACK_IMPORTED_MODULE_1__.PrettyJsonModule,
        _admin_routing_module__WEBPACK_IMPORTED_MODULE_34__.AdminRoutingModule,
        _angular_forms__WEBPACK_IMPORTED_MODULE_51__.FormsModule,
        _shared_shared_module__WEBPACK_IMPORTED_MODULE_0__.SharedModule] }); })();


/***/ }),

/***/ 59957:
/*!************************************************************************************************!*\
  !*** ./src/app/admin/carrier-management/components/carrier-create/carrier-create.component.ts ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CarrierCreateComponent": () => (/* binding */ CarrierCreateComponent)
/* harmony export */ });
/* harmony import */ var _forms_carrier_create_form_group__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../forms/carrier-create-form-group */ 69950);
/* harmony import */ var src_app_shared_constants_file_sizes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/shared/constants/file-sizes */ 16706);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _services_carrier_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/carrier.service */ 61988);
/* harmony import */ var _core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/services/result.handler.service */ 32464);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _shared_services_input_validator_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/input-validator.service */ 68516);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/components/page-title/page-title.component */ 46896);
/* harmony import */ var _shared_components_return_button_return_button_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/return-button/return-button.component */ 44188);
/* harmony import */ var _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @syncfusion/ej2-angular-inputs */ 53691);
/* harmony import */ var _shared_components_field_error_display_field_error_display_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/field-error-display/field-error-display.component */ 76530);
/* harmony import */ var _shared_region_list_region_list_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../shared/region-list/region-list.component */ 60096);
/* harmony import */ var _shared_components_single_upload_single_upload_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/single-upload/single-upload.component */ 40031);
/* harmony import */ var _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @syncfusion/ej2-angular-buttons */ 78218);















const _c0 = ["upload"];
const _c1 = ["regions"];
class CarrierCreateComponent {
    constructor(carrierService, resultHandler, location, inputValidatorService) {
        this.carrierService = carrierService;
        this.resultHandler = resultHandler;
        this.location = location;
        this.inputValidatorService = inputValidatorService;
        this.MaxFileSizes = src_app_shared_constants_file_sizes__WEBPACK_IMPORTED_MODULE_1__.MaxFileSizes;
    }
    ngOnInit() {
        this.initializeForm();
    }
    initializeForm() {
        this.form = (0,_forms_carrier_create_form_group__WEBPACK_IMPORTED_MODULE_0__.getCarrierCreateFormGroup)();
    }
    return() {
        this.location.back();
    }
    onClear() {
        this.initializeForm();
        this.upload.reset();
        this.regionsComponent.clear();
    }
    onSubmit() {
        this.form.markAllAsTouched();
        if (!this.form.valid) {
            return;
        }
        const file = this.upload.getFile();
        const formValues = this.form.getRawValue();
        const carrier = {
            name: formValues.name.trim(),
            regionsIds: this.regionsComponent.getSelectedIds()
        };
        this.carrierService.createCarrier(carrier, file).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.return();
                }
            });
        }, (err) => {
            this.resultHandler.handle(err.error);
        });
    }
    get name() { return this.form.get('name'); }
}
CarrierCreateComponent.ɵfac = function CarrierCreateComponent_Factory(t) { return new (t || CarrierCreateComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_services_carrier_service__WEBPACK_IMPORTED_MODULE_2__.CarrierService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_3__.ResultHandlerService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_11__.Location), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_shared_services_input_validator_service__WEBPACK_IMPORTED_MODULE_4__.InputValidatorService)); };
CarrierCreateComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineComponent"]({ type: CarrierCreateComponent, selectors: [["app-carrier-create"]], viewQuery: function CarrierCreateComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵviewQuery"](_c1, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵloadQuery"]()) && (ctx.upload = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵloadQuery"]()) && (ctx.regionsComponent = _t.first);
    } }, decls: 21, vars: 3, consts: [[3, "formGroup", "ngSubmit"], [1, "container-fluid"], ["sufix", "To Carriers"], [1, "e-card", "mt-4", "p-1", "pb-4"], [1, "e-card-content"], [1, "form-group"], ["placeholder", "Carrier Name", "floatLabelType", "Always", "autocomplete", "off", "maxlength", "255", "required", "", "formControlName", "name"], ["errorMsg", "* This field is required.", 3, "displayError"], ["title", "Assign States"], ["regions", ""], ["title", "Upload Primary Logo *", 1, "row", "pt-4", 3, "maxFileSize"], ["upload", ""], [1, "row", "pt-2", "actions-container"], [1, "col-md-3", "offset-md-6"], ["type", "button", "ejs-button", "", 1, "e-flat", 3, "click"], [1, "col-md-3"], ["ejs-button", "", 1, "e-success"]], template: function CarrierCreateComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](0, "form", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("ngSubmit", function CarrierCreateComponent_Template_form_ngSubmit_0_listener() { return ctx.onSubmit(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](1, "div", 1)(2, "page-title");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](3, "New Carrier");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](4, "return-button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](5, "div", 3)(6, "div", 4)(7, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](8, "ejs-textbox", 6)(9, "app-field-error-display", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](10, "region-list", 8, 9)(12, "single-upload", 10, 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](14, "div", 12)(15, "div", 13)(16, "button", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("click", function CarrierCreateComponent_Template_button_click_16_listener() { return ctx.onClear(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](17, "Clear");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](18, "div", 15)(19, "button", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](20, "Add Carrier");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]()()()()()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("formGroup", ctx.form);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](9);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("displayError", ctx.inputValidatorService.isInvalidRequired(ctx.form, "name"));
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("maxFileSize", ctx.MaxFileSizes.FullSizeLogo);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_12__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormGroupDirective, _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_5__.PageTitleComponent, _shared_components_return_button_return_button_component__WEBPACK_IMPORTED_MODULE_6__.ReturnButtonComponent, _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_13__.TextBoxComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.MaxLengthValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.RequiredValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControlName, _shared_components_field_error_display_field_error_display_component__WEBPACK_IMPORTED_MODULE_7__.FieldErrorDisplayComponent, _shared_region_list_region_list_component__WEBPACK_IMPORTED_MODULE_8__.RegionListComponent, _shared_components_single_upload_single_upload_component__WEBPACK_IMPORTED_MODULE_9__.SingleUploadComponent, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_14__.ButtonComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYXJyaWVyLWNyZWF0ZS5jb21wb25lbnQuc2NzcyJ9 */"] });


/***/ }),

/***/ 22496:
/*!********************************************************************************************!*\
  !*** ./src/app/admin/carrier-management/components/carrier-edit/carrier-edit.component.ts ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CarrierEditComponent": () => (/* binding */ CarrierEditComponent)
/* harmony export */ });
/* harmony import */ var _forms_carrier_edit_form_group__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../forms/carrier-edit-form-group */ 70285);
/* harmony import */ var src_app_shared_constants_file_sizes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/shared/constants/file-sizes */ 16706);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _services_carrier_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/carrier.service */ 61988);
/* harmony import */ var _core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/services/result.handler.service */ 32464);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/components/page-title/page-title.component */ 46896);
/* harmony import */ var _shared_components_return_button_return_button_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/components/return-button/return-button.component */ 44188);
/* harmony import */ var _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @syncfusion/ej2-angular-inputs */ 53691);
/* harmony import */ var _shared_region_list_region_list_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../shared/region-list/region-list.component */ 60096);
/* harmony import */ var _shared_components_single_upload_single_upload_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/single-upload/single-upload.component */ 40031);
/* harmony import */ var _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @syncfusion/ej2-angular-buttons */ 78218);














const _c0 = ["upload"];
const _c1 = ["regions"];
function CarrierEditComponent_div_9_div_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](0, "div", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](1, " This field is required. ");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
} }
function CarrierEditComponent_div_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtemplate"](1, CarrierEditComponent_div_9_div_1_Template, 2, 0, "div", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("ngIf", ctx_r0.name.errors.required && ctx_r0.name.touched);
} }
class CarrierEditComponent {
    constructor(route, carrierService, resultHandler, location) {
        this.carrierService = carrierService;
        this.resultHandler = resultHandler;
        this.location = location;
        this.MaxFileSizes = src_app_shared_constants_file_sizes__WEBPACK_IMPORTED_MODULE_1__.MaxFileSizes;
        const data = route.snapshot.data["carrier"];
        if (data.isSuccess) {
            this.carrier = data.value;
            this.carrierRegions = data.value.regions.map(r => r.id);
        }
        else {
            this.resultHandler.handle(data);
        }
    }
    ngOnInit() {
        this.initializeForm();
    }
    initializeForm() {
        this.form = (0,_forms_carrier_edit_form_group__WEBPACK_IMPORTED_MODULE_0__.getCarrierEditFormGroup)(this.carrier);
    }
    return() {
        this.location.back();
    }
    onSubmit() {
        this.form.markAllAsTouched();
        if (!this.form.valid)
            return;
        const file = this.upload.getFile();
        const formValues = this.form.getRawValue();
        const carrierUpdate = {
            name: formValues.name.trim(),
            regionsIds: this.regionsComponent.getSelectedIds()
        };
        this.carrierService.validateUpdate(this.carrier.id, carrierUpdate, file).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success)
                    this.updateCarrier(carrierUpdate, file);
            });
        }, (err) => {
            this.resultHandler.handle(err.error).then((success) => {
                if (success)
                    this.updateCarrier(carrierUpdate, file);
            });
        });
    }
    onUndo() {
        this.initializeForm();
        this.regionsComponent.reset();
        this.upload.reset();
    }
    updateCarrier(carrierUpdate, file) {
        this.carrierService.updateCarrier(this.carrier.id, carrierUpdate, file).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success)
                    this.return();
            });
        }, (err) => {
            this.resultHandler.handle(err.error);
        });
    }
    get name() { return this.form.get('name'); }
}
CarrierEditComponent.ɵfac = function CarrierEditComponent_Factory(t) { return new (t || CarrierEditComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_9__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_services_carrier_service__WEBPACK_IMPORTED_MODULE_2__.CarrierService), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_3__.ResultHandlerService), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_10__.Location)); };
CarrierEditComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineComponent"]({ type: CarrierEditComponent, selectors: [["app-carrier-edit"]], viewQuery: function CarrierEditComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵviewQuery"](_c1, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵloadQuery"]()) && (ctx.upload = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵloadQuery"]()) && (ctx.regionsComponent = _t.first);
    } }, decls: 21, vars: 6, consts: [[3, "formGroup", "ngSubmit"], [1, "container-fluid"], ["sufix", "To Carriers"], [1, "e-card", "mt-4", "p-1", "pb-4"], [1, "e-card-content"], [1, "form-group"], ["placeholder", "Carrier Name", "floatLabelType", "Always", "autocomplete", "off", "maxlength", "255", "required", "", "formControlName", "name"], [4, "ngIf"], ["title", "Assign States", 3, "selectedIds"], ["regions", ""], ["title", "Upload Primary Logo *", 1, "row", "pt-4", 3, "currentFilePath", "maxFileSize"], ["upload", ""], [1, "row", "pt-2", "actions-container"], [1, "col-md-3", "offset-md-6"], ["type", "button", "ejs-button", "", 1, "e-flat", 3, "click"], [1, "col-md-3"], ["ejs-button", "", 1, "e-success"], ["class", "e-error", 4, "ngIf"], [1, "e-error"]], template: function CarrierEditComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](0, "form", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("ngSubmit", function CarrierEditComponent_Template_form_ngSubmit_0_listener() { return ctx.onSubmit(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](1, "div", 1)(2, "page-title");
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](4, "return-button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](5, "div", 3)(6, "div", 4)(7, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](8, "ejs-textbox", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtemplate"](9, CarrierEditComponent_div_9_Template, 2, 1, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](10, "region-list", 8, 9)(12, "single-upload", 10, 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](14, "div", 12)(15, "div", 13)(16, "button", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("click", function CarrierEditComponent_Template_button_click_16_listener() { return ctx.onUndo(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](17, "Undo");
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](18, "div", 15)(19, "button", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](20, "Save");
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]()()()()()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("formGroup", ctx.form);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtextInterpolate1"]("Edit ", ctx.carrier == null ? null : ctx.carrier.name, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("ngIf", ctx.name != null && ctx.name.errors);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("selectedIds", ctx.carrierRegions);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("currentFilePath", ctx.carrier.primaryLogoFilePath)("maxFileSize", ctx.MaxFileSizes.FullSizeLogo);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_11__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_11__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormGroupDirective, _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_4__.PageTitleComponent, _shared_components_return_button_return_button_component__WEBPACK_IMPORTED_MODULE_5__.ReturnButtonComponent, _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_12__.TextBoxComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.MaxLengthValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.RequiredValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormControlName, _angular_common__WEBPACK_IMPORTED_MODULE_10__.NgIf, _shared_region_list_region_list_component__WEBPACK_IMPORTED_MODULE_6__.RegionListComponent, _shared_components_single_upload_single_upload_component__WEBPACK_IMPORTED_MODULE_7__.SingleUploadComponent, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_13__.ButtonComponent], encapsulation: 2 });


/***/ }),

/***/ 43045:
/*!********************************************************************************************!*\
  !*** ./src/app/admin/carrier-management/components/carrier-list/carrier-list.component.ts ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CarrierListComponent": () => (/* binding */ CarrierListComponent)
/* harmony export */ });
/* harmony import */ var _shared_components_base_grid_base_grid_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shared/components/base-grid/base-grid.component */ 84766);
/* harmony import */ var src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/shared/constants/application-urls */ 85561);
/* harmony import */ var src_app_shared_utilities_url_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/utilities/url-utils */ 82000);
/* harmony import */ var src_app_shared_utilities_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/shared/utilities/shared */ 14364);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/services/result.handler.service */ 32464);
/* harmony import */ var _services_carrier_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/carrier.service */ 61988);
/* harmony import */ var _shared_components_container_list_container_list_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/container-list/container-list.component */ 91317);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 27723);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _shared_components_edit_button_edit_button_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/edit-button/edit-button.component */ 81297);
/* harmony import */ var _shared_components_restore_button_restore_button_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/restore-button/restore-button.component */ 24805);
/* harmony import */ var _shared_components_delete_button_delete_button_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/delete-button/delete-button.component */ 36820);














function CarrierListComponent_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](0, "img", 8);
} if (rf & 2) {
    const data_r5 = ctx.$implicit;
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵpropertyInterpolate"]("alt", data_r5.name);
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("src", ctx_r2.getFilePathEncoded(data_r5.primaryLogoFilePath), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵsanitizeUrl"]);
} }
function CarrierListComponent_ng_template_10_edit_button_0_Template(rf, ctx) { if (rf & 1) {
    const _r11 = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](0, "edit-button", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("click", function CarrierListComponent_ng_template_10_edit_button_0_Template_edit_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵrestoreView"](_r11); const data_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵnextContext"]().$implicit; const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵnextContext"](); return ctx_r9.onEditCarrier(data_r6); });
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
} }
function CarrierListComponent_ng_template_10_restore_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r14 = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](0, "restore-button", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("click", function CarrierListComponent_ng_template_10_restore_button_1_Template_restore_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵrestoreView"](_r14); const data_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵnextContext"]().$implicit; const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵnextContext"](); return ctx_r12.onRestoreCarrier(data_r6); });
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
} }
function CarrierListComponent_ng_template_10_Template(rf, ctx) { if (rf & 1) {
    const _r16 = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtemplate"](0, CarrierListComponent_ng_template_10_edit_button_0_Template, 1, 0, "edit-button", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtemplate"](1, CarrierListComponent_ng_template_10_restore_button_1_Template, 1, 0, "restore-button", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](2, "delete-button", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("click", function CarrierListComponent_ng_template_10_Template_delete_button_click_2_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵrestoreView"](_r16); const data_r6 = restoredCtx.$implicit; const ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵnextContext"](); return ctx_r15.onDeleteCarrier(data_r6); });
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r6 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("ngIf", data_r6.active);
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("ngIf", !data_r6.active);
} }
class CarrierListComponent extends _shared_components_base_grid_base_grid_component__WEBPACK_IMPORTED_MODULE_0__.BaseGridComponent {
    constructor(route, router, resultHandler, carrierService) {
        super();
        this.router = router;
        this.resultHandler = resultHandler;
        this.carrierService = carrierService;
        this.replaceParams = src_app_shared_utilities_url_utils__WEBPACK_IMPORTED_MODULE_2__.UrlUtils.replaceParams;
        this.createCarrierUrl = src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_1__.ApplicationUrls.GlobalToolSuite.CarrierManagement.NewCarrier.path;
        this.getFilePathEncoded = src_app_shared_utilities_shared__WEBPACK_IMPORTED_MODULE_3__.getFilePathEncoded;
        var data = route.snapshot.data["carriers"];
        this.handleCarriers(data);
    }
    ngOnInit() {
        this.filterSettings = { type: 'CheckBox' };
        this.searchSettings = { fields: ['name'] };
    }
    handleCarriers(data) {
        if (data.isSuccess) {
            this.carriers = data.value;
            this.regionsFilter = this.getRegionsFilter();
            this.setupPagination(this.carriers);
        }
        else {
            this.resultHandler.handle(data);
        }
    }
    loadCarriers() {
        this.carrierService.getCarriers(!this.showArchived).subscribe((data) => {
            this.handleCarriers(data);
        }, (err) => this.resultHandler.handle(err.error));
    }
    onArchiveChange(showArchived) {
        this.showArchived = showArchived;
        this.loadCarriers();
    }
    onEditCarrier(carrier) {
        const path = this.replaceParams(src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_1__.ApplicationUrls.GlobalToolSuite.CarrierManagement.EditCarrier.path, carrier.id);
        this.router.navigate([path]);
    }
    onRestoreCarrier(carrier) {
        this.carrierService.validateRestore(carrier).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.restoreCarrier(carrier);
                }
            });
        }, (err) => {
            this.resultHandler.handle(err.error).then((success) => {
                if (success) {
                    this.restoreCarrier(carrier);
                }
            });
        });
    }
    restoreCarrier(carrier) {
        this.carrierService.restoreCarrier(carrier).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.loadCarriers();
                }
            });
        }, (err) => {
            this.resultHandler.handle(err.error);
        });
    }
    onDeleteCarrier(carrier) {
        this.carrierService.validateDelete(carrier).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.deleteCarrier(carrier);
                }
            });
        }, (err) => {
            this.resultHandler.handle(err.error).then((success) => {
                if (success) {
                    this.deleteCarrier(carrier);
                }
            });
        });
    }
    deleteCarrier(carrier) {
        this.carrierService.delete(carrier).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.loadCarriers();
                }
            });
        }, (err) => {
            this.resultHandler.handle(err.error);
        });
    }
    actionBegin(e) {
        switch (e.requestType) {
            case 'filtering':
                e.columns.forEach((col) => {
                    if (col.field === "regionsDisplay" && col.operator === 'equal') {
                        col.operator = "contains";
                    }
                });
                break;
            case 'filterbeforeopen':
                if (e.columnName === "regionsDisplay") {
                    e.filterModel.options.dataSource = this.regionsFilter;
                }
                break;
        }
    }
    getRegionsFilter() {
        var regions = this.carriers.flatMap(r => r.regionsDisplay.split(', '))
            .filter((v, i, a) => a.indexOf(v) === i);
        return regions.map((r) => { return { regionsDisplay: r }; });
    }
}
CarrierListComponent.ɵfac = function CarrierListComponent_Factory(t) { return new (t || CarrierListComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_11__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_11__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_4__.ResultHandlerService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_services_carrier_service__WEBPACK_IMPORTED_MODULE_5__.CarrierService)); };
CarrierListComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineComponent"]({ type: CarrierListComponent, selectors: [["app-carrier-list"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵInheritDefinitionFeature"]], decls: 12, vars: 8, consts: [["title", "Carrier Management", "searchPlaceHolder", "Search Carrier Name...", "actionButtonText", "New Carrier", 3, "actionButtonLink", "search", "archiveChange"], [3, "dataSource", "allowPaging", "allowSorting", "allowFiltering", "filterSettings", "pageSettings", "searchSettings", "actionBegin"], ["grid", ""], ["field", "name", "headerText", "Carrier Name", "textAlign", "Left"], ["field", "regionsDisplay", "headerText", "States", "textAlign", "Left", "width", "110"], ["headerText", "Primary Logo", "textAlign", "Center", "width", "150"], ["template", ""], ["headerText", "Actions", "textAlign", "Left", "width", "240"], [1, "primaryLogo", 3, "alt", "src"], [3, "click", 4, "ngIf"], [3, "click"]], template: function CarrierListComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](0, "container-list", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("search", function CarrierListComponent_Template_container_list_search_0_listener($event) { return ctx.search($event); })("archiveChange", function CarrierListComponent_Template_container_list_archiveChange_0_listener($event) { return ctx.onArchiveChange($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](1, "ejs-grid", 1, 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("actionBegin", function CarrierListComponent_Template_ejs_grid_actionBegin_1_listener($event) { return ctx.actionBegin($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](3, "e-columns");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](4, "e-column", 3)(5, "e-column", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](6, "e-column", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtemplate"](7, CarrierListComponent_ng_template_7_Template, 1, 2, "ng-template", null, 6, _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](9, "e-column", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtemplate"](10, CarrierListComponent_ng_template_10_Template, 3, 2, "ng-template", null, 6, _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]()()()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("actionButtonLink", ctx.createCarrierUrl);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("dataSource", ctx.carriers)("allowPaging", ctx.allowPaging)("allowSorting", true)("allowFiltering", true)("filterSettings", ctx.filterSettings)("pageSettings", ctx.pageSettings)("searchSettings", ctx.searchSettings);
    } }, directives: [_shared_components_container_list_container_list_component__WEBPACK_IMPORTED_MODULE_6__.ContainerListComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.AggregateColumnDirective, _angular_common__WEBPACK_IMPORTED_MODULE_13__.NgIf, _shared_components_edit_button_edit_button_component__WEBPACK_IMPORTED_MODULE_7__.EditButtonComponent, _shared_components_restore_button_restore_button_component__WEBPACK_IMPORTED_MODULE_8__.RestoreButtonComponent, _shared_components_delete_button_delete_button_component__WEBPACK_IMPORTED_MODULE_9__.DeleteButtonComponent], styles: [".primaryLogo[_ngcontent-%COMP%] {\n  max-width: 140px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhcnJpZXItbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFBO0FBQ0YiLCJmaWxlIjoiY2Fycmllci1saXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnByaW1hcnlMb2dvIHtcclxuICBtYXgtd2lkdGg6IDE0MHB4O1xyXG59XHJcbiJdfQ== */"] });


/***/ }),

/***/ 69950:
/*!*****************************************************************************!*\
  !*** ./src/app/admin/carrier-management/forms/carrier-create-form-group.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getCarrierCreateFormGroup": () => (/* binding */ getCarrierCreateFormGroup)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-angular-inputs */ 53691);


function getCarrierCreateFormGroup(carrier) {
    return new _angular_forms__WEBPACK_IMPORTED_MODULE_0__.FormGroup({
        name: new _angular_forms__WEBPACK_IMPORTED_MODULE_0__.FormControl(carrier ? carrier.name : '', [_syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_1__.FormValidators.required])
    });
}


/***/ }),

/***/ 70285:
/*!***************************************************************************!*\
  !*** ./src/app/admin/carrier-management/forms/carrier-edit-form-group.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getCarrierEditFormGroup": () => (/* binding */ getCarrierEditFormGroup)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-angular-inputs */ 53691);


function getCarrierEditFormGroup(carrier) {
    return new _angular_forms__WEBPACK_IMPORTED_MODULE_0__.FormGroup({
        name: new _angular_forms__WEBPACK_IMPORTED_MODULE_0__.FormControl(carrier ? carrier.name : '', [_syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_1__.FormValidators.required])
    });
}


/***/ }),

/***/ 218:
/*!*****************************************************************************!*\
  !*** ./src/app/admin/carrier-management/resolvers/carrier-edit.resolver.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CarrierEditResolver": () => (/* binding */ CarrierEditResolver)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _services_carrier_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../services/carrier.service */ 61988);


class CarrierEditResolver {
    constructor(carrierService) {
        this.carrierService = carrierService;
    }
    resolve(route, state) {
        const id = Number(route.paramMap.get('id'));
        return this.carrierService.getCarrierById(id);
    }
}
CarrierEditResolver.ɵfac = function CarrierEditResolver_Factory(t) { return new (t || CarrierEditResolver)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_services_carrier_service__WEBPACK_IMPORTED_MODULE_0__.CarrierService)); };
CarrierEditResolver.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: CarrierEditResolver, factory: CarrierEditResolver.ɵfac });


/***/ }),

/***/ 20296:
/*!*****************************************************************************!*\
  !*** ./src/app/admin/carrier-management/resolvers/carrier-list.resolver.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CarrierListResolver": () => (/* binding */ CarrierListResolver)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _services_carrier_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../services/carrier.service */ 61988);


class CarrierListResolver {
    constructor(carrierService) {
        this.carrierService = carrierService;
    }
    resolve(route, state) {
        return this.carrierService.getCarriers(true);
    }
}
CarrierListResolver.ɵfac = function CarrierListResolver_Factory(t) { return new (t || CarrierListResolver)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_services_carrier_service__WEBPACK_IMPORTED_MODULE_0__.CarrierService)); };
CarrierListResolver.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: CarrierListResolver, factory: CarrierListResolver.ɵfac });


/***/ }),

/***/ 10489:
/*!**************************************************************************!*\
  !*** ./src/app/admin/carrier-management/services/carrier.api.service.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CarrierApiService": () => (/* binding */ CarrierApiService)
/* harmony export */ });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _core_api_base_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/api/base.api.service */ 14089);
/* harmony import */ var _constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants/admin-api.constants */ 86937);
/* harmony import */ var _shared_utilities_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../shared/utilities/shared */ 14364);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);






class CarrierApiService extends _core_api_base_api_service__WEBPACK_IMPORTED_MODULE_0__.BaseAPIService {
    constructor(baseApiUrl_Web, http) {
        super(baseApiUrl_Web, http);
    }
    createCarrier(carrier, file) {
        const formData = (0,_shared_utilities_shared__WEBPACK_IMPORTED_MODULE_2__.toFormData)(carrier);
        if (file != null)
            formData.append("file", file);
        return this.http.post(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.CreateCarrier()), formData);
    }
    getCarriers(active) {
        let params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__.HttpParams()
            .set('active', active);
        return this.http.get(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.GetCarriers()), { params });
    }
    getCarrier(id) {
        return this.http.get(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.GetCarrierById(id)));
    }
    validateUpdate(id, carrier, file) {
        const formData = (0,_shared_utilities_shared__WEBPACK_IMPORTED_MODULE_2__.toFormData)(carrier);
        if (file != null)
            formData.append("file", file);
        return this.http.post(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.ValidateUpdateCarrier(id)), formData);
    }
    updateCarrier(id, carrier, file) {
        const formData = (0,_shared_utilities_shared__WEBPACK_IMPORTED_MODULE_2__.toFormData)(carrier);
        if (file != null)
            formData.append("file", file);
        return this.http.put(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.UpdateCarrier(id)), formData);
    }
    validateDelete(carrier) {
        return this.http.post(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.ValidateDeleteCarrier()), carrier);
    }
    delete(id) {
        return this.http.delete(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.DeleteCarrier(id)));
    }
    validateRestore(carrier) {
        return this.http.post(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.ValidateRestoreCarrier()), carrier);
    }
    restoreCarrier(id) {
        return this.http.post(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.RestoreCarrier(id)), null);
    }
}
CarrierApiService.ɵfac = function CarrierApiService_Factory(t) { return new (t || CarrierApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"]("BASE_API_URL_WEB"), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__.HttpClient)); };
CarrierApiService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjectable"]({ token: CarrierApiService, factory: CarrierApiService.ɵfac, providedIn: "root" });


/***/ }),

/***/ 61988:
/*!**********************************************************************!*\
  !*** ./src/app/admin/carrier-management/services/carrier.service.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CarrierService": () => (/* binding */ CarrierService)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _carrier_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./carrier.api.service */ 10489);


class CarrierService {
    constructor(carrierApiService) {
        this.carrierApiService = carrierApiService;
    }
    createCarrier(carrier, file) {
        return this.carrierApiService.createCarrier(carrier, file);
    }
    getCarriers(active) {
        return this.carrierApiService.getCarriers(active);
    }
    getCarrierById(id) {
        return this.carrierApiService.getCarrier(id);
    }
    validateUpdate(id, carrier, file) {
        return this.carrierApiService.validateUpdate(id, carrier, file);
    }
    updateCarrier(id, carrier, file) {
        return this.carrierApiService.updateCarrier(id, carrier, file);
    }
    validateDelete(carrier) {
        return this.carrierApiService.validateDelete(carrier);
    }
    delete(carrier) {
        return this.carrierApiService.delete(carrier.id);
    }
    validateRestore(carrier) {
        return this.carrierApiService.validateRestore(carrier);
    }
    restoreCarrier(carrier) {
        return this.carrierApiService.restoreCarrier(carrier.id);
    }
}
CarrierService.ɵfac = function CarrierService_Factory(t) { return new (t || CarrierService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_carrier_api_service__WEBPACK_IMPORTED_MODULE_0__.CarrierApiService)); };
CarrierService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: CarrierService, factory: CarrierService.ɵfac });


/***/ }),

/***/ 80715:
/*!*****************************************************************************************!*\
  !*** ./src/app/admin/file-management/components/file-manager/file-manager.component.ts ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FileManagerComponent": () => (/* binding */ FileManagerComponent)
/* harmony export */ });
/* harmony import */ var _core_api_base_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/api/base.api.service */ 14089);
/* harmony import */ var _constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../constants/admin-api.constants */ 86937);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _authentication_services_account_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../authentication/services/account.service */ 94398);
/* harmony import */ var _syncfusion_ej2_angular_filemanager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @syncfusion/ej2-angular-filemanager */ 56892);






class FileManagerComponent extends _core_api_base_api_service__WEBPACK_IMPORTED_MODULE_0__.BaseAPIService {
    constructor(baseApiUrl_Web, http, accountService) {
        super(baseApiUrl_Web, http);
        this.baseApiUrl_Web = baseApiUrl_Web;
        this.accountService = accountService;
        this.allowDragAndDrop = true;
    }
    ngOnInit() {
        this.ajaxSettings = {
            url: this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.FileOperations()),
            downloadUrl: this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.Download()),
            uploadUrl: this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.Upload()),
            getImageUrl: this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.GetImage())
        };
    }
    beforeSend(args) {
        let token = this.accountService.getCurrentUserAuthToken();
        args.ajaxSettings.beforeSend = function (args) {
            //Setting authorization header 
            args.httpRequest.setRequestHeader("Authorization", "Bearer " + token);
        };
    }
}
FileManagerComponent.ɵfac = function FileManagerComponent_Factory(t) { return new (t || FileManagerComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"]("BASE_API_URL_WEB"), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpClient), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_authentication_services_account_service__WEBPACK_IMPORTED_MODULE_2__.AccountService)); };
FileManagerComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: FileManagerComponent, selectors: [["app-file-manager"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵInheritDefinitionFeature"]], decls: 5, vars: 2, consts: [[1, "container-fluid"], [1, "row"], [3, "ajaxSettings", "allowDragAndDrop", "beforeSend"]], template: function FileManagerComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 0)(1, "h1");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](2, "File manager");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](3, "div", 1)(4, "ejs-filemanager", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("beforeSend", function FileManagerComponent_Template_ejs_filemanager_beforeSend_4_listener($event) { return ctx.beforeSend($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]()()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ajaxSettings", ctx.ajaxSettings)("allowDragAndDrop", ctx.allowDragAndDrop);
    } }, directives: [_syncfusion_ej2_angular_filemanager__WEBPACK_IMPORTED_MODULE_5__.FileManagerComponent], encapsulation: 2 });


/***/ }),

/***/ 61385:
/*!***************************************************************************************************************!*\
  !*** ./src/app/admin/global-tool-suite/components/global-tool-suite-list/global-tool-suite-list.component.ts ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GlobalToolSuiteListComponent": () => (/* binding */ GlobalToolSuiteListComponent)
/* harmony export */ });
/* harmony import */ var _fortawesome_pro_regular_svg_icons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @fortawesome/pro-regular-svg-icons */ 26966);
/* harmony import */ var src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/shared/constants/application-urls */ 85561);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shared/components/page-title/page-title.component */ 46896);
/* harmony import */ var _shared_components_page_description_page_description_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/components/page-description/page-description.component */ 89424);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _shared_components_horizontal_card_horizontal_card_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/components/horizontal-card/horizontal-card.component */ 86190);







class GlobalToolSuiteListComponent {
    constructor() {
        this.faBuilding = _fortawesome_pro_regular_svg_icons__WEBPACK_IMPORTED_MODULE_4__.faBuilding;
        this.faFlagUsa = _fortawesome_pro_regular_svg_icons__WEBPACK_IMPORTED_MODULE_4__.faFlagUsa;
        this.faIdBadge = _fortawesome_pro_regular_svg_icons__WEBPACK_IMPORTED_MODULE_4__.faIdBadge;
        this.faMemoCircleInfo = _fortawesome_pro_regular_svg_icons__WEBPACK_IMPORTED_MODULE_4__.faMemoCircleInfo;
        this.faToolbox = _fortawesome_pro_regular_svg_icons__WEBPACK_IMPORTED_MODULE_4__.faToolbox;
        this.faUsers = _fortawesome_pro_regular_svg_icons__WEBPACK_IMPORTED_MODULE_4__.faUsers;
        this.userManagementUrl = src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_0__.ApplicationUrls.GlobalToolSuite.UserManagement.path;
        this.roleManagementUrl = src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_0__.ApplicationUrls.GlobalToolSuite.RoleManagement.path;
        this.stateManagementUrl = src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_0__.ApplicationUrls.GlobalToolSuite.StateManagement.path;
        this.carrierManagementUrl = src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_0__.ApplicationUrls.GlobalToolSuite.CarrierManagement.path;
        this.toolsManagementUrl = src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_0__.ApplicationUrls.GlobalToolSuite.ToolsManagement.path;
        this.resourceCenterUrl = src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_0__.ApplicationUrls.GlobalToolSuite.ResourceCenter.path;
    }
    ngOnInit() {
    }
}
GlobalToolSuiteListComponent.ɵfac = function GlobalToolSuiteListComponent_Factory(t) { return new (t || GlobalToolSuiteListComponent)(); };
GlobalToolSuiteListComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineComponent"]({ type: GlobalToolSuiteListComponent, selectors: [["app-global-tool-suite-list"]], decls: 19, vars: 12, consts: [[1, "container-fluid"], [1, "row"], [1, "col-md-12"], [1, "e-card", "card-list", "mb-3", 3, "routerLink"], ["title", "User Management", "description", "This is where you can manage non-GAIT user accounts and GAIT internal User Accounts.", 3, "buttonIcon"], ["title", "Role Management", "description", "This is where you can assign a user to have access to specific admin tools at different permission levels.", 3, "buttonIcon"], ["title", "State Management", "description", "This is where you manage the states that are available for the different tools.", 3, "buttonIcon"], ["title", "Carrier Management", "description", "This is where you can define all of the available carriers for each of the tools.", 3, "buttonIcon"], ["title", "Tools Management", "description", "This is where you control what states and carriers are available within specific tools.", 3, "buttonIcon"], ["title", "Resource Center", "description", "This is where you control each tool's resource description, links, display order and default settings.", 3, "buttonIcon"]], template: function GlobalToolSuiteListComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "page-title");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](4, "Global Tool Suite");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](5, "page-description");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](6, "Select tool to view each tool's management options.");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](7, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](8, "horizontal-card", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](9, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](10, "horizontal-card", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](11, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](12, "horizontal-card", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](13, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](14, "horizontal-card", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](15, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](16, "horizontal-card", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](17, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](18, "horizontal-card", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()()()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("routerLink", ctx.userManagementUrl);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("buttonIcon", ctx.faUsers);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("routerLink", ctx.roleManagementUrl);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("buttonIcon", ctx.faIdBadge);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("routerLink", ctx.stateManagementUrl);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("buttonIcon", ctx.faFlagUsa);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("routerLink", ctx.carrierManagementUrl);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("buttonIcon", ctx.faBuilding);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("routerLink", ctx.toolsManagementUrl);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("buttonIcon", ctx.faToolbox);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("routerLink", ctx.resourceCenterUrl);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("buttonIcon", ctx.faMemoCircleInfo);
    } }, directives: [_shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_1__.PageTitleComponent, _shared_components_page_description_page_description_component__WEBPACK_IMPORTED_MODULE_2__.PageDescriptionComponent, _angular_router__WEBPACK_IMPORTED_MODULE_6__.RouterLink, _shared_components_horizontal_card_horizontal_card_component__WEBPACK_IMPORTED_MODULE_3__.HorizontalCardComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJnbG9iYWwtdG9vbC1zdWl0ZS1saXN0LmNvbXBvbmVudC5zY3NzIn0= */"] });


/***/ }),

/***/ 60136:
/*!************************************************************************!*\
  !*** ./src/app/admin/logs/components/logs-list/logs-list.component.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LogsListComponent": () => (/* binding */ LogsListComponent)
/* harmony export */ });
/* harmony import */ var _syncfusion_ej2_notifications__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @syncfusion/ej2-notifications */ 81456);
/* harmony import */ var _forms_logs_form_group__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../forms/logs-form-group */ 65069);
/* harmony import */ var _shared_utilities_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shared/utilities/shared */ 14364);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _services_logs_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/logs.service */ 83348);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _syncfusion_ej2_angular_calendars__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @syncfusion/ej2-angular-calendars */ 10370);
/* harmony import */ var _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @syncfusion/ej2-angular-inputs */ 53691);
/* harmony import */ var _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @syncfusion/ej2-angular-buttons */ 78218);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 27723);
/* harmony import */ var angular2_prettyjson__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! angular2-prettyjson */ 24794);













function LogsListComponent_ejs_grid_15_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpipe"](1, "date");
} if (rf & 2) {
    const data_r5 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpipeBind2"](1, 1, data_r5.timestamp, "MM/dd/yyyy HH:mm:ss"), " ");
} }
function LogsListComponent_ejs_grid_15_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](0, "prettyjson", 18);
} if (rf & 2) {
    const data_r6 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("obj", data_r6.json);
} }
function LogsListComponent_ejs_grid_15_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "ejs-grid", 12)(1, "e-columns")(2, "e-column", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](3, LogsListComponent_ejs_grid_15_ng_template_3_Template, 2, 4, "ng-template", null, 14, _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](5, "e-column", 15)(6, "e-column", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](7, LogsListComponent_ejs_grid_15_ng_template_7_Template, 1, 1, "ng-template", null, 17, _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("dataSource", ctx_r0.logs)("allowPaging", true)("allowSorting", true)("allowFiltering", true)("filterSettings", ctx_r0.filterSettings)("pageSettings", ctx_r0.pageSettings);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("filter", ctx_r0.filter);
} }
class LogsListComponent {
    constructor(route, logsService) {
        this.logsService = logsService;
        this.day = new Date().getDate();
        this.month = new Date().getMonth();
        this.fullYear = new Date().getFullYear();
        this.maxDate = new Date(this.fullYear, this.month, this.day, 23, 59, 59);
        this.today = new Date(this.fullYear, this.month, this.day, 0, 0, 0);
        this.form = (0,_forms_logs_form_group__WEBPACK_IMPORTED_MODULE_0__.getLogsFormGroup)({
            endDate: this.maxDate,
            startDate: this.today,
            filterPattern: ''
        });
        var data = route.snapshot.data["logs"];
        if (data.isSuccess) {
            this.logs = this.convertLogs(data.value);
        }
    }
    ngOnInit() {
        this.pageSettings = { pageSize: 10 };
        this.filterSettings = { type: "Menu" };
        this.filter = { type: "CheckBox" };
    }
    convertLogs(logs) {
        return logs.map(function (d) {
            return {
                timestamp: _shared_utilities_shared__WEBPACK_IMPORTED_MODULE_1__.DateDisplayFunctions.createDateTimeDisplayValue(d.timestamp),
                message: d.message,
                level: d.level,
                json: JSON.parse(d.json)
            };
        });
    }
    onSubmit() {
        if (!this.form.valid) {
            _syncfusion_ej2_notifications__WEBPACK_IMPORTED_MODULE_5__.ToastUtility.show({
                content: 'Form is invalid!',
                position: { X: 'Right', Y: 'Top' },
                cssClass: 'e-toast-danger'
            });
            return;
        }
        const formValues = this.form.getRawValue();
        this.logsService.getWithFilters({
            startDate: formValues.startDate,
            endDate: formValues.endDate,
            filterPattern: formValues.filterPattern
        }).subscribe((data) => {
            if (data.isSuccess) {
                this.logs = this.convertLogs(data.value);
            }
            else {
                _syncfusion_ej2_notifications__WEBPACK_IMPORTED_MODULE_5__.ToastUtility.show({
                    content: 'Error retriving the logs!',
                    position: { X: 'Right', Y: 'Top' },
                    cssClass: 'e-toast-danger'
                });
            }
        }, (err) => {
            _syncfusion_ej2_notifications__WEBPACK_IMPORTED_MODULE_5__.ToastUtility.show({
                content: err.error.errors.join('\n'),
                position: { X: 'Right', Y: 'Top' },
                cssClass: 'e-toast-danger'
            });
        });
    }
}
LogsListComponent.ɵfac = function LogsListComponent_Factory(t) { return new (t || LogsListComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_6__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_services_logs_service__WEBPACK_IMPORTED_MODULE_2__.LogsService)); };
LogsListComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({ type: LogsListComponent, selectors: [["app-logs-list"]], decls: 16, vars: 4, consts: [[3, "formGroup", "ngSubmit"], [1, "container-fluid"], ["id", "tableLabel"], [1, "row"], [1, "form-group", "col-md-3"], ["placeholder", "Start date", "floatLabelType", "Always", "formControlName", "startDate", 3, "max"], ["placeholder", "End date", "floatLabelType", "Always", "formControlName", "endDate", 3, "max"], ["placeholder", "Filter Pattern", "floatLabelType", "Always", "formControlName", "filterPattern"], [1, "row", "mb-3", "mt-3"], [1, "form-group"], ["ejs-button", "", 1, "col-md-1"], [3, "dataSource", "allowPaging", "allowSorting", "allowFiltering", "filterSettings", "pageSettings", 4, "ngIf"], [3, "dataSource", "allowPaging", "allowSorting", "allowFiltering", "filterSettings", "pageSettings"], ["field", "timestamp", "headerText", "Timestamp", "textAlign", "Left", "width", "190"], ["template", ""], ["field", "level", "headerText", "Level", "textAlign", "Left", "width", "120", 3, "filter"], ["field", "message", "headerText", "Message", "textAlign", "Left"], ["detailTemplate", ""], [3, "obj"]], template: function LogsListComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "form", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("ngSubmit", function LogsListComponent_Template_form_ngSubmit_0_listener() { return ctx.onSubmit(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "div", 1)(2, "h1", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](3, "CloudWatch logs");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](4, "div", 3)(5, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](6, "ejs-datetimepicker", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](7, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](8, "ejs-datetimepicker", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](9, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](10, "ejs-textbox", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](11, "div", 8)(12, "div", 9)(13, "button", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](14, "Search");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]()()();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](15, LogsListComponent_ejs_grid_15_Template, 9, 7, "ejs-grid", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("formGroup", ctx.form);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("max", ctx.maxDate);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("max", ctx.maxDate);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx.logs);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_7__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_7__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormGroupDirective, _syncfusion_ej2_angular_calendars__WEBPACK_IMPORTED_MODULE_8__.DateTimePickerComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_7__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormControlName, _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_9__.TextBoxComponent, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_10__.ButtonComponent, _angular_common__WEBPACK_IMPORTED_MODULE_11__.NgIf, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.AggregateColumnDirective, angular2_prettyjson__WEBPACK_IMPORTED_MODULE_3__["ɵa"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_11__.DatePipe], encapsulation: 2 });


/***/ }),

/***/ 65069:
/*!*****************************************************!*\
  !*** ./src/app/admin/logs/forms/logs-form-group.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getLogsFormGroup": () => (/* binding */ getLogsFormGroup)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/forms */ 90587);

function getLogsFormGroup(_filter) {
    return new _angular_forms__WEBPACK_IMPORTED_MODULE_0__.FormGroup({
        startDate: new _angular_forms__WEBPACK_IMPORTED_MODULE_0__.FormControl(_filter ? _filter.startDate : null, [
            _angular_forms__WEBPACK_IMPORTED_MODULE_0__.Validators.required
        ]),
        endDate: new _angular_forms__WEBPACK_IMPORTED_MODULE_0__.FormControl(_filter ? _filter.endDate : null, [
            _angular_forms__WEBPACK_IMPORTED_MODULE_0__.Validators.required
        ]),
        filterPattern: new _angular_forms__WEBPACK_IMPORTED_MODULE_0__.FormControl(_filter ? _filter.filterPattern : '', [
            _angular_forms__WEBPACK_IMPORTED_MODULE_0__.Validators.maxLength(120)
        ])
    });
}


/***/ }),

/***/ 13559:
/*!************************************************************!*\
  !*** ./src/app/admin/logs/resolvers/logs-list.resolver.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LogsListResolver": () => (/* binding */ LogsListResolver)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _services_logs_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../services/logs.service */ 83348);


class LogsListResolver {
    constructor(logsService) {
        this.logsService = logsService;
    }
    resolve(route, state) {
        return this.logsService.get();
    }
}
LogsListResolver.ɵfac = function LogsListResolver_Factory(t) { return new (t || LogsListResolver)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_services_logs_service__WEBPACK_IMPORTED_MODULE_0__.LogsService)); };
LogsListResolver.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: LogsListResolver, factory: LogsListResolver.ɵfac });


/***/ }),

/***/ 17163:
/*!*********************************************************!*\
  !*** ./src/app/admin/logs/services/logs.api.service.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LogsDataApiService": () => (/* binding */ LogsDataApiService)
/* harmony export */ });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _core_api_base_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/api/base.api.service */ 14089);
/* harmony import */ var _constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants/admin-api.constants */ 86937);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);





class LogsDataApiService extends _core_api_base_api_service__WEBPACK_IMPORTED_MODULE_0__.BaseAPIService {
    constructor(baseApiUrl_Web, http) {
        super(baseApiUrl_Web, http);
    }
    get() {
        return this.http.get(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.GetLogs()));
    }
    getWithFilters(filter) {
        let params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('startDate', filter.startDate.toJSON())
            .set('endDate', filter.endDate.toJSON())
            .set('filterPattern', filter.filterPattern);
        return this.http.get(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.GetLogs()), { params });
    }
}
LogsDataApiService.ɵfac = function LogsDataApiService_Factory(t) { return new (t || LogsDataApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"]("BASE_API_URL_WEB"), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpClient)); };
LogsDataApiService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjectable"]({ token: LogsDataApiService, factory: LogsDataApiService.ɵfac, providedIn: "root" });


/***/ }),

/***/ 83348:
/*!*****************************************************!*\
  !*** ./src/app/admin/logs/services/logs.service.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LogsService": () => (/* binding */ LogsService)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _logs_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logs.api.service */ 17163);


class LogsService {
    constructor(logsDataApiService) {
        this.logsDataApiService = logsDataApiService;
    }
    get() {
        return this.logsDataApiService.get();
    }
    getWithFilters(filter) {
        return this.logsDataApiService.getWithFilters(filter);
    }
}
LogsService.ɵfac = function LogsService_Factory(t) { return new (t || LogsService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_logs_api_service__WEBPACK_IMPORTED_MODULE_0__.LogsDataApiService)); };
LogsService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: LogsService, factory: LogsService.ɵfac });


/***/ }),

/***/ 53600:
/*!*******************************************************************************************!*\
  !*** ./src/app/admin/region-management/components/country-list/country-list.component.ts ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CountryListComponent": () => (/* binding */ CountryListComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _services_country_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../services/country.service */ 4487);
/* harmony import */ var _services_region_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../services/region.service */ 59194);
/* harmony import */ var _core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/services/result.handler.service */ 32464);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/components/page-title/page-title.component */ 46896);
/* harmony import */ var _shared_components_page_description_page_description_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/components/page-description/page-description.component */ 89424);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @syncfusion/ej2-angular-buttons */ 78218);










function CountryListComponent_div_8_div_5_Template(rf, ctx) { if (rf & 1) {
    const _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "div")(1, "ejs-checkbox", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("checkedChange", function CountryListComponent_div_8_div_5_Template_ejs_checkbox_checkedChange_1_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r5); const region_r3 = restoredCtx.$implicit; return region_r3.active = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()();
} if (rf & 2) {
    const region_r3 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpropertyInterpolate"]("label", region_r3.name);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("checked", region_r3.active);
} }
const _c0 = function (a0) { return [a0]; };
function CountryListComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "div", 10)(1, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](3, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](4, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](5, CountryListComponent_div_8_div_5_Template, 2, 2, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()();
} if (rf & 2) {
    const country_r1 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](country_r1.name);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpureFunction1"](3, _c0, "regions-container-" + country_r1.regions.length));
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngForOf", country_r1.regions);
} }
class CountryListComponent {
    constructor(route, countryService, regionService, resultHandler) {
        this.countryService = countryService;
        this.regionService = regionService;
        this.resultHandler = resultHandler;
        var data = route.snapshot.data["countries"];
        if (data.isSuccess) {
            this.countries = data.value;
        }
        else {
            this.resultHandler.handle(data);
        }
    }
    ngOnInit() {
    }
    resetRegions() {
        this.countryService.get().subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.countries = data.value;
                }
            });
        }, (err) => {
            this.resultHandler.handle(err.error);
        });
    }
    onSubmit() {
        var regions = this.countries.flatMap(a => a.regions).map((r) => {
            return { id: r.id, active: r.active };
        });
        this.regionService.validateUpdate(regions).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.updateRegions(regions);
                }
            });
        }, (err) => {
            this.resultHandler.handle(err.error).then((success) => {
                if (success) {
                    this.updateRegions(regions);
                }
            });
        });
    }
    updateRegions(regions) {
        this.regionService.update(regions).subscribe((data) => {
            this.resultHandler.handle(data);
        }, (err) => {
            this.resultHandler.handle(err.error);
        });
    }
}
CountryListComponent.ɵfac = function CountryListComponent_Factory(t) { return new (t || CountryListComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_6__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_services_country_service__WEBPACK_IMPORTED_MODULE_0__.CountryService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_services_region_service__WEBPACK_IMPORTED_MODULE_1__.RegionService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_2__.ResultHandlerService)); };
CountryListComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineComponent"]({ type: CountryListComponent, selectors: [["app-country-list"]], decls: 16, vars: 1, consts: [[3, "ngSubmit"], [1, "container-fluid"], [1, "row"], [1, "col-md-12"], ["class", "e-card", 4, "ngFor", "ngForOf"], [1, "row", "pt-4", "actions-container"], [1, "col-md-3", "offset-md-6"], ["type", "button", "ejs-button", "", 1, "e-flat", 3, "click"], [1, "col-md-3"], ["ejs-button", "", 1, "e-success"], [1, "e-card"], [1, "e-card-title", "fw-bold"], [1, "e-card-separator"], [1, "row", "regions-container", 3, "ngClass"], [4, "ngFor", "ngForOf"], [3, "label", "checked", "checkedChange"]], template: function CountryListComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "form", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("ngSubmit", function CountryListComponent_Template_form_ngSubmit_0_listener() { return ctx.onSubmit(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "page-title");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](5, "State Management");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](6, "page-description");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](7, "Select state to make active, unselect to make inactive.");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](8, CountryListComponent_div_8_Template, 6, 5, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](9, "div", 5)(10, "div", 6)(11, "button", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function CountryListComponent_Template_button_click_11_listener() { return ctx.resetRegions(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](12, "Undo");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](13, "div", 8)(14, "button", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](15, "Save");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()()()()()()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngForOf", ctx.countries);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_7__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_7__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_7__.NgForm, _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_3__.PageTitleComponent, _shared_components_page_description_page_description_component__WEBPACK_IMPORTED_MODULE_4__.PageDescriptionComponent, _angular_common__WEBPACK_IMPORTED_MODULE_8__.NgForOf, _angular_common__WEBPACK_IMPORTED_MODULE_8__.NgClass, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_9__.CheckBoxComponent, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_9__.ButtonComponent], styles: [".regions-container[_ngcontent-%COMP%] {\n  display: grid;\n  grid-auto-flow: column;\n  padding: 1rem;\n  padding-right: 2rem;\n  justify-content: space-between;\n}\n.regions-container-50[_ngcontent-%COMP%] {\n  grid-template-rows: repeat(13, 1fr);\n}\n@media only screen and (max-width: 765px) {\n  .regions-container[_ngcontent-%COMP%] {\n    display: flex;\n  }\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvdW50cnktbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLDhCQUFBO0FBQ0Y7QUFDRTtFQUNFLG1DQUFBO0FBQ0o7QUFHQTtFQUNFO0lBQ0UsYUFBQTtFQUFGO0FBQ0YiLCJmaWxlIjoiY291bnRyeS1saXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlZ2lvbnMtY29udGFpbmVyIHtcclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtYXV0by1mbG93OiBjb2x1bW47XHJcbiAgcGFkZGluZzogMXJlbTtcclxuICBwYWRkaW5nLXJpZ2h0OiAycmVtO1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuXHJcbiAgJi01MCB7XHJcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgxMywgMWZyKTtcclxuICB9XHJcbn1cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY1cHgpIHtcclxuICAucmVnaW9ucy1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICB9XHJcbn1cclxuIl19 */"] });


/***/ }),

/***/ 71461:
/*!****************************************************************************!*\
  !*** ./src/app/admin/region-management/resolvers/country-list.resolver.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CountryListResolver": () => (/* binding */ CountryListResolver)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _services_country_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../services/country.service */ 4487);


class CountryListResolver {
    constructor(countryService) {
        this.countryService = countryService;
    }
    resolve(route, state) {
        return this.countryService.get();
    }
}
CountryListResolver.ɵfac = function CountryListResolver_Factory(t) { return new (t || CountryListResolver)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_services_country_service__WEBPACK_IMPORTED_MODULE_0__.CountryService)); };
CountryListResolver.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: CountryListResolver, factory: CountryListResolver.ɵfac });


/***/ }),

/***/ 72098:
/*!*************************************************************************!*\
  !*** ./src/app/admin/region-management/services/country.api.service.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CountryApiService": () => (/* binding */ CountryApiService)
/* harmony export */ });
/* harmony import */ var _core_api_base_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/api/base.api.service */ 14089);
/* harmony import */ var _constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants/admin-api.constants */ 86937);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ 28784);




class CountryApiService extends _core_api_base_api_service__WEBPACK_IMPORTED_MODULE_0__.BaseAPIService {
    constructor(baseApiUrl_Web, http) {
        super(baseApiUrl_Web, http);
    }
    get() {
        return this.http.get(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.GetCountries()));
    }
}
CountryApiService.ɵfac = function CountryApiService_Factory(t) { return new (t || CountryApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"]("BASE_API_URL_WEB"), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__.HttpClient)); };
CountryApiService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: CountryApiService, factory: CountryApiService.ɵfac, providedIn: "root" });


/***/ }),

/***/ 4487:
/*!*********************************************************************!*\
  !*** ./src/app/admin/region-management/services/country.service.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CountryService": () => (/* binding */ CountryService)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _country_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./country.api.service */ 72098);


class CountryService {
    constructor(countryApiService) {
        this.countryApiService = countryApiService;
    }
    get() {
        return this.countryApiService.get();
    }
}
CountryService.ɵfac = function CountryService_Factory(t) { return new (t || CountryService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_country_api_service__WEBPACK_IMPORTED_MODULE_0__.CountryApiService)); };
CountryService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: CountryService, factory: CountryService.ɵfac });


/***/ }),

/***/ 39560:
/*!*********************************************************************************************************!*\
  !*** ./src/app/admin/resource-center/components/resource-center-edit/resource-center-edit.component.ts ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResourceCenterEditComponent": () => (/* binding */ ResourceCenterEditComponent)
/* harmony export */ });
/* harmony import */ var _shared_components_base_grid_base_grid_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shared/components/base-grid/base-grid.component */ 84766);
/* harmony import */ var _fortawesome_pro_light_svg_icons__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @fortawesome/pro-light-svg-icons */ 67538);
/* harmony import */ var src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/shared/constants/application-urls */ 85561);
/* harmony import */ var src_app_shared_utilities_url_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/utilities/url-utils */ 82000);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_app_shared_services_input_validator_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/shared/services/input-validator.service */ 68516);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _services_resource_center_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/resource-center.service */ 39537);
/* harmony import */ var src_app_admin_region_management_services_region_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/admin/region-management/services/region.service */ 59194);
/* harmony import */ var src_app_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/core/services/result.handler.service */ 32464);
/* harmony import */ var _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/page-title/page-title.component */ 46896);
/* harmony import */ var _shared_components_page_description_page_description_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/page-description/page-description.component */ 89424);
/* harmony import */ var _shared_components_return_button_return_button_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/return-button/return-button.component */ 44188);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _shared_components_information_text_information_text_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/components/information-text/information-text.component */ 43350);
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 24779);
/* harmony import */ var _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @syncfusion/ej2-angular-buttons */ 78218);
/* harmony import */ var _fortawesome_angular_fontawesome__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @fortawesome/angular-fontawesome */ 19397);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 27723);
/* harmony import */ var _shared_components_edit_button_edit_button_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/components/edit-button/edit-button.component */ 81297);
/* harmony import */ var _shared_components_delete_button_delete_button_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../shared/components/delete-button/delete-button.component */ 36820);
/* harmony import */ var _syncfusion_ej2_angular_popups__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @syncfusion/ej2-angular-popups */ 58917);
/* harmony import */ var _resource_link_resource_link_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../resource-link/resource-link.component */ 49937);
























const _c0 = ["ejDialog"];
const _c1 = ["resourceLinkComponent"];
function ResourceCenterEditComponent_app_information_text_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](0, "app-information-text", 25);
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("redirect", ctx_r0.replaceParams(ctx_r0.internalToolManagementUrl, ctx_r0.tool.id));
} }
const _c2 = function (a0) { return { data: a0 }; };
function ResourceCenterEditComponent_app_information_text_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](0, "app-information-text", 26);
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("redirect", ctx_r1.replaceParams(ctx_r1.externalToolManagementUrl, ctx_r1.tool.id))("state", _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵpureFunction1"](2, _c2, ctx_r1.tool));
} }
function ResourceCenterEditComponent_ng_template_48_Template(rf, ctx) { if (rf & 1) {
    const _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](0, "edit-button", 27);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("click", function ResourceCenterEditComponent_ng_template_48_Template_edit_button_click_0_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r8); const data_r6 = restoredCtx.$implicit; const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r7.onOpenDialog("Edit Resource Link", data_r6); });
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](1, "delete-button", 27);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("click", function ResourceCenterEditComponent_ng_template_48_Template_delete_button_click_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r8); const data_r6 = restoredCtx.$implicit; const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r9.onDeleteResourceLink(data_r6); });
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
} }
class ResourceCenterEditComponent extends _shared_components_base_grid_base_grid_component__WEBPACK_IMPORTED_MODULE_0__.BaseGridComponent {
    constructor(route, inputValidatorService, fb, resourceCenterService, regionService, resultHandler) {
        super();
        this.inputValidatorService = inputValidatorService;
        this.fb = fb;
        this.resourceCenterService = resourceCenterService;
        this.regionService = regionService;
        this.resultHandler = resultHandler;
        this.replaceParams = src_app_shared_utilities_url_utils__WEBPACK_IMPORTED_MODULE_2__.UrlUtils.replaceParams;
        this.internalToolManagementUrl = src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_1__.ApplicationUrls.GlobalToolSuite.ToolsManagement.EditTool.path;
        this.externalToolManagementUrl = src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_1__.ApplicationUrls.GlobalToolSuite.ToolsManagement.GeneralInformation.path;
        this.faPlus = _fortawesome_pro_light_svg_icons__WEBPACK_IMPORTED_MODULE_15__.faPlus;
        this.fields = { text: 'name', value: 'id' };
        const data = route.snapshot.data["tool"];
        this.handleTool(data);
    }
    handleTool(tool) {
        if (tool.isSuccess) {
            this.tool = tool.value;
            this.loadResourceLinks();
        }
        else {
            this.resultHandler.handle(tool);
        }
    }
    handleResourceLinks(resourceLinks) {
        if (resourceLinks.isSuccess) {
            this.tool.resourceLinks = resourceLinks.value;
        }
        else {
            this.resultHandler.handle(resourceLinks);
        }
    }
    ngOnInit() {
        this.regionService.getActiveRegions().subscribe((data) => {
            if (data.isSuccess) {
                this.regions = data.value;
            }
            else {
                this.resultHandler.handle(data);
            }
        });
    }
    loadResourceLinks() {
        this.resourceCenterService.getResourceLinks(this.tool.id).subscribe((data) => {
            this.handleResourceLinks(data);
        }, (err) => this.resultHandler.handle(err.error));
    }
    filterByRegion($event) {
        if ($event.itemData == null) {
            this.loadResourceLinks();
        }
        else {
            var region = $event.itemData;
            this.resourceCenterService.getResourceLinks(this.tool.id, region.id).subscribe((data) => {
                this.handleResourceLinks(data);
            }, (err) => this.resultHandler.handle(err.error));
        }
    }
    onRowDrop($event) {
        const link = $event.data[0];
        const newOrder = $event.dropIndex + 1;
        if (link.order == newOrder)
            return;
        this.resourceCenterService.updateResourceLinkOrder($event.data[0].id, newOrder).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.loadResourceLinks();
                }
            });
        }, (err) => this.resultHandler.handle(err.error));
    }
    onSaveResourceLink() {
        this.onOverlayClick();
        this.loadResourceLinks();
    }
    onOpenDialog(title, event) {
        this.resourceLinkComponent.setResourceLink(event);
        this.title = title;
        this.ejDialog.show();
    }
    ;
    onDeleteResourceLink(model) {
        this.resourceCenterService.validateDeleteResourceLink(model).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.deleteResourceLink(model.id);
                }
            });
        }, (err) => {
            this.resultHandler.handle(err.error).then((success) => {
                if (success) {
                    this.deleteResourceLink(model.id);
                }
            });
        });
    }
    deleteResourceLink(id) {
        this.resourceCenterService.deleteResourceLink(id).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.loadResourceLinks();
                }
            });
        }, (err) => {
            this.resultHandler.handle(err.error);
        });
    }
    onOverlayClick() {
        this.ejDialog.hide();
    }
}
ResourceCenterEditComponent.ɵfac = function ResourceCenterEditComponent_Factory(t) { return new (t || ResourceCenterEditComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_16__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](src_app_shared_services_input_validator_service__WEBPACK_IMPORTED_MODULE_3__.InputValidatorService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_services_resource_center_service__WEBPACK_IMPORTED_MODULE_4__.ResourceCenterService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](src_app_admin_region_management_services_region_service__WEBPACK_IMPORTED_MODULE_5__.RegionService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](src_app_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_6__.ResultHandlerService)); };
ResourceCenterEditComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdefineComponent"]({ type: ResourceCenterEditComponent, selectors: [["app-resource-center-edit"]], viewQuery: function ResourceCenterEditComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵviewQuery"](_c1, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵloadQuery"]()) && (ctx.ejDialog = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵloadQuery"]()) && (ctx.resourceLinkComponent = _t.first);
    } }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵInheritDefinitionFeature"]], decls: 54, vars: 16, consts: [[1, "container-fluid"], ["sufix", "To Resource Center"], [1, "e-card", "mt-4", "p-3", "pb-4"], [1, "fw-bold"], ["text", "You can modify the General Information of this tool in", "title", "Tools Management", 3, "redirect", 4, "ngIf"], ["text", "You can modify the General Information of this tool in", "title", "Tools Management", 3, "redirect", "state", 4, "ngIf"], [1, "general-table"], [1, "e-card-header", "mt-2"], [1, "align-middle", "mb-3"], [1, "fw-bold", "mr-3"], [3, "dataSource", "fields", "change"], ["type", "button", "ejs-button", "", 1, "e-success", "mb-3", 3, "click"], [3, "icon"], [1, "e-card-content"], [3, "dataSource", "allowTextWrap", "allowRowDragAndDrop", "rowDrop"], ["field", "order", "headerText", "#", "width", "40"], ["field", "type", "headerText", "Type"], ["field", "title", "headerText", "Title"], ["field", "url", "headerText", "Url"], ["headerText", "Actions", "width", "240"], ["template", ""], ["isModal", "true", "width", "500", 3, "visible", "overlayClick"], ["ejDialog", ""], [3, "regions", "toolId", "title", "onSaveResourceLink", "onClearForm"], ["resourceLinkComponent", ""], ["text", "You can modify the General Information of this tool in", "title", "Tools Management", 3, "redirect"], ["text", "You can modify the General Information of this tool in", "title", "Tools Management", 3, "redirect", "state"], [3, "click"]], template: function ResourceCenterEditComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](0, "div", 0)(1, "page-title");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](3, "page-description");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](4, "return-button", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](5, "div", 2)(6, "label", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](7, "General Information");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplate"](8, ResourceCenterEditComponent_app_information_text_8_Template, 1, 1, "app-information-text", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplate"](9, ResourceCenterEditComponent_app_information_text_9_Template, 1, 4, "app-information-text", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](10, "table")(11, "tr")(12, "td", 6)(13, "label", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](14, "Name");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](15, "td");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](16);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](17, "tr")(18, "td", 6)(19, "label", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](20, "Description");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](21, "td");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](22);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](23, "tr")(24, "td", 6)(25, "label", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](26, "Favorited by Default");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](27, "td");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](28);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]()()()();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](29, "div", 2)(30, "label", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](31, "Resource Links");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](32, "div", 7)(33, "div", 8)(34, "label", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](35, "Select State");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](36, "ejs-combobox", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("change", function ResourceCenterEditComponent_Template_ejs_combobox_change_36_listener($event) { return ctx.filterByRegion($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](37, "button", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("click", function ResourceCenterEditComponent_Template_button_click_37_listener() { return ctx.onOpenDialog("New Resource Link"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](38, "fa-icon", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](39, " Add New ");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](40, "div", 13)(41, "ejs-grid", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("rowDrop", function ResourceCenterEditComponent_Template_ejs_grid_rowDrop_41_listener($event) { return ctx.onRowDrop($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](42, "e-columns");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](43, "e-column", 15)(44, "e-column", 16)(45, "e-column", 17)(46, "e-column", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](47, "e-column", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplate"](48, ResourceCenterEditComponent_ng_template_48_Template, 2, 0, "ng-template", null, 20, _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]()()()()()();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](50, "ejs-dialog", 21, 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("overlayClick", function ResourceCenterEditComponent_Template_ejs_dialog_overlayClick_50_listener() { return ctx.onOverlayClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](52, "app-resource-link", 23, 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("onSaveResourceLink", function ResourceCenterEditComponent_Template_app_resource_link_onSaveResourceLink_52_listener() { return ctx.onSaveResourceLink(); })("onClearForm", function ResourceCenterEditComponent_Template_app_resource_link_onClearForm_52_listener() { return ctx.onOverlayClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtextInterpolate"](ctx.tool.name);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("ngIf", ctx.tool.isExternal);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("ngIf", !ctx.tool.isExternal);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtextInterpolate"](ctx.tool.name);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtextInterpolate"](ctx.tool.description);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtextInterpolate"](ctx.tool.isFavoritedByDefaultView);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("dataSource", ctx.regions)("fields", ctx.fields);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("icon", ctx.faPlus);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("dataSource", ctx.tool.resourceLinks)("allowTextWrap", true)("allowRowDragAndDrop", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](9);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("visible", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("regions", ctx.regions)("toolId", ctx.tool.id)("title", ctx.title);
    } }, directives: [_shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_7__.PageTitleComponent, _shared_components_page_description_page_description_component__WEBPACK_IMPORTED_MODULE_8__.PageDescriptionComponent, _shared_components_return_button_return_button_component__WEBPACK_IMPORTED_MODULE_9__.ReturnButtonComponent, _angular_common__WEBPACK_IMPORTED_MODULE_18__.NgIf, _shared_components_information_text_information_text_component__WEBPACK_IMPORTED_MODULE_10__.InformationTextComponent, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_19__.ComboBoxComponent, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_20__.ButtonComponent, _fortawesome_angular_fontawesome__WEBPACK_IMPORTED_MODULE_21__.FaIconComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_22__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_22__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_22__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_22__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_22__.AggregateColumnDirective, _shared_components_edit_button_edit_button_component__WEBPACK_IMPORTED_MODULE_11__.EditButtonComponent, _shared_components_delete_button_delete_button_component__WEBPACK_IMPORTED_MODULE_12__.DeleteButtonComponent, _syncfusion_ej2_angular_popups__WEBPACK_IMPORTED_MODULE_23__.DialogComponent, _resource_link_resource_link_component__WEBPACK_IMPORTED_MODULE_13__.ResourceLinkComponent], styles: [".general-table[_ngcontent-%COMP%] {\n  width: 30%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc291cmNlLWNlbnRlci1lZGl0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtBQUNGIiwiZmlsZSI6InJlc291cmNlLWNlbnRlci1lZGl0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmdlbmVyYWwtdGFibGUge1xyXG4gIHdpZHRoOiAzMCU7XHJcbn1cclxuIl19 */"] });


/***/ }),

/***/ 87298:
/*!****************************************************************************************************!*\
  !*** ./src/app/admin/resource-center/components/resource-center-list/resource-center.component.ts ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResourceCenterComponent": () => (/* binding */ ResourceCenterComponent)
/* harmony export */ });
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 27723);
/* harmony import */ var src_app_shared_components_base_grid_base_grid_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/shared/components/base-grid/base-grid.component */ 84766);
/* harmony import */ var src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/shared/constants/application-urls */ 85561);
/* harmony import */ var src_app_shared_utilities_url_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/utilities/url-utils */ 82000);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_app_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/core/services/result.handler.service */ 32464);
/* harmony import */ var _services_resource_center_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/resource-center.service */ 39537);
/* harmony import */ var src_app_shared_services_shared_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/shared/services/shared.service */ 97282);
/* harmony import */ var _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/page-title/page-title.component */ 46896);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @syncfusion/ej2-angular-inputs */ 53691);
/* harmony import */ var _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @syncfusion/ej2-angular-buttons */ 78218);
/* harmony import */ var _shared_components_edit_button_edit_button_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/edit-button/edit-button.component */ 81297);















function ResourceCenterComponent_ng_template_27_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](0, "edit-button", 17);
} if (rf & 2) {
    const data_r2 = ctx.$implicit;
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("routerLink", ctx_r1.replaceParams(ctx_r1.editToolUrl, data_r2.id));
} }
class ResourceCenterComponent extends src_app_shared_components_base_grid_base_grid_component__WEBPACK_IMPORTED_MODULE_0__.BaseGridComponent {
    constructor(route, resultHandler, resourceCenterService, sharedService) {
        super();
        this.resultHandler = resultHandler;
        this.resourceCenterService = resourceCenterService;
        this.sharedService = sharedService;
        this.replaceParams = src_app_shared_utilities_url_utils__WEBPACK_IMPORTED_MODULE_2__.UrlUtils.replaceParams;
        this.editToolUrl = src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_1__.ApplicationUrls.GlobalToolSuite.ResourceCenter.EditTool.path;
        this.pageDescription = "";
        var data = route.snapshot.data["tools"];
        this.handleTools(data);
    }
    handleTools(tools) {
        if (tools.isSuccess) {
            this.data = tools.value;
            this.setupPagination(this.data);
        }
        else {
            this.resultHandler.handle(tools);
        }
    }
    loadTools() {
        this.sharedService.getTools(undefined, undefined, false, !this.showArchived).subscribe((data) => {
            this.handleTools(data);
        }, (err) => this.resultHandler.handle(err.error));
    }
    ngOnInit() {
        this.selectOptions = { type: 'Multiple' };
        this.resetDescription();
    }
    onSubmit() {
        let model = {
            description: this.pageDescription
        };
        this.resourceCenterService.setResourceCenter(model).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.pageDescription = data.value.description;
                }
            });
        }, (err) => {
            this.resultHandler.handle(err.error);
        });
    }
    resetDescription() {
        this.sharedService.getResourceCenter().subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                var _a;
                if (success) {
                    this.pageDescription = (_a = data.value) === null || _a === void 0 ? void 0 : _a.description;
                }
            });
        }, (err) => {
            this.resultHandler.handle(err.error);
        });
    }
}
ResourceCenterComponent.ɵfac = function ResourceCenterComponent_Factory(t) { return new (t || ResourceCenterComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_9__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](src_app_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_3__.ResultHandlerService), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_services_resource_center_service__WEBPACK_IMPORTED_MODULE_4__.ResourceCenterService), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](src_app_shared_services_shared_service__WEBPACK_IMPORTED_MODULE_5__.SharedService)); };
ResourceCenterComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineComponent"]({ type: ResourceCenterComponent, selectors: [["app-resource-center"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵProvidersFeature"]([_syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_10__.RowDDService, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_10__.SelectionService]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵInheritDefinitionFeature"]], decls: 29, vars: 5, consts: [[1, "container-fluid"], [1, "e-card", "mt-4", "p-1", "pb-4"], [3, "ngSubmit"], [1, "e-card-header"], [1, "fw-bold"], [1, "e-card-content"], ["placeholder", "", "floatLabelType", "Always", "autocomplete", "off", "maxlength", "5000", 1, "default-textarea", 3, "multiline", "value", "valueChange"], [1, "row", "pt-2", "actions-container"], [1, "col-md-3", "offset-md-6"], ["type", "button", "ejs-button", "", 1, "e-flat", "btn-default-size", 3, "click"], [1, "col-md-3"], ["ejs-button", "", 1, "e-success", "btn-default-size"], [3, "allowSorting", "dataSource", "selectionSettings"], ["field", "name", "headerText", "Name"], ["field", "resourceLinks.length", "headerText", "Resource Links"], ["headerText", "Actions"], ["template", ""], [3, "routerLink"]], template: function ResourceCenterComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](0, "div", 0)(1, "page-title");
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](2, "Resource Center");
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](3, "div", 1)(4, "form", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("ngSubmit", function ResourceCenterComponent_Template_form_ngSubmit_4_listener() { return ctx.onSubmit(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](5, "div", 3)(6, "p", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](7, "Page Description");
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](8, "div", 5)(9, "ejs-textbox", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("valueChange", function ResourceCenterComponent_Template_ejs_textbox_valueChange_9_listener($event) { return ctx.pageDescription = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](10, "div", 7)(11, "div", 8)(12, "button", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("click", function ResourceCenterComponent_Template_button_click_12_listener() { return ctx.resetDescription(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](13, "Undo");
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](14, "div", 10)(15, "button", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](16, "Save");
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]()()()()();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](17, "div", 1)(18, "div", 3)(19, "p", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](20, "Tools");
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](21, "div", 5)(22, "ejs-grid", 12)(23, "e-columns");
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](24, "e-column", 13)(25, "e-column", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](26, "e-column", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtemplate"](27, ResourceCenterComponent_ng_template_27_Template, 1, 1, "ng-template", null, 16, _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]()()()()()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](9);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("multiline", true)("value", ctx.pageDescription);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](13);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("allowSorting", true)("dataSource", ctx.data)("selectionSettings", ctx.selectOptions);
    } }, directives: [_shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_6__.PageTitleComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_11__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.NgForm, _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_12__.TextBoxComponent, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_13__.ButtonComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_10__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_10__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_10__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_10__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_10__.AggregateColumnDirective, _shared_components_edit_button_edit_button_component__WEBPACK_IMPORTED_MODULE_7__.EditButtonComponent, _angular_router__WEBPACK_IMPORTED_MODULE_9__.RouterLink], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZXNvdXJjZS1jZW50ZXIuY29tcG9uZW50LnNjc3MifQ== */"] });


/***/ }),

/***/ 49937:
/*!*******************************************************************************************!*\
  !*** ./src/app/admin/resource-center/components/resource-link/resource-link.component.ts ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResourceLinkComponent": () => (/* binding */ ResourceLinkComponent)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ 76317);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var src_app_shared_utilities_custom_validators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/shared/utilities/custom-validators */ 19984);
/* harmony import */ var src_app_shared_services_input_validator_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/shared/services/input-validator.service */ 68516);
/* harmony import */ var _services_resource_center_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/resource-center.service */ 39537);
/* harmony import */ var src_app_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/core/services/result.handler.service */ 32464);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 24779);
/* harmony import */ var _shared_components_field_error_display_field_error_display_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/components/field-error-display/field-error-display.component */ 76530);
/* harmony import */ var _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @syncfusion/ej2-angular-inputs */ 53691);
/* harmony import */ var _shared_components_single_upload_single_upload_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/components/single-upload/single-upload.component */ 40031);
/* harmony import */ var _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @syncfusion/ej2-angular-buttons */ 78218);















const _c0 = ["upload"];
function ResourceLinkComponent_ejs_multiselect_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](0, "ejs-multiselect", 16);
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dataSource", ctx_r0.regions)("fields", ctx_r0.fields)("allowCustomValue", false);
} }
function ResourceLinkComponent_div_14_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](1, "ejs-textbox", 17)(2, "app-field-error-display", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("multiline", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("displayError", ctx_r2.inputValidatorService.isInvalidUrl(ctx_r2.form, "url"));
} }
function ResourceLinkComponent_div_15_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](1, "single-upload", 19, 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("showRecommendation", false)("allowExtensions", ctx_r3.getAllowedExtensions())("currentFilePath", ctx_r3.resourceLink == null ? null : ctx_r3.resourceLink.filePath);
} }
class ResourceLinkComponent {
    constructor(fb, inputValidatorService, resourceCenterService, resultHandler) {
        this.fb = fb;
        this.inputValidatorService = inputValidatorService;
        this.resourceCenterService = resourceCenterService;
        this.resultHandler = resultHandler;
        this.types = ['Link', 'Video', 'PDF'];
        this.fields = { text: 'name', value: 'id' };
        this.resourceLink = null;
        this._resourceLinkSubject = new rxjs__WEBPACK_IMPORTED_MODULE_7__.BehaviorSubject(null);
        this.resourceLink$ = this._resourceLinkSubject.asObservable();
        this.onSaveResourceLink = new _angular_core__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();
        this.onClearForm = new _angular_core__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();
    }
    ngOnInit() {
        this.resourceLink$.subscribe(r => {
            this.initializeForm();
            this.resourceLink = Object.assign({}, r);
        });
    }
    showUpload() {
        var _a, _b;
        return this.resourceLink != null && (((_a = this.resourceLink.type) === null || _a === void 0 ? void 0 : _a.toString()) == "PDF" || ((_b = this.resourceLink.type) === null || _b === void 0 ? void 0 : _b.toString()) == "Video");
    }
    showUrl() {
        var _a;
        return this.resourceLink != null && ((_a = this.resourceLink.type) === null || _a === void 0 ? void 0 : _a.toString()) == "Link";
    }
    initializeForm() {
        var _a, _b, _c, _d;
        this.form = this.fb.group({
            regionIds: [(_a = this._resourceLinkSubject.getValue()) === null || _a === void 0 ? void 0 : _a.regionIds, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required],
            type: [(_b = this._resourceLinkSubject.getValue()) === null || _b === void 0 ? void 0 : _b.type, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required],
            title: [(_c = this._resourceLinkSubject.getValue()) === null || _c === void 0 ? void 0 : _c.title, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required],
            url: [(_d = this._resourceLinkSubject.getValue()) === null || _d === void 0 ? void 0 : _d.url, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.pattern(src_app_shared_utilities_custom_validators__WEBPACK_IMPORTED_MODULE_0__.CustomValidators.urlRegex)]
        });
    }
    setResourceLink(resourceLink) {
        this._resourceLinkSubject.next(resourceLink);
    }
    saveResourceLink() {
        var _a, _b;
        this.form.markAllAsTouched();
        if (!this.form.valid) {
            return;
        }
        let model = this.form.value;
        model.toolId = this.toolId;
        model.file = (_a = this.upload) === null || _a === void 0 ? void 0 : _a.getFile();
        if (((_b = this._resourceLinkSubject.getValue()) === null || _b === void 0 ? void 0 : _b.id) != null && this._resourceLinkSubject.getValue().id > 0) {
            this.resourceCenterService.updateResourceLink(this._resourceLinkSubject.getValue().id, model).subscribe((data) => {
                this.resultHandler.handle(data).then((success) => {
                    if (success) {
                        this.clearForm();
                        this.onSaveResourceLink.emit(model);
                    }
                });
            }, (err) => this.resultHandler.handle(err.error));
        }
        else {
            this.resourceCenterService.createResourceLink(model).subscribe((data) => {
                this.resultHandler.handle(data).then((success) => {
                    if (success) {
                        this.clearForm();
                        this.onSaveResourceLink.emit(model);
                    }
                });
            }, (err) => this.resultHandler.handle(err.error));
        }
    }
    clearForm() {
        var _a;
        (_a = this.upload) === null || _a === void 0 ? void 0 : _a.reset();
        this.form.reset();
        this.onClearForm.emit();
    }
    changeFields($event) {
        var _a;
        this.resourceLink.type = $event.itemData.value;
        this.resourceLink.url = '';
        this.resourceLink.filePath = '';
        (_a = this.upload) === null || _a === void 0 ? void 0 : _a.reset();
    }
    getAllowedExtensions() {
        var _a;
        return ((_a = this.resourceLink) === null || _a === void 0 ? void 0 : _a.type.toString()) == "PDF" ? ".pdf" : ".mp4, .mov, .wmv, .avi, .avchd, .flv, .f4v, .swf, .mkv, .webm, .mpeg-2";
    }
}
ResourceLinkComponent.ɵfac = function ResourceLinkComponent_Factory(t) { return new (t || ResourceLinkComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](src_app_shared_services_input_validator_service__WEBPACK_IMPORTED_MODULE_1__.InputValidatorService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_services_resource_center_service__WEBPACK_IMPORTED_MODULE_2__.ResourceCenterService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](src_app_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_3__.ResultHandlerService)); };
ResourceLinkComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineComponent"]({ type: ResourceLinkComponent, selectors: [["app-resource-link"]], viewQuery: function ResourceLinkComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵviewQuery"](_c0, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵloadQuery"]()) && (ctx.upload = _t.first);
    } }, inputs: { title: "title", regions: "regions", toolId: "toolId" }, outputs: { onSaveResourceLink: "onSaveResourceLink", onClearForm: "onClearForm" }, decls: 22, vars: 12, consts: [[3, "formGroup", "ngSubmit"], [1, "m-3"], [1, "fw-bold"], [1, "form-group"], ["placeholder", "State", "floatLabelType", "Always", "formControlName", "regionIds", 3, "dataSource", "fields", "allowCustomValue", 4, "ngIf"], ["errorMsg", "* This field is required.", 3, "displayError"], ["placeholder", "Type", "floatLabelType", "Always", "formControlName", "type", 3, "dataSource", "fields", "allowCustom", "change"], ["type", ""], ["floatLabelType", "Always", "autocomplete", "off", "maxlength", "255", "formControlName", "title", "placeholder", "Title", 3, "multiline"], ["class", "form-group", 4, "ngIf"], [4, "ngIf"], [1, "row", "pt-2", "actions-container", "mt-4"], [1, "col-md-3"], ["ejs-button", "", "type", "button", "value", "Cancel", 1, "btn-default-size", 3, "click"], [1, "col-md-3", "offset-md-6"], ["ejs-button", "", 1, "e-success", "btn-default-size"], ["placeholder", "State", "floatLabelType", "Always", "formControlName", "regionIds", 3, "dataSource", "fields", "allowCustomValue"], ["autocomplete", "off", "maxlength", "255", "formControlName", "url", "placeholder", "Url", "floatLabelType", "Always", 1, "default-textarea", 3, "multiline"], ["errorMsg", "* This url is invalid.", 3, "displayError"], ["title", "Upload Resource File", 1, "row", "pt-4", "mb-4", 3, "showRecommendation", "allowExtensions", "currentFilePath"], ["upload", ""]], template: function ResourceLinkComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "form", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("ngSubmit", function ResourceLinkComponent_Template_form_ngSubmit_0_listener() { return ctx.saveResourceLink(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "div", 1)(2, "h2", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](4, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](5, ResourceLinkComponent_ejs_multiselect_5_Template, 1, 3, "ejs-multiselect", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](6, "app-field-error-display", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](7, "div", 3)(8, "ejs-combobox", 6, 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("change", function ResourceLinkComponent_Template_ejs_combobox_change_8_listener($event) { return ctx.changeFields($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](10, "app-field-error-display", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](11, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](12, "ejs-textbox", 8)(13, "app-field-error-display", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](14, ResourceLinkComponent_div_14_Template, 3, 2, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](15, ResourceLinkComponent_div_15_Template, 3, 3, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](16, "div", 11)(17, "div", 12)(18, "input", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function ResourceLinkComponent_Template_input_click_18_listener() { return ctx.clearForm(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](19, "div", 14)(20, "button", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](21, "Save");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]()()()()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("formGroup", ctx.form);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate"](ctx.title);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.regions != null && ctx.regions.length > 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("displayError", ctx.inputValidatorService.isInvalidRequired(ctx.form, "regionIds"));
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dataSource", ctx.types)("fields", ctx.fields)("allowCustom", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("displayError", ctx.inputValidatorService.isInvalidRequired(ctx.form, "type"));
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("multiline", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("displayError", ctx.inputValidatorService.isInvalidRequired(ctx.form, "title"));
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.showUrl());
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.showUpload());
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_8__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_8__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormGroupDirective, _angular_common__WEBPACK_IMPORTED_MODULE_9__.NgIf, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_10__.MultiSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControlName, _shared_components_field_error_display_field_error_display_component__WEBPACK_IMPORTED_MODULE_4__.FieldErrorDisplayComponent, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_10__.ComboBoxComponent, _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_11__.TextBoxComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.MaxLengthValidator, _shared_components_single_upload_single_upload_component__WEBPACK_IMPORTED_MODULE_5__.SingleUploadComponent, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_12__.ButtonComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZXNvdXJjZS1saW5rLmNvbXBvbmVudC5zY3NzIn0= */"] });


/***/ }),

/***/ 92117:
/*!*******************************************************************************!*\
  !*** ./src/app/admin/resource-center/services/resource-center.api.service.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResourceCenterApiService": () => (/* binding */ ResourceCenterApiService)
/* harmony export */ });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _core_api_base_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/api/base.api.service */ 14089);
/* harmony import */ var _constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants/admin-api.constants */ 86937);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);





class ResourceCenterApiService extends _core_api_base_api_service__WEBPACK_IMPORTED_MODULE_0__.BaseAPIService {
    constructor(baseApiUrl_Web, http) {
        super(baseApiUrl_Web, http);
    }
    createResourceLink(model) {
        const formData = new FormData();
        formData.append('modelJsonString', JSON.stringify(model));
        if (model != null && model.file != null)
            formData.append("files", model.file);
        return this.http.post(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.CreateResourceLink()), formData);
    }
    deleteResourceLink(id) {
        return this.http.delete(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.DeleteResourceLink(id)));
    }
    getResourceLinkById(id) {
        return this.http.get(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.GetResourceLinkById(id)));
    }
    getResourceLinks(toolId, regionId) {
        let params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('regionId', regionId !== null && regionId !== void 0 ? regionId : '');
        return this.http.get(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.GetResourceLinks(toolId)), { params });
    }
    setResourceCenter(model) {
        return this.http.put(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.SetResourceCenter()), model);
    }
    updateResourceLink(id, model) {
        const formData = new FormData();
        formData.append('modelJsonString', JSON.stringify(model));
        if (model != null && model.file != null)
            formData.append("files", model.file);
        return this.http.put(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.UpdateResourceLink(id)), formData);
    }
    updateResourceLinkOrder(id, newOrder) {
        var resourceLink = { order: newOrder };
        return this.http.put(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.UpdateResourceLinkOrder(id)), resourceLink);
    }
    validateDeleteResourceLink(model) {
        return this.http.post(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.ValidateDeleteResourceLink()), model);
    }
}
ResourceCenterApiService.ɵfac = function ResourceCenterApiService_Factory(t) { return new (t || ResourceCenterApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"]("BASE_API_URL_WEB"), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpClient)); };
ResourceCenterApiService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjectable"]({ token: ResourceCenterApiService, factory: ResourceCenterApiService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 39537:
/*!***************************************************************************!*\
  !*** ./src/app/admin/resource-center/services/resource-center.service.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResourceCenterService": () => (/* binding */ ResourceCenterService)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _resource_center_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./resource-center.api.service */ 92117);


class ResourceCenterService {
    constructor(resourceCenterApiService) {
        this.resourceCenterApiService = resourceCenterApiService;
    }
    createResourceLink(model) {
        return this.resourceCenterApiService.createResourceLink(model);
    }
    deleteResourceLink(id) {
        return this.resourceCenterApiService.deleteResourceLink(id);
    }
    getResourceLinkById(id) {
        return this.resourceCenterApiService.getResourceLinkById(id);
    }
    getResourceLinks(toolId, regionId) {
        return this.resourceCenterApiService.getResourceLinks(toolId, regionId);
    }
    setResourceCenter(model) {
        return this.resourceCenterApiService.setResourceCenter(model);
    }
    updateResourceLink(id, model) {
        return this.resourceCenterApiService.updateResourceLink(id, model);
    }
    updateResourceLinkOrder(id, newOrder) {
        return this.resourceCenterApiService.updateResourceLinkOrder(id, newOrder);
    }
    validateDeleteResourceLink(model) {
        return this.resourceCenterApiService.validateDeleteResourceLink(model);
    }
}
ResourceCenterService.ɵfac = function ResourceCenterService_Factory(t) { return new (t || ResourceCenterService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_resource_center_api_service__WEBPACK_IMPORTED_MODULE_0__.ResourceCenterApiService)); };
ResourceCenterService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: ResourceCenterService, factory: ResourceCenterService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 52087:
/*!*************************************************************************************!*\
  !*** ./src/app/admin/roles/components/role-management/role-management.component.ts ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RoleManagementComponent": () => (/* binding */ RoleManagementComponent)
/* harmony export */ });
/* harmony import */ var _shared_utilities_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shared/utilities/shared */ 14364);
/* harmony import */ var src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/shared/constants/application-urls */ 85561);
/* harmony import */ var src_app_shared_utilities_url_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/utilities/url-utils */ 82000);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/services/result.handler.service */ 32464);
/* harmony import */ var _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/components/page-title/page-title.component */ 46896);
/* harmony import */ var _shared_components_page_description_page_description_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/components/page-description/page-description.component */ 89424);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _shared_tool_icon_tool_icon_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../shared/tool-icon/tool-icon.component */ 87786);










function RoleManagementComponent_div_7_div_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div", 11)(1, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](2, "State Management, Carrier Management, Tools, Management, User Management, Role Management");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]()();
} }
const _c0 = function (a0) { return { data: a0 }; };
function RoleManagementComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div", 4)(1, "div", 5)(2, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](3, "tool-icon", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](4, "div", 8)(5, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](7, RoleManagementComponent_div_7_div_7_Template, 3, 0, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]()()();
} if (rf & 2) {
    const tool_r1 = ctx.$implicit;
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("routerLink", ctx_r0.replaceParams(ctx_r0.roleToolManagementUrl, tool_r1.id))("state", _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵpureFunction1"](5, _c0, ctx_r0.tools));
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("tool", tool_r1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate"](ctx_r0.formatAdminToolName(tool_r1));
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", ctx_r0.isGlobalToolSuite(tool_r1.id));
} }
class RoleManagementComponent {
    constructor(activatedRoute, resultHandler) {
        this.activatedRoute = activatedRoute;
        this.resultHandler = resultHandler;
        this.replaceParams = src_app_shared_utilities_url_utils__WEBPACK_IMPORTED_MODULE_2__.UrlUtils.replaceParams;
        this.roleToolManagementUrl = src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_1__.ApplicationUrls.GlobalToolSuite.RoleManagement.RoleToolManagement.path;
        this.formatAdminToolName = _shared_utilities_shared__WEBPACK_IMPORTED_MODULE_0__.formatAdminToolName;
        this.isGlobalToolSuite = _shared_utilities_shared__WEBPACK_IMPORTED_MODULE_0__.isGlobalToolSuite;
    }
    ngOnInit() {
        var tools = this.activatedRoute.snapshot.data["tools"];
        if (tools.isSuccess) {
            this.tools = tools.value.sort((a, b) => a.id > b.id ? 1 : -1);
        }
        else {
            this.resultHandler.handle(tools);
        }
    }
}
RoleManagementComponent.ɵfac = function RoleManagementComponent_Factory(t) { return new (t || RoleManagementComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_8__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_3__.ResultHandlerService)); };
RoleManagementComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineComponent"]({ type: RoleManagementComponent, selectors: [["app-role-management"]], decls: 8, vars: 1, consts: [[1, "container-fluid"], [1, "row"], [1, "col-md-12"], ["class", "e-card card-list mt-3", 3, "routerLink", "state", 4, "ngFor", "ngForOf"], [1, "e-card", "card-list", "mt-3", 3, "routerLink", "state"], [1, "e-card-header"], [1, "e-card-header-image", "e-card-corner"], [3, "tool"], [1, "e-card-header-caption"], [1, "e-card-header-title", "fw-bold"], ["class", "e-card-sub-title", 4, "ngIf"], [1, "e-card-sub-title"]], template: function RoleManagementComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "page-title");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](4, "Role Management");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](5, "page-description");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](6, "Select tool to view role details.");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](7, RoleManagementComponent_div_7_Template, 8, 7, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]()()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngForOf", ctx.tools);
    } }, directives: [_shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_4__.PageTitleComponent, _shared_components_page_description_page_description_component__WEBPACK_IMPORTED_MODULE_5__.PageDescriptionComponent, _angular_common__WEBPACK_IMPORTED_MODULE_9__.NgForOf, _angular_router__WEBPACK_IMPORTED_MODULE_8__.RouterLink, _shared_tool_icon_tool_icon_component__WEBPACK_IMPORTED_MODULE_6__.ToolIconComponent, _angular_common__WEBPACK_IMPORTED_MODULE_9__.NgIf], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyb2xlLW1hbmFnZW1lbnQuY29tcG9uZW50LnNjc3MifQ== */"] });


/***/ }),

/***/ 36128:
/*!*************************************************************************************!*\
  !*** ./src/app/admin/roles/components/role-tools-list/role-tools-list.component.ts ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RoleToolsListComponent": () => (/* binding */ RoleToolsListComponent)
/* harmony export */ });
/* harmony import */ var _shared_components_base_grid_base_grid_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shared/components/base-grid/base-grid.component */ 84766);
/* harmony import */ var _shared_utilities_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shared/utilities/shared */ 14364);
/* harmony import */ var src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/constants/application-urls */ 85561);
/* harmony import */ var src_app_shared_utilities_url_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/shared/utilities/url-utils */ 82000);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/services/result.handler.service */ 32464);
/* harmony import */ var _shared_services_shared_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/shared.service */ 97282);
/* harmony import */ var _services_role_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/role.service */ 18862);
/* harmony import */ var src_app_core_services_nav_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/core/services/nav.service */ 30651);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _shared_components_container_list_container_list_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/container-list/container-list.component */ 91317);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 27723);
/* harmony import */ var _shared_components_edit_button_edit_button_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/edit-button/edit-button.component */ 81297);
/* harmony import */ var _shared_components_delete_button_delete_button_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/components/delete-button/delete-button.component */ 36820);















function RoleToolsListComponent_container_list_0_ejs_grid_1_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    const _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "edit-button", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function RoleToolsListComponent_container_list_0_ejs_grid_1_ng_template_7_Template_edit_button_click_0_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r8); const data_r6 = restoredCtx.$implicit; const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r7.onEditRole(data_r6); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "delete-button", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function RoleToolsListComponent_container_list_0_ejs_grid_1_ng_template_7_Template_delete_button_click_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r8); const data_r6 = restoredCtx.$implicit; const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r9.onRemoveRole(data_r6); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function RoleToolsListComponent_container_list_0_ejs_grid_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "ejs-grid", 3, 4)(2, "e-columns");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "e-column", 5)(4, "e-column", 6)(5, "e-column", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "e-column", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, RoleToolsListComponent_container_list_0_ejs_grid_1_ng_template_7_Template, 2, 0, "ng-template", null, 9, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]()()();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r1.userRoles)("allowPaging", ctx_r1.allowPaging)("allowSorting", true)("allowFiltering", true)("filterSettings", ctx_r1.filterSettings)("pageSettings", ctx_r1.pageSettings)("searchSettings", ctx_r1.searchSettings);
} }
function RoleToolsListComponent_container_list_0_ejs_grid_2_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    const _r15 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "edit-button", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function RoleToolsListComponent_container_list_0_ejs_grid_2_ng_template_6_Template_edit_button_click_0_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r15); const data_r13 = restoredCtx.$implicit; const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r14.onEditRole(data_r13); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "delete-button", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function RoleToolsListComponent_container_list_0_ejs_grid_2_ng_template_6_Template_delete_button_click_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r15); const data_r13 = restoredCtx.$implicit; const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r16.onRemoveRole(data_r13); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function RoleToolsListComponent_container_list_0_ejs_grid_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "ejs-grid", 3, 4)(2, "e-columns");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "e-column", 5)(4, "e-column", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "e-column", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, RoleToolsListComponent_container_list_0_ejs_grid_2_ng_template_6_Template, 2, 0, "ng-template", null, 9, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]()()();
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r2.userRoles)("allowPaging", ctx_r2.allowPaging)("allowSorting", true)("allowFiltering", true)("filterSettings", ctx_r2.filterSettings)("pageSettings", ctx_r2.pageSettings)("searchSettings", ctx_r2.searchSettings);
} }
function RoleToolsListComponent_container_list_0_Template(rf, ctx) { if (rf & 1) {
    const _r18 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "container-list", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("search", function RoleToolsListComponent_container_list_0_Template_container_list_search_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r18); const ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r17.search($event); })("actionClick", function RoleToolsListComponent_container_list_0_Template_container_list_actionClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r18); const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r19.onAssignUser(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, RoleToolsListComponent_container_list_0_ejs_grid_1_Template, 9, 7, "ejs-grid", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, RoleToolsListComponent_container_list_0_ejs_grid_2_Template, 8, 7, "ejs-grid", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("title", ctx_r0.formatAdminToolName(ctx_r0.tool))("handleArchive", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r0.hasRegion);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.hasRegion);
} }
class RoleToolsListComponent extends _shared_components_base_grid_base_grid_component__WEBPACK_IMPORTED_MODULE_0__.BaseGridComponent {
    constructor(router, route, resultHandler, sharedService, roleService, navService) {
        super();
        this.router = router;
        this.route = route;
        this.resultHandler = resultHandler;
        this.sharedService = sharedService;
        this.roleService = roleService;
        this.navService = navService;
        this.replaceParams = src_app_shared_utilities_url_utils__WEBPACK_IMPORTED_MODULE_3__.UrlUtils.replaceParams;
        this.formatAdminToolName = _shared_utilities_shared__WEBPACK_IMPORTED_MODULE_1__.formatAdminToolName;
        this.hasRegion = false;
        this.handleDataFromRoute();
        route.params.subscribe(val => {
            this.handleDataFromRoute();
            this.handleTool();
        });
    }
    ngOnInit() {
        this.handleTool();
        this.filterSettings = { type: 'CheckBox' };
        this.searchSettings = { fields: ['appUser.name'] };
    }
    handleDataFromRoute() {
        const data = this.route.snapshot.data["roles"];
        this.handleRoles(data);
        this.setupPagination(data.value);
        this.navService.setRoleManagementMenu(this.sharedService);
    }
    handleRoles(data) {
        if (data.isSuccess) {
            this.userRoles = data.value;
            this.hasRegion = data.value.filter(r => r.appRole.region != null).length > 0;
        }
        else {
            this.resultHandler.handle(data);
        }
    }
    handleTool() {
        const id = Number(this.route.snapshot.paramMap.get('toolId'));
        this.sharedService.getTool(id).subscribe((data) => {
            if (data.isSuccess) {
                this.tool = data.value;
            }
            else {
                this.resultHandler.handle(data);
            }
        });
    }
    loadUsersRoles() {
        this.roleService.getUsersRoles(this.tool.id).subscribe((data) => {
            this.handleRoles(data);
        }, (err) => this.resultHandler.handle(err.error));
    }
    onAssignUser() {
        const path = this.replaceParams(src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_2__.ApplicationUrls.GlobalToolSuite.RoleManagement.RoleToolManagement.RoleToolUserManagement.AssignUser.path, this.tool.id);
        this.router.navigate([path], { state: history.state });
    }
    onEditRole(userRole) {
        const path = this.replaceParams(src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_2__.ApplicationUrls.GlobalToolSuite.RoleManagement.RoleToolManagement.RoleToolUserManagement.EditUser.path, this.tool.id, userRole.appUser.id);
        this.router.navigate([path], { state: history.state });
    }
    onRemoveRole(userRole) {
        this.roleService.validateRemoveUserRole(userRole).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.deleteUserRole(userRole);
                }
            });
        }, (err) => {
            this.resultHandler.handle(err.error).then((success) => {
                if (success) {
                    this.deleteUserRole(userRole);
                }
            });
        });
    }
    deleteUserRole(userRole) {
        this.roleService.removeUserRole(userRole.appUser.id, userRole.appRole.id).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.loadUsersRoles();
                }
            });
        }, (err) => {
            this.resultHandler.handle(err.error);
        });
    }
}
RoleToolsListComponent.ɵfac = function RoleToolsListComponent_Factory(t) { return new (t || RoleToolsListComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_12__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_12__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_4__.ResultHandlerService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_shared_services_shared_service__WEBPACK_IMPORTED_MODULE_5__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_services_role_service__WEBPACK_IMPORTED_MODULE_6__.RoleService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_app_core_services_nav_service__WEBPACK_IMPORTED_MODULE_7__.NavService)); };
RoleToolsListComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: RoleToolsListComponent, selectors: [["app-role-tools-list"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵInheritDefinitionFeature"]], decls: 1, vars: 1, consts: [["actionButtonText", "Assign User", 3, "title", "handleArchive", "search", "actionClick", 4, "ngIf"], ["actionButtonText", "Assign User", 3, "title", "handleArchive", "search", "actionClick"], [3, "dataSource", "allowPaging", "allowSorting", "allowFiltering", "filterSettings", "pageSettings", "searchSettings", 4, "ngIf"], [3, "dataSource", "allowPaging", "allowSorting", "allowFiltering", "filterSettings", "pageSettings", "searchSettings"], ["grid", ""], ["field", "appUser.name", "headerText", "Name"], ["field", "appRole.region.name", "headerText", "State"], ["field", "appRole.name", "headerText", "Role", "clipMode", "EllipsisWithTooltip"], ["headerText", "Actions", "textAlign", "Left", "width", "240"], ["template", ""], [3, "click"]], template: function RoleToolsListComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](0, RoleToolsListComponent_container_list_0_Template, 3, 4, "container-list", 0);
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.tool != null);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_13__.NgIf, _shared_components_container_list_container_list_component__WEBPACK_IMPORTED_MODULE_8__.ContainerListComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_14__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_14__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_14__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_14__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_14__.AggregateColumnDirective, _shared_components_edit_button_edit_button_component__WEBPACK_IMPORTED_MODULE_9__.EditButtonComponent, _shared_components_delete_button_delete_button_component__WEBPACK_IMPORTED_MODULE_10__.DeleteButtonComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyb2xlLXRvb2xzLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */"] });


/***/ }),

/***/ 28374:
/*!*************************************************************************************!*\
  !*** ./src/app/admin/roles/components/role-tools-user/role-tools-user.component.ts ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RoleToolsUserComponent": () => (/* binding */ RoleToolsUserComponent)
/* harmony export */ });
/* harmony import */ var _shared_utilities_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shared/utilities/shared */ 14364);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _services_role_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../services/role.service */ 18862);
/* harmony import */ var _core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/services/result.handler.service */ 32464);
/* harmony import */ var _user_management_services_user_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../user-management/services/user.service */ 34033);
/* harmony import */ var _shared_services_input_validator_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/input-validator.service */ 68516);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var src_app_shared_services_shared_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/shared/services/shared.service */ 97282);
/* harmony import */ var src_app_core_services_nav_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/core/services/nav.service */ 30651);
/* harmony import */ var _shared_components_return_button_return_button_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/return-button/return-button.component */ 44188);
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 24779);
/* harmony import */ var _shared_user_edit_roles_tool_user_edit_roles_tool_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../shared/user-edit-roles-tool/user-edit-roles-tool.component */ 58340);













function RoleToolsUserComponent_div_4_div_9_Template(rf, ctx) { if (rf & 1) {
    const _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "div", 11)(1, "div", 12)(2, "ejs-combobox", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("change", function RoleToolsUserComponent_div_4_div_9_Template_ejs_combobox_change_2_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r3); const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2); return ctx_r2.onUserChange($event); })("valueChange", function RoleToolsUserComponent_div_4_div_9_Template_ejs_combobox_valueChange_2_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r3); const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2); return ctx_r4.assignedUserId = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()()();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("showClearButton", true)("allowFiltering", true)("ignoreAccent", true)("ignoreCase", true)("dataSource", ctx_r1.usersAvailable)("fields", ctx_r1.fields)("value", ctx_r1.assignedUserId);
} }
function RoleToolsUserComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "div")(1, "div", 2)(2, "div", 3)(3, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](4, "span", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](5, "div", 6)(6, "label", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()()();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](8, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](9, RoleToolsUserComponent_div_4_div_9_Template, 3, 7, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](10, "app-user-edit-roles-tool", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("onUndoClicked", function RoleToolsUserComponent_div_4_Template_app_user_edit_roles_tool_onUndoClicked_10_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r6); const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](); return ctx_r5.onUndoClicked($event); })("onUserSaved", function RoleToolsUserComponent_div_4_Template_app_user_edit_roles_tool_onUserSaved_10_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r6); const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](); return ctx_r7.onUserSave($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()()()();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r0.formatAdminToolName(ctx_r0.roleGroup.tool));
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r0.assignUser);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵpropertyInterpolate"]("undoButtonText", ctx_r0.assignUser ? "Clear" : "Undo");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵpropertyInterpolate"]("saveButtonText", ctx_r0.assignUser ? "Add User" : "Save");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("user", ctx_r0.user)("roleGroup", ctx_r0.roleGroup);
} }
class RoleToolsUserComponent {
    constructor(route, roleService, resultHandler, userService, inputValidatorService, location, sharedService, navService) {
        this.roleService = roleService;
        this.resultHandler = resultHandler;
        this.userService = userService;
        this.inputValidatorService = inputValidatorService;
        this.location = location;
        this.sharedService = sharedService;
        this.navService = navService;
        this.formatAdminToolName = _shared_utilities_shared__WEBPACK_IMPORTED_MODULE_0__.formatAdminToolName;
        this.fields = { text: 'name', value: 'id' };
        this.onUserSave = (e) => this.location.back();
        const userData = route.snapshot.data["user"];
        this.assignUser = userData == null;
        if (userData != null) {
            this.handleUser(userData);
        }
        this.toolId = Number(route.snapshot.params.toolId);
        this.roleService.getRolesGrouped(this.toolId).subscribe((data) => {
            this.handleRoles(data);
        });
    }
    ngOnInit() {
        this.userService.getUsers(true, false, this.toolId).subscribe(data => {
            if (data.isSuccess) {
                this.usersAvailable = data.value;
            }
            else {
                this.resultHandler.handle(data);
            }
        });
        this.navService.setRoleManagementMenu(this.sharedService);
    }
    handleUser(data) {
        if (data.isSuccess) {
            this.user = data.value;
        }
        else {
            this.resultHandler.handle(data);
        }
    }
    handleRoles(rolesGrouped) {
        if (rolesGrouped.isSuccess) {
            this.roleGroup = rolesGrouped.value.length ? rolesGrouped.value[0] : undefined;
        }
        else {
            this.resultHandler.handle(rolesGrouped);
        }
    }
    onUserChange(e) {
        if (e.itemData != null && e.itemData.id != null) {
            this.userService.getUser(e.itemData.id).subscribe(data => {
                this.handleUser(data);
            });
        }
        else {
            this.user = null;
        }
    }
    onUndoClicked(e) {
        this.assignedUserId = undefined;
    }
}
RoleToolsUserComponent.ɵfac = function RoleToolsUserComponent_Factory(t) { return new (t || RoleToolsUserComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_10__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_services_role_service__WEBPACK_IMPORTED_MODULE_1__.RoleService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_2__.ResultHandlerService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_user_management_services_user_service__WEBPACK_IMPORTED_MODULE_3__.UserService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_shared_services_input_validator_service__WEBPACK_IMPORTED_MODULE_4__.InputValidatorService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_11__.Location), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](src_app_shared_services_shared_service__WEBPACK_IMPORTED_MODULE_5__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](src_app_core_services_nav_service__WEBPACK_IMPORTED_MODULE_6__.NavService)); };
RoleToolsUserComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineComponent"]({ type: RoleToolsUserComponent, selectors: [["app-role-tools-user"]], decls: 5, vars: 2, consts: [[1, "container-fluid"], [4, "ngIf"], [1, "e-card", "mt-2"], [1, "e-card-header"], [1, "e-card-header-image", "e-card-corner"], [1, "e-icons", "e-settings", "m-2"], [1, "e-card-header-caption"], [1, "fw-bold"], [1, "e-card-content", "m-2"], ["class", "row", 4, "ngIf"], [3, "user", "roleGroup", "undoButtonText", "saveButtonText", "onUndoClicked", "onUserSaved"], [1, "row"], [1, "form-group", "mb-5"], ["placeholder", "Name", "floatLabelType", "Always", "required", "", 1, "col-6", 3, "showClearButton", "allowFiltering", "ignoreAccent", "ignoreCase", "dataSource", "fields", "value", "change", "valueChange"]], template: function RoleToolsUserComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "div", 0)(1, "h1");
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](3, "return-button");
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](4, RoleToolsUserComponent_div_4_Template, 11, 6, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx.assignUser ? "Assign User" : "Edit " + (ctx.user == null ? null : ctx.user.name));
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.roleGroup != null);
    } }, directives: [_shared_components_return_button_return_button_component__WEBPACK_IMPORTED_MODULE_7__.ReturnButtonComponent, _angular_common__WEBPACK_IMPORTED_MODULE_11__.NgIf, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_12__.ComboBoxComponent, _shared_user_edit_roles_tool_user_edit_roles_tool_component__WEBPACK_IMPORTED_MODULE_8__.UserEditRolesToolComponent], styles: [".e-card-header-image[_ngcontent-%COMP%]   .e-icons[_ngcontent-%COMP%]:before {\n  font-size: 35px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvbGUtdG9vbHMtdXNlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQUE7QUFDSiIsImZpbGUiOiJyb2xlLXRvb2xzLXVzZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZS1jYXJkLWhlYWRlci1pbWFnZSAuZS1pY29uczpiZWZvcmUge1xyXG4gICAgZm9udC1zaXplOiAzNXB4O1xyXG59XHJcbiJdfQ== */"] });


/***/ }),

/***/ 63199:
/*!*******************************************************************!*\
  !*** ./src/app/admin/roles/resolvers/role-tools-list.resolver.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RoleToolsListResolver": () => (/* binding */ RoleToolsListResolver)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _services_role_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../services/role.service */ 18862);


class RoleToolsListResolver {
    constructor(roleService) {
        this.roleService = roleService;
    }
    resolve(route, state) {
        const id = Number(route.paramMap.get('toolId'));
        return this.roleService.getUsersRoles(id);
    }
}
RoleToolsListResolver.ɵfac = function RoleToolsListResolver_Factory(t) { return new (t || RoleToolsListResolver)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_services_role_service__WEBPACK_IMPORTED_MODULE_0__.RoleService)); };
RoleToolsListResolver.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: RoleToolsListResolver, factory: RoleToolsListResolver.ɵfac });


/***/ }),

/***/ 33887:
/*!*******************************************************************!*\
  !*** ./src/app/admin/roles/resolvers/role-tools-user.resolver.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RoleToolUserResolver": () => (/* binding */ RoleToolUserResolver)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 20591);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _user_management_services_user_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../user-management/services/user.api.service */ 33031);



class RoleToolUserResolver {
    constructor(userService) {
        this.userService = userService;
    }
    resolve(route, state) {
        const userId = route.paramMap.get('userId');
        if (userId != null) {
            return this.userService.getUser(Number(userId));
        }
        return (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.empty)();
    }
}
RoleToolUserResolver.ɵfac = function RoleToolUserResolver_Factory(t) { return new (t || RoleToolUserResolver)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_user_management_services_user_api_service__WEBPACK_IMPORTED_MODULE_0__.UserApiService)); };
RoleToolUserResolver.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: RoleToolUserResolver, factory: RoleToolUserResolver.ɵfac });


/***/ }),

/***/ 18862:
/*!******************************************************!*\
  !*** ./src/app/admin/roles/services/role.service.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RoleService": () => (/* binding */ RoleService)
/* harmony export */ });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _core_api_base_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/api/base.api.service */ 14089);
/* harmony import */ var _constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants/admin-api.constants */ 86937);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);





class RoleService extends _core_api_base_api_service__WEBPACK_IMPORTED_MODULE_0__.BaseAPIService {
    constructor(baseApiUrl_Web, http) {
        super(baseApiUrl_Web, http);
    }
    getRoles() {
        return this.http.get(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.GetRoles()));
    }
    getRolesGrouped(toolId) {
        let params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('toolId', toolId !== null && toolId !== void 0 ? toolId : '');
        return this.http.get(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.GetRolesGrouped()), { params });
    }
    getRole(id) {
        return this.http.get(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.GetRoleById(id)));
    }
    getUsersRoles(toolId) {
        let params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('toolId', toolId !== null && toolId !== void 0 ? toolId : '');
        return this.http.get(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.GetUsersRoles()), { params });
    }
    createRole(model) {
        return this.http.post(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.CreateRole()), model);
    }
    updateRole(id, model) {
        return this.http.put(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.UpdateRole(id)), model);
    }
    validateRemoveUserRole(userRole) {
        return this.http.post(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.ValidateRemoveUserRole()), userRole);
    }
    removeUserRole(userId, roleId) {
        return this.http.delete(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.RemoveUserRole(userId, roleId)));
    }
}
RoleService.ɵfac = function RoleService_Factory(t) { return new (t || RoleService)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"]("BASE_API_URL_WEB"), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpClient)); };
RoleService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjectable"]({ token: RoleService, factory: RoleService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 60096:
/*!*******************************************************************!*\
  !*** ./src/app/admin/shared/region-list/region-list.component.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RegionListComponent": () => (/* binding */ RegionListComponent)
/* harmony export */ });
/* harmony import */ var _shared_components_option_list_option_list_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shared/components/option-list/option-list.component */ 14561);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _region_management_services_region_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../region-management/services/region.service */ 59194);
/* harmony import */ var _core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/services/result.handler.service */ 32464);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @syncfusion/ej2-angular-buttons */ 78218);






function RegionListComponent_div_0_hr_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](0, "hr");
} }
function RegionListComponent_div_0_ejs_checkbox_5_Template(rf, ctx) { if (rf & 1) {
    const _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "ejs-checkbox", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("checkedChange", function RegionListComponent_div_0_ejs_checkbox_5_Template_ejs_checkbox_checkedChange_0_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r5); const option_r3 = restoredCtx.$implicit; return option_r3.selected = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const option_r3 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpropertyInterpolate"]("label", option_r3.name);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("checked", option_r3.selected);
} }
function RegionListComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 1)(1, "label", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](3, RegionListComponent_div_0_hr_3_Template, 1, 0, "hr", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](5, RegionListComponent_div_0_ejs_checkbox_5_Template, 1, 2, "ejs-checkbox", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]()();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵclassProp"]("pt-4", ctx_r0.padding);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate"](ctx_r0.title);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", ctx_r0.rowInTitle);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵclassProp"]("pt-3", ctx_r0.padding);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngForOf", ctx_r0.options);
} }
class RegionListComponent extends _shared_components_option_list_option_list_component__WEBPACK_IMPORTED_MODULE_0__.OptionListComponent {
    constructor(regionService, resultHandler) {
        super();
        this.regionService = regionService;
        this.resultHandler = resultHandler;
        this.title = 'States';
    }
    ngOnInit() {
        this.regionService.getActiveRegions().subscribe((data) => {
            if (data.isSuccess) {
                this.loadOptions(data.value);
            }
            else {
                this.resultHandler.handle(data);
            }
        }, (err) => {
            this.resultHandler.handle(err.error);
        });
    }
}
RegionListComponent.ɵfac = function RegionListComponent_Factory(t) { return new (t || RegionListComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_region_management_services_region_service__WEBPACK_IMPORTED_MODULE_1__.RegionService), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_2__.ResultHandlerService)); };
RegionListComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: RegionListComponent, selectors: [["region-list"]], inputs: { title: "title" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵInheritDefinitionFeature"]], decls: 1, vars: 1, consts: [["class", "row", 3, "pt-4", 4, "ngIf"], [1, "row"], [1, "col-md-12", "fw-bold"], [4, "ngIf"], [1, "row", "options-container"], [3, "label", "checked", "checkedChange", 4, "ngFor", "ngForOf"], [3, "label", "checked", "checkedChange"]], template: function RegionListComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](0, RegionListComponent_div_0_Template, 6, 7, "div", 0);
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", ctx.options != undefined);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_4__.NgForOf, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_5__.CheckBoxComponent], styles: [".options-container[_ngcontent-%COMP%] {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 10px;\n}\n.options-container[_ngcontent-%COMP%]   .e-checkbox-wrapper[_ngcontent-%COMP%] {\n  width: 30%;\n  word-break: break-word;\n}\nhr[_ngcontent-%COMP%] {\n  margin: 10px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9wdGlvbi1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsMkJBQUE7RUFDQSxTQUFBO0FBQ0Y7QUFDRTtFQUNFLFVBQUE7RUFDQSxzQkFBQTtBQUNKO0FBR0E7RUFDRSxZQUFBO0FBQUYiLCJmaWxlIjoib3B0aW9uLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIub3B0aW9ucy1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgZ2FwOiAxMHB4O1xyXG5cclxuICAuZS1jaGVja2JveC13cmFwcGVyIHtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xyXG4gIH1cclxufVxyXG5cclxuaHIge1xyXG4gIG1hcmdpbjogMTBweDtcclxufVxyXG4iXX0= */"] });


/***/ }),

/***/ 96139:
/*!***********************************************************************!*\
  !*** ./src/app/admin/shared/tool-external/tool-external.component.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToolExternalComponent": () => (/* binding */ ToolExternalComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _shared_utilities_custom_validators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shared/utilities/custom-validators */ 19984);
/* harmony import */ var src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/shared/constants/application-urls */ 85561);
/* harmony import */ var src_app_shared_constants_file_sizes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/constants/file-sizes */ 16706);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _shared_services_input_validator_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../shared/services/input-validator.service */ 68516);
/* harmony import */ var _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../shared/components/page-title/page-title.component */ 46896);
/* harmony import */ var _shared_components_return_button_return_button_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../shared/components/return-button/return-button.component */ 44188);
/* harmony import */ var _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @syncfusion/ej2-angular-inputs */ 53691);
/* harmony import */ var _shared_components_field_error_display_field_error_display_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../shared/components/field-error-display/field-error-display.component */ 76530);
/* harmony import */ var _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @syncfusion/ej2-angular-buttons */ 78218);
/* harmony import */ var _shared_components_single_upload_single_upload_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../shared/components/single-upload/single-upload.component */ 40031);
/* harmony import */ var _user_type_list_user_type_list_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../user-type-list/user-type-list.component */ 54724);
/* harmony import */ var _region_list_region_list_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../region-list/region-list.component */ 60096);

















const _c0 = ["upload"];
const _c1 = ["uploadFullSizeLogo"];
const _c2 = ["regions"];
const _c3 = ["userTypes"];
class ToolExternalComponent {
    constructor(fb, location, inputValidatorService) {
        this.fb = fb;
        this.location = location;
        this.inputValidatorService = inputValidatorService;
        this.returnUrl = src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_1__.ApplicationUrls.GlobalToolSuite.ToolsManagement.path;
        this.MaxFileSizes = src_app_shared_constants_file_sizes__WEBPACK_IMPORTED_MODULE_2__.MaxFileSizes;
        this.onToolSaved = new _angular_core__WEBPACK_IMPORTED_MODULE_10__.EventEmitter();
        this.return = () => this.location.back();
    }
    ngOnInit() {
        this.initializeForm();
    }
    onClear() {
        if (this.tool == null) {
            this.form.reset();
        }
        else {
            this.initializeForm();
        }
        this.userTypesComponent.reset();
        this.regionsComponent.reset();
        this.upload.reset();
        this.uploadFullSizeLogo.reset();
    }
    initializeForm() {
        this.form = this.fb.group({
            name: [this.tool != null ? this.tool.name : '', _angular_forms__WEBPACK_IMPORTED_MODULE_11__.Validators.required],
            description: [this.tool != null ? this.tool.description : ''],
            url: [this.tool != null ? this.tool.url : null, [_angular_forms__WEBPACK_IMPORTED_MODULE_11__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.Validators.pattern(_shared_utilities_custom_validators__WEBPACK_IMPORTED_MODULE_0__.CustomValidators.urlRegex)]],
            isFavoritedByDefault: [this.tool != null ? this.tool.isFavoritedByDefault : false]
        });
    }
    onSaveTool() {
        this.form.markAllAsTouched();
        if (!this.form.valid) {
            return;
        }
        var saveData = {
            formData: this.form.getRawValue(),
            primaryLogo: this.upload.getFile(),
            fullSizeLogo: this.uploadFullSizeLogo.getFile(),
            permissionGroupsIds: this.userTypesComponent.getSelectedIds(),
            regionsIds: this.regionsComponent.getSelectedIds()
        };
        this.onToolSaved.emit(saveData);
    }
}
ToolExternalComponent.ɵfac = function ToolExternalComponent_Factory(t) { return new (t || ToolExternalComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_12__.Location), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_shared_services_input_validator_service__WEBPACK_IMPORTED_MODULE_3__.InputValidatorService)); };
ToolExternalComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineComponent"]({ type: ToolExternalComponent, selectors: [["tool-external"]], viewQuery: function ToolExternalComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵviewQuery"](_c1, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵviewQuery"](_c2, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵviewQuery"](_c3, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵloadQuery"]()) && (ctx.upload = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵloadQuery"]()) && (ctx.uploadFullSizeLogo = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵloadQuery"]()) && (ctx.regionsComponent = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵloadQuery"]()) && (ctx.userTypesComponent = _t.first);
    } }, inputs: { tool: "tool" }, outputs: { onToolSaved: "onToolSaved" }, decls: 36, vars: 18, consts: [[3, "formGroup", "ngSubmit"], [1, "container-fluid"], ["sufix", "To Tools", 3, "returnUrl"], [1, "e-card", "mt-4", "p-1", "pb-4"], [1, "e-card-content"], [1, "form-group"], ["placeholder", "Name", "floatLabelType", "Always", "autocomplete", "off", "maxlength", "255", "required", "", "formControlName", "name"], ["errorMsg", "* This field is required.", 3, "displayError"], [1, "form-group", "mt-3"], ["placeholder", "Description", "floatLabelType", "Always", "autocomplete", "off", "maxlength", "5000", "formControlName", "description", 1, "default-textarea", 3, "multiline"], [1, "form-group", "mt-2"], ["placeholder", "Url", "floatLabelType", "Always", "autocomplete", "off", "maxlength", "2048", "required", "", "formControlName", "url"], ["errorMsg", "* This url is invalid.", 3, "displayError"], [1, "col-md-12", "fw-bold"], ["label", "No", "cssClass", "mr-3 mt-3", "name", "isFavoritedByDefault", "formControlName", "isFavoritedByDefault", 3, "value"], ["label", "Yes", "name", "isFavoritedByDefault", "formControlName", "isFavoritedByDefault", 3, "value"], ["title", "Upload Icon Logo *", 1, "row", "pt-4", 3, "currentFilePath", "maxFileSize"], ["upload", ""], ["title", "Upload Full Size Logo", 1, "row", "pt-4", 3, "currentFilePath", "required", "maxFileSize"], ["uploadFullSizeLogo", ""], [3, "selectedIds"], ["userTypes", ""], ["regions", ""], [1, "row", "pt-2", "actions-container"], [1, "col-md-3", "offset-md-6"], ["type", "button", "ejs-button", "", 1, "e-flat", 3, "click"], [1, "col-md-3"], ["ejs-button", "", 1, "e-success"]], template: function ToolExternalComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](0, "form", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("ngSubmit", function ToolExternalComponent_Template_form_ngSubmit_0_listener() { return ctx.onSaveTool(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](1, "div", 1)(2, "page-title");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](4, "return-button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](5, "div", 3)(6, "div", 4)(7, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](8, "ejs-textbox", 6)(9, "app-field-error-display", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](10, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](11, "ejs-textbox", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](12, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](13, "ejs-textbox", 11)(14, "app-field-error-display", 7)(15, "app-field-error-display", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](16, "div", 8)(17, "label", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](18, "Favorited by Default");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](19, "ejs-radiobutton", 14)(20, "ejs-radiobutton", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](21, "single-upload", 16, 17)(23, "single-upload", 18, 19)(25, "user-type-list", 20, 21)(27, "region-list", 20, 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](29, "div", 23)(30, "div", 24)(31, "button", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("click", function ToolExternalComponent_Template_button_click_31_listener() { return ctx.onClear(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](32);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](33, "div", 26)(34, "button", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](35);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]()()()()()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("formGroup", ctx.form);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtextInterpolate"](ctx.tool != null ? "Edit " + ctx.tool.name : "New External Tool");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("returnUrl", ctx.returnUrl);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("displayError", ctx.inputValidatorService.isInvalidRequired(ctx.form, "name"));
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("multiline", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("displayError", ctx.inputValidatorService.isInvalidRequired(ctx.form, "url"));
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("displayError", ctx.inputValidatorService.isInvalidUrl(ctx.form, "url"));
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("value", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("value", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("currentFilePath", ctx.tool == null ? null : ctx.tool.primaryLogoFilePath)("maxFileSize", ctx.MaxFileSizes.IconLogo);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("currentFilePath", ctx.tool == null ? null : ctx.tool.fullSizeLogoFilePath)("required", false)("maxFileSize", ctx.MaxFileSizes.FullSizeLogo);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("selectedIds", ctx.tool == null ? null : ctx.tool.permissionGroupsIds);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("selectedIds", ctx.tool == null ? null : ctx.tool.regionsIds);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtextInterpolate"](ctx.tool == null ? "Clear" : "Undo");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtextInterpolate"](ctx.tool == null ? "Add New" : "Save");
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_11__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_11__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormGroupDirective, _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_4__.PageTitleComponent, _shared_components_return_button_return_button_component__WEBPACK_IMPORTED_MODULE_5__.ReturnButtonComponent, _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_13__.TextBoxComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.MaxLengthValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.RequiredValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormControlName, _shared_components_field_error_display_field_error_display_component__WEBPACK_IMPORTED_MODULE_6__.FieldErrorDisplayComponent, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_14__.RadioButtonComponent, _shared_components_single_upload_single_upload_component__WEBPACK_IMPORTED_MODULE_7__.SingleUploadComponent, _user_type_list_user_type_list_component__WEBPACK_IMPORTED_MODULE_8__.UserTypeListComponent, _region_list_region_list_component__WEBPACK_IMPORTED_MODULE_9__.RegionListComponent, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_14__.ButtonComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0b29sLWV4dGVybmFsLmNvbXBvbmVudC5zY3NzIn0= */"] });


/***/ }),

/***/ 87786:
/*!***************************************************************!*\
  !*** ./src/app/admin/shared/tool-icon/tool-icon.component.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToolIconComponent": () => (/* binding */ ToolIconComponent)
/* harmony export */ });
/* harmony import */ var _fortawesome_pro_solid_svg_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @fortawesome/pro-solid-svg-icons */ 61250);
/* harmony import */ var _shared_utilities_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shared/utilities/shared */ 14364);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _fortawesome_angular_fontawesome__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @fortawesome/angular-fontawesome */ 19397);





function ToolIconComponent_span_0_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "span", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](1, "fa-icon", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("icon", ctx_r0.faScrewdriverWrench);
} }
function ToolIconComponent_span_1_img_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "img", 6);
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpropertyInterpolate"]("alt", ctx_r2.tool.name);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpropertyInterpolate"]("src", ctx_r2.tool.primaryLogoFilePath, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsanitizeUrl"]);
} }
function ToolIconComponent_span_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "span", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, ToolIconComponent_span_1_img_1_Template, 1, 2, "img", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r1.hasLogo(ctx_r1.tool));
} }
class ToolIconComponent {
    constructor() {
        this.isGlobalToolSuite = _shared_utilities_shared__WEBPACK_IMPORTED_MODULE_0__.isGlobalToolSuite;
        this.faScrewdriverWrench = _fortawesome_pro_solid_svg_icons__WEBPACK_IMPORTED_MODULE_2__.faScrewdriverWrench;
    }
    ngOnInit() {
    }
    hasLogo(tool) {
        return tool.primaryLogoFilePath != null && tool.primaryLogoFilePath != '';
    }
}
ToolIconComponent.ɵfac = function ToolIconComponent_Factory(t) { return new (t || ToolIconComponent)(); };
ToolIconComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: ToolIconComponent, selectors: [["tool-icon"]], inputs: { tool: "tool" }, decls: 2, vars: 2, consts: [["class", "e-icons col custom-icon-wrapper dark-background", 4, "ngIf"], ["class", "e-icons col custom-icon-wrapper", 4, "ngIf"], [1, "e-icons", "col", "custom-icon-wrapper", "dark-background"], [3, "icon"], [1, "e-icons", "col", "custom-icon-wrapper"], [3, "alt", "src", 4, "ngIf"], [3, "alt", "src"]], template: function ToolIconComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](0, ToolIconComponent_span_0_Template, 2, 1, "span", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, ToolIconComponent_span_1_Template, 2, 1, "span", 1);
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.isGlobalToolSuite(ctx.tool.id));
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !ctx.isGlobalToolSuite(ctx.tool.id));
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_3__.NgIf, _fortawesome_angular_fontawesome__WEBPACK_IMPORTED_MODULE_4__.FaIconComponent], styles: ["span.e-icons[_ngcontent-%COMP%]   img[src*=svg][_ngcontent-%COMP%] {\n  filter: var(--warnerblue-filter);\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvb2wtaWNvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDRTtFQUNFLGdDQUFBO0FBQUoiLCJmaWxlIjoidG9vbC1pY29uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsic3Bhbi5lLWljb25zIHtcclxuICBpbWdbc3JjKj1cInN2Z1wiXSB7XHJcbiAgICBmaWx0ZXI6IHZhcigtLXdhcm5lcmJsdWUtZmlsdGVyKTtcclxuICB9XHJcbn1cclxuIl19 */"] });


/***/ }),

/***/ 44369:
/*!*********************************************************************************!*\
  !*** ./src/app/admin/shared/user-edit-password/user-edit-password.component.ts ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UserEditPasswordComponent": () => (/* binding */ UserEditPasswordComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var src_app_shared_services_input_validator_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/shared/services/input-validator.service */ 68516);
/* harmony import */ var _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-angular-inputs */ 53691);
/* harmony import */ var _shared_components_field_error_display_field_error_display_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shared/components/field-error-display/field-error-display.component */ 76530);
/* harmony import */ var _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @syncfusion/ej2-angular-buttons */ 78218);








class UserEditPasswordComponent {
    constructor(fb, inputValidatorService) {
        this.fb = fb;
        this.inputValidatorService = inputValidatorService;
        this.email = "";
        this.token = "";
        this.onEditPassword = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    }
    ngOnInit() {
        this.initializeForm();
    }
    editPassword() {
        this.form.markAllAsTouched();
        if (!this.form.valid) {
            return;
        }
        let model = this.form.value;
        this.onEditPassword.emit(model);
    }
    initializeForm() {
        this.form = this.fb.group({
            confirmPassword: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__.Validators.required],
            password: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__.Validators.required]
        });
    }
}
UserEditPasswordComponent.ɵfac = function UserEditPasswordComponent_Factory(t) { return new (t || UserEditPasswordComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](src_app_shared_services_input_validator_service__WEBPACK_IMPORTED_MODULE_0__.InputValidatorService)); };
UserEditPasswordComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: UserEditPasswordComponent, selectors: [["app-user-edit-password"]], inputs: { email: "email", token: "token" }, outputs: { onEditPassword: "onEditPassword" }, decls: 13, vars: 4, consts: [[3, "formGroup", "ngSubmit"], [1, "fw-bold"], [1, "form-group", "col-2"], ["autocomplete", "off", "floatLabelType", "Always", "formControlName", "password", "maxlength", "255", "placeholder", "Password", "required", "", "type", "password", "width", "200px"], ["errorMsg", "* New password is required", 3, "displayError"], ["autocomplete", "off", "floatLabelType", "Always", "formControlName", "confirmPassword", "maxlength", "255", "placeholder", "Confirm Password", "required", "", "type", "password", "width", "200px"], ["errorMsg", "* You need to confirm your new password", 3, "displayError"], ["errorMsg", "* Passwords must match", 3, "displayError"], [1, "align-end", "mt-3"], ["ejs-button", "", 1, "e-success", "btn-default-size"]], template: function UserEditPasswordComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "form", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("ngSubmit", function UserEditPasswordComponent_Template_form_ngSubmit_0_listener() { return ctx.editPassword(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](1, "label", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](2, "Define new password?");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](3, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](4, "ejs-textbox", 3)(5, "app-field-error-display", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](6, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](7, "ejs-textbox", 5)(8, "app-field-error-display", 6)(9, "app-field-error-display", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](10, "div", 8)(11, "button", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](12, "Change Password");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]()()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("formGroup", ctx.form);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("displayError", ctx.inputValidatorService.isInvalidRequired(ctx.form, "password"));
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("displayError", ctx.inputValidatorService.isInvalidRequired(ctx.form, "confirmPassword"));
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("displayError", ctx.inputValidatorService.areDifferentValues(ctx.form, "password", "confirmPassword"));
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormGroupDirective, _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_4__.TextBoxComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_3__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_3__.MaxLengthValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_3__.RequiredValidator, _shared_components_field_error_display_field_error_display_component__WEBPACK_IMPORTED_MODULE_1__.FieldErrorDisplayComponent, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_5__.ButtonComponent], encapsulation: 2 });


/***/ }),

/***/ 58340:
/*!*************************************************************************************!*\
  !*** ./src/app/admin/shared/user-edit-roles-tool/user-edit-roles-tool.component.ts ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UserEditRolesToolComponent": () => (/* binding */ UserEditRolesToolComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var src_app_shared_components_restricted_restricted_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/shared/components/restricted/restricted.component */ 64780);
/* harmony import */ var _core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/services/result.handler.service */ 32464);
/* harmony import */ var _user_management_services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../user-management/services/user.service */ 34033);
/* harmony import */ var src_app_authentication_services_account_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/authentication/services/account.service */ 94398);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @syncfusion/ej2-angular-buttons */ 78218);








const _c0 = ["roleOption"];
function UserEditRolesToolComponent_div_0_div_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](1, "ejs-radiobutton", 11, 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} if (rf & 2) {
    const role_r4 = ctx.$implicit;
    const region_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]().$implicit;
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵclassMapInterpolate1"]("role", role_r4.id, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpropertyInterpolate"]("label", role_r4.name);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpropertyInterpolate2"]("name", "", ctx_r3.roleGroup.tool.id, ".", region_r2.id, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("checked", ctx_r3.hasRole(role_r4));
} }
function UserEditRolesToolComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 6)(1, "label", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](3, "hr");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](4, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](5, UserEditRolesToolComponent_div_0_div_5_Template, 3, 7, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]()();
} if (rf & 2) {
    const region_r2 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate"](region_r2.name);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngForOf", region_r2.roles);
} }
function UserEditRolesToolComponent_div_1_div_5_ejs_checkbox_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](0, "ejs-checkbox", 16, 12);
} if (rf & 2) {
    const role_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]().$implicit;
    const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵclassMapInterpolate1"]("role", role_r9.id, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpropertyInterpolate"]("label", role_r9.name);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("checked", ctx_r10.hasRole(role_r9));
} }
function UserEditRolesToolComponent_div_1_div_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](1, UserEditRolesToolComponent_div_1_div_5_ejs_checkbox_1_Template, 2, 5, "ejs-checkbox", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} if (rf & 2) {
    const role_r9 = ctx.$implicit;
    const ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", role_r9.name != ctx_r8.roles.SuperAdmin || ctx_r8.isSuperAdmin());
} }
function UserEditRolesToolComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 6)(1, "label", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](3, "hr");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](4, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](5, UserEditRolesToolComponent_div_1_div_5_Template, 2, 1, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]()();
} if (rf & 2) {
    const group_r7 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate"](group_r7.name);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngForOf", group_r7.roles);
} }
class UserEditRolesToolComponent extends src_app_shared_components_restricted_restricted_component__WEBPACK_IMPORTED_MODULE_0__.RestrictedComponent {
    constructor(resultHandler, userService, accountService) {
        super(accountService);
        this.resultHandler = resultHandler;
        this.userService = userService;
        this.accountService = accountService;
        this.undoButtonText = 'Undo';
        this.saveButtonText = 'Save';
        this.onUndoClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.onUserSaved = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.checkedRoles = null;
    }
    ngOnInit() { }
    hasRole(role) {
        return this.user != null && this.user.roles != null && this.user.roles.includes(role.id);
    }
    undoRoleChanges(tool) {
        tool.regions.forEach(tr => {
            tr.roles.forEach(trr => {
                const element = this.getRoleElement(trr.id);
                if (element != null)
                    element.checked = this.user != null && this.user.roles && this.user.roles.includes(trr.id);
            });
        });
        tool.groups.forEach(tg => {
            tg.roles.forEach(tgr => {
                const element = this.getRoleElement(tgr.id);
                if (element != null)
                    element.checked = this.user != null && this.user.roles && this.user.roles.includes(tgr.id);
            });
        });
        this.onUndoClicked.emit();
    }
    isRoleChecked(id) {
        const element = this.getRoleElement(id);
        return element != null && element.checked;
    }
    getRoleElement(roleId) {
        const element = this.roleOptions.filter(r => r.element.className.includes(`role${roleId}`));
        return element.length > 0 ? element[0] : null;
    }
    saveRoleChanges(tool) {
        var roles = [];
        tool.regions.forEach(tr => {
            tr.roles.forEach(trr => {
                if (this.isRoleChecked(trr.id))
                    roles.push(trr.id);
            });
        });
        tool.groups.forEach(tg => {
            tg.roles.forEach(tgr => {
                if (this.isRoleChecked(tgr.id))
                    roles.push(tgr.id);
            });
        });
        this.userService.validateUpdateRoles(this.user != null ? this.user.id : 0, tool.id, roles).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success)
                    this.updateRoles(tool, roles);
            });
        }, (err) => {
            this.resultHandler.handle(err.error).then((success) => {
                if (success)
                    this.updateRoles(tool, roles);
            });
        });
    }
    updateRoles(tool, roles) {
        if (this.user == null)
            return;
        this.userService.updateRoles(this.user.id, tool.id, roles).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.user = data.value;
                    this.onUserSaved.emit(data.value);
                }
            });
        }, (err) => this.resultHandler.handle(err.error));
    }
}
UserEditRolesToolComponent.ɵfac = function UserEditRolesToolComponent_Factory(t) { return new (t || UserEditRolesToolComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_1__.ResultHandlerService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_user_management_services_user_service__WEBPACK_IMPORTED_MODULE_2__.UserService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](src_app_authentication_services_account_service__WEBPACK_IMPORTED_MODULE_3__.AccountService)); };
UserEditRolesToolComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({ type: UserEditRolesToolComponent, selectors: [["app-user-edit-roles-tool"]], viewQuery: function UserEditRolesToolComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵviewQuery"](_c0, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵloadQuery"]()) && (ctx.roleOptions = _t);
    } }, inputs: { user: "user", roleGroup: "roleGroup", undoButtonText: "undoButtonText", saveButtonText: "saveButtonText" }, outputs: { onUndoClicked: "onUndoClicked", onUserSaved: "onUserSaved" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵInheritDefinitionFeature"]], decls: 9, vars: 4, consts: [["class", "mb-4", 4, "ngFor", "ngForOf"], [1, "row", "pt-2", "actions-container"], [1, "col-md-3", "offset-md-6"], ["type", "button", "ejs-button", "", 1, "e-flat", 3, "click"], [1, "col-md-3"], ["ejs-button", "", 1, "e-success", 3, "click"], [1, "mb-4"], [1, "fw-bold"], [1, "row"], ["class", "col", 4, "ngFor", "ngForOf"], [1, "col"], [3, "label", "name", "checked"], ["roleOption", ""], ["class", "col-md-3 pr-0", 4, "ngFor", "ngForOf"], [1, "col-md-3", "pr-0"], [3, "class", "label", "checked", 4, "ngIf"], [3, "label", "checked"]], template: function UserEditRolesToolComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](0, UserEditRolesToolComponent_div_0_Template, 6, 2, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](1, UserEditRolesToolComponent_div_1_Template, 6, 2, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](2, "div", 1)(3, "div", 2)(4, "button", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function UserEditRolesToolComponent_Template_button_click_4_listener() { return ctx.undoRoleChanges(ctx.roleGroup.tool); });
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](6, "div", 4)(7, "button", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function UserEditRolesToolComponent_Template_button_click_7_listener() { return ctx.saveRoleChanges(ctx.roleGroup.tool); });
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]()()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngForOf", ctx.roleGroup.tool.regions);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngForOf", ctx.roleGroup.tool.groups);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate"](ctx.undoButtonText);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate"](ctx.saveButtonText);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_5__.NgForOf, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_6__.RadioButtonComponent, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgIf, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_6__.CheckBoxComponent, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_6__.ButtonComponent], encapsulation: 2 });


/***/ }),

/***/ 54724:
/*!*************************************************************************!*\
  !*** ./src/app/admin/shared/user-type-list/user-type-list.component.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UserTypeListComponent": () => (/* binding */ UserTypeListComponent)
/* harmony export */ });
/* harmony import */ var _shared_components_option_list_option_list_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shared/components/option-list/option-list.component */ 14561);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _user_management_services_user_type_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../user-management/services/user-type.service */ 52257);
/* harmony import */ var _core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/services/result.handler.service */ 32464);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @syncfusion/ej2-angular-buttons */ 78218);






function UserTypeListComponent_div_0_hr_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](0, "hr");
} }
function UserTypeListComponent_div_0_ejs_checkbox_5_Template(rf, ctx) { if (rf & 1) {
    const _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "ejs-checkbox", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("checkedChange", function UserTypeListComponent_div_0_ejs_checkbox_5_Template_ejs_checkbox_checkedChange_0_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r5); const option_r3 = restoredCtx.$implicit; return option_r3.selected = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const option_r3 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpropertyInterpolate"]("label", option_r3.name);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("checked", option_r3.selected);
} }
function UserTypeListComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 1)(1, "label", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](3, UserTypeListComponent_div_0_hr_3_Template, 1, 0, "hr", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](5, UserTypeListComponent_div_0_ejs_checkbox_5_Template, 1, 2, "ejs-checkbox", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]()();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵclassProp"]("pt-4", ctx_r0.padding);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate"](ctx_r0.title);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", ctx_r0.rowInTitle);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵclassProp"]("pt-3", ctx_r0.padding);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngForOf", ctx_r0.options);
} }
class UserTypeListComponent extends _shared_components_option_list_option_list_component__WEBPACK_IMPORTED_MODULE_0__.OptionListComponent {
    constructor(userTypeService, resultHandler) {
        super();
        this.userTypeService = userTypeService;
        this.resultHandler = resultHandler;
        this.title = 'Permission Groups';
    }
    ngOnInit() {
        this.userTypeService.getUserTypes().subscribe((data) => {
            if (data.isSuccess) {
                this.loadOptions(data.value);
            }
            else {
                this.resultHandler.handle(data);
            }
        }, (err) => {
            this.resultHandler.handle(err.error);
        });
    }
}
UserTypeListComponent.ɵfac = function UserTypeListComponent_Factory(t) { return new (t || UserTypeListComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_user_management_services_user_type_service__WEBPACK_IMPORTED_MODULE_1__.UserTypeService), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_2__.ResultHandlerService)); };
UserTypeListComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: UserTypeListComponent, selectors: [["user-type-list"]], inputs: { title: "title" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵInheritDefinitionFeature"]], decls: 1, vars: 1, consts: [["class", "row", 3, "pt-4", 4, "ngIf"], [1, "row"], [1, "col-md-12", "fw-bold"], [4, "ngIf"], [1, "row", "options-container"], [3, "label", "checked", "checkedChange", 4, "ngFor", "ngForOf"], [3, "label", "checked", "checkedChange"]], template: function UserTypeListComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](0, UserTypeListComponent_div_0_Template, 6, 7, "div", 0);
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", ctx.options != undefined);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_4__.NgForOf, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_5__.CheckBoxComponent], styles: [".options-container[_ngcontent-%COMP%] {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 10px;\n}\n.options-container[_ngcontent-%COMP%]   .e-checkbox-wrapper[_ngcontent-%COMP%] {\n  width: 30%;\n  word-break: break-word;\n}\nhr[_ngcontent-%COMP%] {\n  margin: 10px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9wdGlvbi1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsMkJBQUE7RUFDQSxTQUFBO0FBQ0Y7QUFDRTtFQUNFLFVBQUE7RUFDQSxzQkFBQTtBQUNKO0FBR0E7RUFDRSxZQUFBO0FBQUYiLCJmaWxlIjoib3B0aW9uLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIub3B0aW9ucy1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgZ2FwOiAxMHB4O1xyXG5cclxuICAuZS1jaGVja2JveC13cmFwcGVyIHtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xyXG4gIH1cclxufVxyXG5cclxuaHIge1xyXG4gIG1hcmdpbjogMTBweDtcclxufVxyXG4iXX0= */"] });


/***/ }),

/***/ 30873:
/*!****************************************************************************************!*\
  !*** ./src/app/admin/tools-management/components/tool-create/tool-create.component.ts ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToolCreateComponent": () => (/* binding */ ToolCreateComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/services/result.handler.service */ 32464);
/* harmony import */ var _services_tool_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../services/tool.service */ 92412);
/* harmony import */ var _shared_tool_external_tool_external_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../shared/tool-external/tool-external.component */ 96139);





class ToolCreateComponent {
    constructor(location, resultHandler, toolService) {
        this.location = location;
        this.resultHandler = resultHandler;
        this.toolService = toolService;
        this.return = () => this.location.back();
    }
    ngOnInit() {
    }
    onSaveTool(data) {
        const formValues = data.formData;
        const tool = {
            name: formValues.name.trim(),
            description: formValues.description.trim(),
            url: formValues.url.trim(),
            isFavoritedByDefault: formValues.isFavoritedByDefault,
            permissionGroupsIds: data.permissionGroupsIds,
            regionsIds: data.regionsIds
        };
        this.toolService.createTool(tool, data.primaryLogo, data.fullSizeLogo).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success)
                    this.return();
            });
        }, (err) => this.resultHandler.handle(err.error));
    }
}
ToolCreateComponent.ɵfac = function ToolCreateComponent_Factory(t) { return new (t || ToolCreateComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_4__.Location), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_0__.ResultHandlerService), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_services_tool_service__WEBPACK_IMPORTED_MODULE_1__.ToolService)); };
ToolCreateComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: ToolCreateComponent, selectors: [["app-tool-create"]], decls: 1, vars: 0, consts: [[3, "onToolSaved"]], template: function ToolCreateComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "tool-external", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("onToolSaved", function ToolCreateComponent_Template_tool_external_onToolSaved_0_listener($event) { return ctx.onSaveTool($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    } }, directives: [_shared_tool_external_tool_external_component__WEBPACK_IMPORTED_MODULE_2__.ToolExternalComponent], encapsulation: 2 });


/***/ }),

/***/ 79202:
/*!**************************************************************************************************************!*\
  !*** ./src/app/admin/tools-management/components/tool-edit-general-info/tool-edit-general-info.component.ts ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToolEditGeneralInfoComponent": () => (/* binding */ ToolEditGeneralInfoComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var src_app_shared_constants_file_sizes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/shared/constants/file-sizes */ 16706);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _shared_services_input_validator_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shared/services/input-validator.service */ 68516);
/* harmony import */ var _core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/services/result.handler.service */ 32464);
/* harmony import */ var _services_tool_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/tool.service */ 92412);
/* harmony import */ var src_app_core_services_nav_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/core/services/nav.service */ 30651);
/* harmony import */ var _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/components/page-title/page-title.component */ 46896);
/* harmony import */ var _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @syncfusion/ej2-angular-inputs */ 53691);
/* harmony import */ var _shared_components_field_error_display_field_error_display_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/field-error-display/field-error-display.component */ 76530);
/* harmony import */ var _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @syncfusion/ej2-angular-buttons */ 78218);
/* harmony import */ var _shared_components_single_upload_single_upload_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/single-upload/single-upload.component */ 40031);














const _c0 = ["upload"];
const _c1 = ["uploadFullSizeLogo"];
class ToolEditGeneralInfoComponent {
    constructor(route, inputValidatorService, fb, resultHandler, toolService, navService) {
        this.inputValidatorService = inputValidatorService;
        this.fb = fb;
        this.resultHandler = resultHandler;
        this.toolService = toolService;
        this.MaxFileSizes = src_app_shared_constants_file_sizes__WEBPACK_IMPORTED_MODULE_0__.MaxFileSizes;
        const data = route.snapshot.data["tool"];
        if (data.isSuccess) {
            this.tool = data.value;
            navService.setToolNavMenu(this.tool);
        }
        else {
            this.resultHandler.handle(data);
        }
    }
    ngOnInit() {
        this.initializeForm();
    }
    initializeForm() {
        this.form = this.fb.group({
            name: [this.tool != null ? this.tool.name : '', _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required],
            description: [this.tool != null ? this.tool.description : ''],
            isFavoritedByDefault: [this.tool != null ? this.tool.isFavoritedByDefault : false]
        });
    }
    onSaveTool() {
        this.form.markAllAsTouched();
        if (!this.form.valid) {
            return;
        }
        const tool = this.form.getRawValue();
        const primaryLogo = this.upload.getFile();
        const fullSizeLogo = this.uploadFullSizeLogo.getFile();
        this.toolService.validateUpdateGeneralInfo(this.tool.id, tool, primaryLogo).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success)
                    this.update(tool, primaryLogo, fullSizeLogo);
            });
        }, (err) => {
            this.resultHandler.handle(err.error).then((success) => {
                if (success)
                    this.update(tool, primaryLogo, fullSizeLogo);
            });
        });
    }
    onUndo() {
        this.initializeForm();
        this.upload.reset();
        this.uploadFullSizeLogo.reset();
    }
    update(tool, primaryLogo, fullSizeLogo) {
        this.toolService.updateGeneralInfo(this.tool.id, tool, primaryLogo, fullSizeLogo).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.tool = data.value;
                    this.upload.reloadCurrentFile(primaryLogo, this.tool.primaryLogoFilePath);
                    this.uploadFullSizeLogo.reloadCurrentFile(fullSizeLogo, this.tool.fullSizeLogoFilePath);
                    this.onUndo();
                }
            });
        }, (err) => this.resultHandler.handle(err.error));
    }
}
ToolEditGeneralInfoComponent.ɵfac = function ToolEditGeneralInfoComponent_Factory(t) { return new (t || ToolEditGeneralInfoComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_10__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_shared_services_input_validator_service__WEBPACK_IMPORTED_MODULE_1__.InputValidatorService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_2__.ResultHandlerService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_services_tool_service__WEBPACK_IMPORTED_MODULE_3__.ToolService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](src_app_core_services_nav_service__WEBPACK_IMPORTED_MODULE_4__.NavService)); };
ToolEditGeneralInfoComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineComponent"]({ type: ToolEditGeneralInfoComponent, selectors: [["app-tool-edit-general-info"]], viewQuery: function ToolEditGeneralInfoComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵviewQuery"](_c1, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵloadQuery"]()) && (ctx.upload = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵloadQuery"]()) && (ctx.uploadFullSizeLogo = _t.first);
    } }, decls: 30, vars: 11, consts: [[3, "formGroup", "ngSubmit"], [1, "container-fluid"], [1, "e-card", "mt-4", "p-1", "pb-4"], [1, "e-card-header"], [1, "fw-bold"], [1, "e-card-content"], [1, "form-group"], ["placeholder", "Name", "floatLabelType", "Always", "autocomplete", "off", "maxlength", "255", "required", "", "formControlName", "name"], ["errorMsg", "* This field is required.", 3, "displayError"], [1, "form-group", "mt-3"], ["placeholder", "Description", "floatLabelType", "Always", "autocomplete", "off", "maxlength", "5000", "formControlName", "description", 1, "default-textarea", 3, "multiline"], [1, "col-md-12", "fw-bold"], ["label", "No", "cssClass", "mr-3 mt-3", "name", "isFavoritedByDefault", "formControlName", "isFavoritedByDefault", 3, "value"], ["label", "Yes", "name", "isFavoritedByDefault", "formControlName", "isFavoritedByDefault", 3, "value"], ["title", "Upload Icon Logo *", 1, "row", "pt-4", 3, "currentFilePath", "maxFileSize"], ["upload", ""], ["title", "Upload Full Size Logo", 1, "row", "pt-4", 3, "currentFilePath", "required", "maxFileSize"], ["uploadFullSizeLogo", ""], [1, "row", "pt-2", "actions-container"], [1, "col-md-3", "offset-md-6"], ["type", "button", "ejs-button", "", 1, "e-flat", 3, "click"], [1, "col-md-3"], ["ejs-button", "", 1, "e-success"]], template: function ToolEditGeneralInfoComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "form", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("ngSubmit", function ToolEditGeneralInfoComponent_Template_form_ngSubmit_0_listener() { return ctx.onSaveTool(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](1, "div", 1)(2, "page-title");
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](4, "div", 2)(5, "div", 3)(6, "p", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](7, "General Information");
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](8, "div", 5)(9, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](10, "ejs-textbox", 7)(11, "app-field-error-display", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](12, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](13, "ejs-textbox", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](14, "div", 9)(15, "label", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](16, "Favorited by Default");
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](17, "ejs-radiobutton", 12)(18, "ejs-radiobutton", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](19, "single-upload", 14, 15)(21, "single-upload", 16, 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](23, "div", 18)(24, "div", 19)(25, "button", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("click", function ToolEditGeneralInfoComponent_Template_button_click_25_listener() { return ctx.onUndo(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](26, "Undo");
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](27, "div", 21)(28, "button", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](29, "Save");
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()()()()()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("formGroup", ctx.form);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"]("Edit ", ctx.tool == null ? null : ctx.tool.name, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("displayError", ctx.inputValidatorService.isInvalidRequired(ctx.form, "name"));
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("multiline", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("value", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("value", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("currentFilePath", ctx.tool == null ? null : ctx.tool.primaryLogoFilePath)("maxFileSize", ctx.MaxFileSizes.IconLogo);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("currentFilePath", ctx.tool == null ? null : ctx.tool.fullSizeLogoFilePath)("required", false)("maxFileSize", ctx.MaxFileSizes.FullSizeLogo);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_8__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_8__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormGroupDirective, _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_5__.PageTitleComponent, _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_11__.TextBoxComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.MaxLengthValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.RequiredValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControlName, _shared_components_field_error_display_field_error_display_component__WEBPACK_IMPORTED_MODULE_6__.FieldErrorDisplayComponent, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_12__.RadioButtonComponent, _shared_components_single_upload_single_upload_component__WEBPACK_IMPORTED_MODULE_7__.SingleUploadComponent, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_12__.ButtonComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0b29sLWVkaXQtZ2VuZXJhbC1pbmZvLmNvbXBvbmVudC5zY3NzIn0= */"] });


/***/ }),

/***/ 96015:
/*!**********************************************************************************************************!*\
  !*** ./src/app/admin/tools-management/components/tool-edit-permission/tool-edit-permission.component.ts ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToolEditPermissionComponent": () => (/* binding */ ToolEditPermissionComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/services/result.handler.service */ 32464);
/* harmony import */ var _services_tool_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../services/tool.service */ 92412);
/* harmony import */ var src_app_core_services_nav_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/core/services/nav.service */ 30651);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/components/page-title/page-title.component */ 46896);
/* harmony import */ var _shared_user_type_list_user_type_list_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../shared/user-type-list/user-type-list.component */ 54724);
/* harmony import */ var _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @syncfusion/ej2-angular-buttons */ 78218);









const _c0 = ["userTypes"];
class ToolEditPermissionComponent {
    constructor(route, resultHandler, toolService, navService) {
        this.resultHandler = resultHandler;
        this.toolService = toolService;
        this.onClear = () => this.userTypesComponent.reset();
        const data = route.snapshot.data["tool"];
        if (data.isSuccess) {
            this.tool = data.value;
            navService.setToolNavMenu(this.tool);
        }
        else {
            this.resultHandler.handle(data);
        }
    }
    ngOnInit() {
    }
    onSaveTool() {
        const tool = {
            permissionGroupsIds: this.userTypesComponent.getSelectedIds()
        };
        this.toolService.validateUpdatePermissions(this.tool.id, tool).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success)
                    this.update(tool);
            });
        }, (err) => {
            this.resultHandler.handle(err.error).then((success) => {
                if (success)
                    this.update(tool);
            });
        });
    }
    update(tool) {
        this.toolService.updatePermissions(this.tool.id, tool).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success)
                    this.tool = data.value;
            });
        }, (err) => this.resultHandler.handle(err.error));
    }
}
ToolEditPermissionComponent.ɵfac = function ToolEditPermissionComponent_Factory(t) { return new (t || ToolEditPermissionComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_6__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_0__.ResultHandlerService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_services_tool_service__WEBPACK_IMPORTED_MODULE_1__.ToolService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](src_app_core_services_nav_service__WEBPACK_IMPORTED_MODULE_2__.NavService)); };
ToolEditPermissionComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineComponent"]({ type: ToolEditPermissionComponent, selectors: [["app-tool-edit-permission"]], viewQuery: function ToolEditPermissionComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵviewQuery"](_c0, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵloadQuery"]()) && (ctx.userTypesComponent = _t.first);
    } }, decls: 18, vars: 4, consts: [[3, "ngSubmit"], [1, "container-fluid"], [1, "e-card", "mt-4", "p-1", "pb-4"], [1, "e-card-header"], [1, "fw-bold"], [1, "e-card-content"], [3, "padding", "rowInTitle", "selectedIds"], ["userTypes", ""], [1, "row", "pt-2", "actions-container"], [1, "col-md-3", "offset-md-6"], ["type", "button", "ejs-button", "", 1, "e-flat", 3, "click"], [1, "col-md-3"], ["ejs-button", "", 1, "e-success"]], template: function ToolEditPermissionComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "form", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("ngSubmit", function ToolEditPermissionComponent_Template_form_ngSubmit_0_listener() { return ctx.onSaveTool(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "div", 1)(2, "page-title");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](4, "div", 2)(5, "div", 3)(6, "p", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](7, "Permission");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](8, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](9, "user-type-list", 6, 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](11, "div", 8)(12, "div", 9)(13, "button", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ToolEditPermissionComponent_Template_button_click_13_listener() { return ctx.onClear(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](14, "Undo");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](15, "div", 11)(16, "button", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](17, "Save");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()()()()()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate1"]("Edit ", ctx.tool == null ? null : ctx.tool.name, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("padding", false)("rowInTitle", true)("selectedIds", ctx.tool == null ? null : ctx.tool.permissionGroupsIds);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_7__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_7__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_7__.NgForm, _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_3__.PageTitleComponent, _shared_user_type_list_user_type_list_component__WEBPACK_IMPORTED_MODULE_4__.UserTypeListComponent, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_8__.ButtonComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0b29sLWVkaXQtcGVybWlzc2lvbi5jb21wb25lbnQuc2NzcyJ9 */"] });


/***/ }),

/***/ 61466:
/*!********************************************************************************************************************************!*\
  !*** ./src/app/admin/tools-management/components/tool-edit-state-carrier-partial/tool-edit-state-carrier-partial.component.ts ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToolEditStateCarrierPartialComponent": () => (/* binding */ ToolEditStateCarrierPartialComponent)
/* harmony export */ });
/* harmony import */ var _shared_utilities_custom_validators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shared/utilities/custom-validators */ 19984);
/* harmony import */ var _shared_components_restricted_restricted_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shared/components/restricted/restricted.component */ 64780);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _shared_services_input_validator_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/input-validator.service */ 68516);
/* harmony import */ var _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @syncfusion/ej2-angular-buttons */ 78218);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _core_directives_has_role_directive__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/directives/has-role.directive */ 799);
/* harmony import */ var _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @syncfusion/ej2-angular-inputs */ 53691);
/* harmony import */ var _shared_components_field_error_display_field_error_display_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/components/field-error-display/field-error-display.component */ 76530);










function ToolEditStateCarrierPartialComponent_div_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "div", 8)(1, "label", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](2, "This state is currently inactive.");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()();
} }
function ToolEditStateCarrierPartialComponent_div_10_div_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "div", 2)(1, "label", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](2, "Visibility");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](3, "ejs-checkbox", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
} }
function ToolEditStateCarrierPartialComponent_div_10_hr_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](0, "hr", 16);
} }
function ToolEditStateCarrierPartialComponent_div_10_ejs_checkbox_7_Template(rf, ctx) { if (rf & 1) {
    const _r7 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "ejs-checkbox", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("checkedChange", function ToolEditStateCarrierPartialComponent_div_10_ejs_checkbox_7_Template_ejs_checkbox_checkedChange_0_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r7); const carrier_r5 = restoredCtx.$implicit; return carrier_r5.selected = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
} if (rf & 2) {
    const carrier_r5 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpropertyInterpolate"]("label", carrier_r5.name);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("checked", carrier_r5.selected);
} }
const _c0 = function (a0) { return [a0]; };
function ToolEditStateCarrierPartialComponent_div_10_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](1, ToolEditStateCarrierPartialComponent_div_10_div_1_Template, 4, 0, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](2, ToolEditStateCarrierPartialComponent_div_10_hr_2_Template, 1, 0, "hr", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](3, "div", 2)(4, "label", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](5, "Carriers");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](6, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](7, ToolEditStateCarrierPartialComponent_div_10_ejs_checkbox_7_Template, 1, 2, "ejs-checkbox", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](8, "hr", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](9, "div", 8)(10, "label", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](11, "Email Notifications");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](12, "div", 2)(13, "div", 18)(14, "label", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](15, "Change Report");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](16, "ejs-textbox", 20)(17, "app-field-error-display", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](18, "div", 18)(19, "label", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](20, "Analystics Report");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](21, "ejs-textbox", 22)(22, "app-field-error-display", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()()()();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("appHasRole", _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpureFunction1"](5, _c0, ctx_r1.roles.SuperAdmin));
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("appHasRole", _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpureFunction1"](7, _c0, ctx_r1.roles.SuperAdmin));
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngForOf", ctx_r1.carriers);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](10);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("displayError", !ctx_r1.inputValidatorService.isValidMultipleEmails(ctx_r1.form, "changeReportEmails"));
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("displayError", !ctx_r1.inputValidatorService.isValidMultipleEmails(ctx_r1.form, "analyticsReportEmails"));
} }
class ToolEditStateCarrierPartialComponent extends _shared_components_restricted_restricted_component__WEBPACK_IMPORTED_MODULE_1__.RestrictedComponent {
    constructor(fb, inputValidatorService) {
        super();
        this.fb = fb;
        this.inputValidatorService = inputValidatorService;
        this.carriers = undefined;
        this.toolManagement = undefined;
        this.getSelectedCarrierIds = () => { var _a, _b; return (_b = (_a = this.carriers) === null || _a === void 0 ? void 0 : _a.filter(o => o.selected).map(o => o.id)) !== null && _b !== void 0 ? _b : []; };
    }
    ngOnInit() {
        this.setCurrentData();
        this.initializeForm();
        this.loadOptions(this.region.carriers);
    }
    initializeForm() {
        this.form = this.fb.group({
            changeReportEmails: [this.currentData.changeReportEmails, [_shared_utilities_custom_validators__WEBPACK_IMPORTED_MODULE_0__.CustomValidators.multipleEmailsValidator]],
            analyticsReportEmails: [this.currentData.analyticsReportEmails, [_shared_utilities_custom_validators__WEBPACK_IMPORTED_MODULE_0__.CustomValidators.multipleEmailsValidator]],
            reportEmails: [this.currentData.reportEmails, [_shared_utilities_custom_validators__WEBPACK_IMPORTED_MODULE_0__.CustomValidators.multipleEmailsValidator]],
            isContentHidden: [this.currentData.isContentHidden]
        });
    }
    setCurrentData() {
        if (this.toolManagement == undefined) {
            this.currentData = {
                enabled: false,
                selectedCarrierIds: [],
                changeReportEmails: '',
                analyticsReportEmails: '',
                reportEmails: '',
                isContentHidden: false
            };
        }
        else {
            this.currentData = {
                enabled: true,
                selectedCarrierIds: this.toolManagement.carriers.map(c => c.id),
                changeReportEmails: this.toolManagement.changeReportEmails,
                analyticsReportEmails: this.toolManagement.analyticsReportEmails,
                reportEmails: this.toolManagement.reportEmails,
                isContentHidden: this.toolManagement.isContentHidden
            };
        }
    }
    loadOptions(options) {
        this.carriers = options.map(o => {
            var _a;
            return {
                id: o.id,
                name: o.name,
                selected: ((_a = this.currentData.selectedCarrierIds) === null || _a === void 0 ? void 0 : _a.findIndex(sr => sr == o.id)) != -1
            };
        });
    }
    clear() {
        var _a;
        this.currentData = {
            enabled: false,
            selectedCarrierIds: [],
            changeReportEmails: '',
            analyticsReportEmails: '',
            reportEmails: '',
            isContentHidden: false
        };
        this.initializeForm();
        (_a = this.carriers) === null || _a === void 0 ? void 0 : _a.forEach(o => { o.selected = false; });
    }
    reset() {
        this.setCurrentData();
        this.initializeForm();
        this.loadOptions(this.region.carriers);
    }
    onEnableChanged(event) {
        if (!event.checked)
            this.clear();
    }
    getModel() {
        if (!this.currentData.enabled)
            return null;
        var formData = this.form.getRawValue();
        return {
            analyticsReportEmails: formData.analyticsReportEmails,
            carriers: this.getSelectedCarrierIds().map(id => id),
            changeReportEmails: formData.changeReportEmails,
            region: this.region.id,
            reportEmails: formData.reportEmails,
            isContentHidden: formData.isContentHidden
        };
    }
}
ToolEditStateCarrierPartialComponent.ɵfac = function ToolEditStateCarrierPartialComponent_Factory(t) { return new (t || ToolEditStateCarrierPartialComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_6__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_shared_services_input_validator_service__WEBPACK_IMPORTED_MODULE_2__.InputValidatorService)); };
ToolEditStateCarrierPartialComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineComponent"]({ type: ToolEditStateCarrierPartialComponent, selectors: [["tool-edit-state-carrier-partial"]], inputs: { region: "region", toolManagement: "toolManagement" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵInheritDefinitionFeature"]], decls: 11, vars: 6, consts: [[3, "formGroup"], [1, "state-carrier-container"], [1, "row"], [1, "fw-bold", "state-name", "pr-2"], [1, "col", 3, "checked", "checkedChange", "change"], [1, "col", "text-uppercase", "state-status", "small-text"], ["class", "row pb-5", 4, "ngIf"], ["class", "state-settings", 4, "ngIf"], [1, "row", "pb-5"], [1, "col-12"], [1, "state-settings"], ["class", "row", 4, "appHasRole"], ["class", "info-divider", 4, "appHasRole"], [1, "col-12", "text-uppercase", "small-text", "mb-3"], [1, "carriers-container"], [3, "label", "checked", "checkedChange", 4, "ngFor", "ngForOf"], [1, "info-divider"], [1, "col-12", "text-uppercase", "small-text", "mb-2"], [1, "form-group", "col-md-6"], [1, "fw-bold"], ["placeholder", "Use comma to separate emails...", "floatLabelType", "Never", "autocomplete", "off", "formControlName", "changeReportEmails", "maxlength", "5000"], ["errorMsg", "* Invalid emails", 3, "displayError"], ["placeholder", "Use comma to separate emails...", "floatLabelType", "Never", "autocomplete", "off", "formControlName", "analyticsReportEmails", "maxlength", "5000"], ["label", "Hide State Content", "formControlName", "isContentHidden"], [3, "label", "checked", "checkedChange"]], template: function ToolEditStateCarrierPartialComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "form", 0)(1, "div", 1)(2, "div", 2)(3, "label", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](5, "ejs-switch", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("checkedChange", function ToolEditStateCarrierPartialComponent_Template_ejs_switch_checkedChange_5_listener($event) { return ctx.currentData.enabled = $event; })("change", function ToolEditStateCarrierPartialComponent_Template_ejs_switch_change_5_listener($event) { return ctx.onEnableChanged($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](6, "label", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](8, "hr");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](9, ToolEditStateCarrierPartialComponent_div_9_Template, 3, 0, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](10, ToolEditStateCarrierPartialComponent_div_10_Template, 23, 9, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("formGroup", ctx.form);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](ctx.region.name);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("checked", ctx.currentData.enabled);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](ctx.currentData.enabled ? "Active" : "Inactive");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", !ctx.currentData.enabled);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx.currentData.enabled);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_6__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_6__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.FormGroupDirective, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_7__.SwitchComponent, _angular_common__WEBPACK_IMPORTED_MODULE_8__.NgIf, _core_directives_has_role_directive__WEBPACK_IMPORTED_MODULE_3__.HasRoleDirective, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_7__.CheckBoxComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.FormControlName, _angular_common__WEBPACK_IMPORTED_MODULE_8__.NgForOf, _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_9__.TextBoxComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.MaxLengthValidator, _shared_components_field_error_display_field_error_display_component__WEBPACK_IMPORTED_MODULE_4__.FieldErrorDisplayComponent], styles: [".state-name[_ngcontent-%COMP%] {\n  width: auto;\n}\n\n.state-status[_ngcontent-%COMP%] {\n  color: var(--graymedium);\n}\n\n.info-divider[_ngcontent-%COMP%] {\n  color: var(--graylight);\n}\n\n.carriers-container[_ngcontent-%COMP%]   ejs-checkbox[_ngcontent-%COMP%] {\n  width: 30%;\n  word-break: break-word;\n  padding-right: 1.5rem;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvb2wtZWRpdC1zdGF0ZS1jYXJyaWVyLXBhcnRpYWwuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0FBQ0Y7O0FBRUE7RUFDRSx3QkFBQTtBQUNGOztBQUVBO0VBQ0UsdUJBQUE7QUFDRjs7QUFFQTtFQUNFLFVBQUE7RUFDQSxzQkFBQTtFQUNBLHFCQUFBO0FBQ0YiLCJmaWxlIjoidG9vbC1lZGl0LXN0YXRlLWNhcnJpZXItcGFydGlhbC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zdGF0ZS1uYW1lIHtcclxuICB3aWR0aDogYXV0bztcclxufVxyXG5cclxuLnN0YXRlLXN0YXR1cyB7XHJcbiAgY29sb3I6IHZhcigtLWdyYXltZWRpdW0pO1xyXG59XHJcblxyXG4uaW5mby1kaXZpZGVyIHtcclxuICBjb2xvcjogdmFyKC0tZ3JheWxpZ2h0KTtcclxufVxyXG5cclxuLmNhcnJpZXJzLWNvbnRhaW5lciBlanMtY2hlY2tib3gge1xyXG4gIHdpZHRoOiAzMCU7XHJcbiAgd29yZC1icmVhazogYnJlYWstd29yZDtcclxuICBwYWRkaW5nLXJpZ2h0OiAxLjVyZW07XHJcbn1cclxuIl19 */"] });


/***/ }),

/***/ 53338:
/*!****************************************************************************************************************!*\
  !*** ./src/app/admin/tools-management/components/tool-edit-state-carrier/tool-edit-state-carrier.component.ts ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToolEditStateCarrierComponent": () => (/* binding */ ToolEditStateCarrierComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/services/result.handler.service */ 32464);
/* harmony import */ var _region_management_services_region_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../region-management/services/region.service */ 59194);
/* harmony import */ var _services_tool_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/tool.service */ 92412);
/* harmony import */ var src_app_core_services_nav_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/core/services/nav.service */ 30651);
/* harmony import */ var _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/components/page-title/page-title.component */ 46896);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _tool_edit_state_carrier_partial_tool_edit_state_carrier_partial_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tool-edit-state-carrier-partial/tool-edit-state-carrier-partial.component */ 61466);
/* harmony import */ var _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @syncfusion/ej2-angular-buttons */ 78218);










const _c0 = ["stateCarrier"];
function ToolEditStateCarrierComponent_tool_edit_state_carrier_partial_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](0, "tool-edit-state-carrier-partial", 10, 11);
} if (rf & 2) {
    const region_r1 = ctx.$implicit;
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("region", region_r1)("toolManagement", ctx_r0.getToolManagement(region_r1.id));
} }
class ToolEditStateCarrierComponent {
    constructor(route, resultHandler, regionService, toolService, navService) {
        this.resultHandler = resultHandler;
        this.regionService = regionService;
        this.toolService = toolService;
        this.selectedRegionsIds = [];
        this.isRegionEnabled = (regionId) => this.selectedRegionsIds.includes(regionId);
        this.onUndo = () => this.stateCarrierComponents.forEach(a => { a.reset(); });
        const data = route.snapshot.data["tool"];
        if (data.isSuccess) {
            this.tool = data.value;
            this.selectedRegionsIds = data.value.regionsIds;
            navService.setToolNavMenu(this.tool);
        }
        else {
            this.resultHandler.handle(data);
        }
    }
    ngOnInit() {
        this.regionService.getActiveRegions().subscribe((data) => {
            if (data.isSuccess) {
                this.regions = data.value;
            }
            else {
                this.resultHandler.handle(data);
            }
        });
    }
    getToolManagement(regionId) {
        var toolManagement = this.tool.toolsManagement.filter(t => t.region.id == regionId);
        return toolManagement != null && toolManagement.length ? toolManagement[0] : undefined;
    }
    onSaveTool() {
        const model = [];
        this.stateCarrierComponents.forEach(a => {
            if (a.getModel() != null)
                model.push(a.getModel());
        });
        this.toolService.validateUpdateToolManagement(this.tool.id, model).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success)
                    this.update(model);
            });
        }, (err) => {
            this.resultHandler.handle(err.error).then((success) => {
                if (success)
                    this.update(model);
            });
        });
    }
    update(toolManagement) {
        this.toolService.updateToolManagement(this.tool.id, toolManagement).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success)
                    this.tool = data.value;
            });
        }, (err) => this.resultHandler.handle(err.error));
    }
}
ToolEditStateCarrierComponent.ɵfac = function ToolEditStateCarrierComponent_Factory(t) { return new (t || ToolEditStateCarrierComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_7__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_0__.ResultHandlerService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_region_management_services_region_service__WEBPACK_IMPORTED_MODULE_1__.RegionService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_services_tool_service__WEBPACK_IMPORTED_MODULE_2__.ToolService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](src_app_core_services_nav_service__WEBPACK_IMPORTED_MODULE_3__.NavService)); };
ToolEditStateCarrierComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineComponent"]({ type: ToolEditStateCarrierComponent, selectors: [["app-tool-edit-state-carrier"]], viewQuery: function ToolEditStateCarrierComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵviewQuery"](_c0, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵloadQuery"]()) && (ctx.stateCarrierComponents = _t);
    } }, decls: 15, vars: 2, consts: [[1, "container-fluid"], [1, "e-card", "mt-4", "p-1", "pb-4"], [1, "e-card-content"], [1, "fw-bold", "pb-4"], [3, "region", "toolManagement", 4, "ngFor", "ngForOf"], [1, "row", "pt-2", "actions-container"], [1, "col-md-3", "offset-md-6"], ["type", "button", "ejs-button", "", 1, "e-flat", 3, "click"], [1, "col-md-3"], ["ejs-button", "", 1, "e-success", 3, "click"], [3, "region", "toolManagement"], ["stateCarrier", ""]], template: function ToolEditStateCarrierComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div", 0)(1, "page-title");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](3, "div", 1)(4, "div", 2)(5, "p", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](6, "State and Carrier");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](7, ToolEditStateCarrierComponent_tool_edit_state_carrier_partial_7_Template, 2, 2, "tool-edit-state-carrier-partial", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](8, "div", 5)(9, "div", 6)(10, "button", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function ToolEditStateCarrierComponent_Template_button_click_10_listener() { return ctx.onUndo(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](11, "Undo");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](12, "div", 8)(13, "button", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function ToolEditStateCarrierComponent_Template_button_click_13_listener() { return ctx.onSaveTool(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](14, "Save");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]()()()()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate1"]("Edit ", ctx.tool == null ? null : ctx.tool.name, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngForOf", ctx.regions);
    } }, directives: [_shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_4__.PageTitleComponent, _angular_common__WEBPACK_IMPORTED_MODULE_8__.NgForOf, _tool_edit_state_carrier_partial_tool_edit_state_carrier_partial_component__WEBPACK_IMPORTED_MODULE_5__.ToolEditStateCarrierPartialComponent, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_9__.ButtonComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0b29sLWVkaXQtc3RhdGUtY2Fycmllci5jb21wb25lbnQuc2NzcyJ9 */"] });


/***/ }),

/***/ 22102:
/*!************************************************************************************!*\
  !*** ./src/app/admin/tools-management/components/tool-edit/tool-edit.component.ts ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToolEditComponent": () => (/* binding */ ToolEditComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/services/result.handler.service */ 32464);
/* harmony import */ var _services_tool_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../services/tool.service */ 92412);
/* harmony import */ var src_app_core_services_nav_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/core/services/nav.service */ 30651);
/* harmony import */ var _shared_tool_external_tool_external_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../shared/tool-external/tool-external.component */ 96139);







class ToolEditComponent {
    constructor(route, location, resultHandler, toolService, navService) {
        this.location = location;
        this.resultHandler = resultHandler;
        this.toolService = toolService;
        this.isExternal = false;
        this.return = () => this.location.back();
        const data = route.snapshot.data["tool"];
        if (data.isSuccess) {
            this.tool = data.value;
            this.isExternal = this.tool.isExternal;
            navService.setToolNavMenu(this.tool);
        }
        else {
            this.resultHandler.handle(data);
        }
    }
    ngOnInit() {
    }
    onSaveTool(eventData) {
        const formValues = eventData.formData;
        const tool = {
            name: formValues.name.trim(),
            description: formValues.description.trim(),
            url: formValues.url.trim(),
            isFavoritedByDefault: formValues.isFavoritedByDefault,
            permissionGroupsIds: eventData.permissionGroupsIds,
            regionsIds: eventData.regionsIds
        };
        this.toolService.validateUpdate(this.tool.id, tool, eventData.primaryLogo).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success)
                    this.update(tool, eventData.primaryLogo, eventData.fullSizeLogo);
            });
        }, (err) => {
            this.resultHandler.handle(err.error).then((success) => {
                if (success)
                    this.update(tool, eventData.primaryLogo, eventData.fullSizeLogo);
            });
        });
    }
    update(tool, primaryLogo, fullSizeLogo) {
        this.toolService.updateTool(this.tool.id, tool, primaryLogo, fullSizeLogo).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success)
                    this.return();
            });
        }, (err) => this.resultHandler.handle(err.error));
    }
}
ToolEditComponent.ɵfac = function ToolEditComponent_Factory(t) { return new (t || ToolEditComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_5__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_6__.Location), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_0__.ResultHandlerService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_services_tool_service__WEBPACK_IMPORTED_MODULE_1__.ToolService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](src_app_core_services_nav_service__WEBPACK_IMPORTED_MODULE_2__.NavService)); };
ToolEditComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({ type: ToolEditComponent, selectors: [["app-tool-edit"]], decls: 1, vars: 1, consts: [[3, "tool", "onToolSaved"]], template: function ToolEditComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "tool-external", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("onToolSaved", function ToolEditComponent_Template_tool_external_onToolSaved_0_listener($event) { return ctx.onSaveTool($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("tool", ctx.tool);
    } }, directives: [_shared_tool_external_tool_external_component__WEBPACK_IMPORTED_MODULE_3__.ToolExternalComponent], encapsulation: 2 });


/***/ }),

/***/ 61882:
/*!************************************************************************************!*\
  !*** ./src/app/admin/tools-management/components/tool-list/tool-list.component.ts ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToolListComponent": () => (/* binding */ ToolListComponent)
/* harmony export */ });
/* harmony import */ var _shared_components_base_grid_base_grid_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shared/components/base-grid/base-grid.component */ 84766);
/* harmony import */ var src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/shared/constants/application-urls */ 85561);
/* harmony import */ var src_app_shared_utilities_url_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/utilities/url-utils */ 82000);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/services/result.handler.service */ 32464);
/* harmony import */ var _services_tool_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/tool.service */ 92412);
/* harmony import */ var _shared_components_container_list_container_list_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/components/container-list/container-list.component */ 91317);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 27723);
/* harmony import */ var _shared_components_edit_button_edit_button_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/edit-button/edit-button.component */ 81297);
/* harmony import */ var _shared_components_restore_button_restore_button_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/restore-button/restore-button.component */ 24805);
/* harmony import */ var _shared_components_delete_button_delete_button_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/delete-button/delete-button.component */ 36820);













function ToolListComponent_ejs_grid_1_ng_template_8_edit_button_0_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](0, "edit-button", 13);
} if (rf & 2) {
    const data_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]().$implicit;
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("routerLink", ctx_r6.replaceParams(ctx_r6.editToolUrl, data_r5.id))("state", ctx_r6.formatTool(data_r5));
} }
function ToolListComponent_ejs_grid_1_ng_template_8_edit_button_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](0, "edit-button", 13);
} if (rf & 2) {
    const data_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]().$implicit;
    const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("routerLink", ctx_r7.replaceParams(ctx_r7.stateCarrierUrl, data_r5.id))("state", ctx_r7.formatTool(data_r5));
} }
function ToolListComponent_ejs_grid_1_ng_template_8_edit_button_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](0, "edit-button", 13);
} if (rf & 2) {
    const data_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]().$implicit;
    const ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("routerLink", ctx_r8.replaceParams(ctx_r8.generalInfoUrl, data_r5.id))("state", ctx_r8.formatTool(data_r5));
} }
function ToolListComponent_ejs_grid_1_ng_template_8_restore_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r16 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "restore-button", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("click", function ToolListComponent_ejs_grid_1_ng_template_8_restore_button_3_Template_restore_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r16); const data_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]().$implicit; const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2); return ctx_r14.onRestore(data_r5); });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
} }
function ToolListComponent_ejs_grid_1_ng_template_8_delete_button_4_Template(rf, ctx) { if (rf & 1) {
    const _r19 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "delete-button", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("click", function ToolListComponent_ejs_grid_1_ng_template_8_delete_button_4_Template_delete_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r19); const data_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]().$implicit; const ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2); return ctx_r17.onDelete(data_r5); });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
} }
function ToolListComponent_ejs_grid_1_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](0, ToolListComponent_ejs_grid_1_ng_template_8_edit_button_0_Template, 1, 2, "edit-button", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](1, ToolListComponent_ejs_grid_1_ng_template_8_edit_button_1_Template, 1, 2, "edit-button", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](2, ToolListComponent_ejs_grid_1_ng_template_8_edit_button_2_Template, 1, 2, "edit-button", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](3, ToolListComponent_ejs_grid_1_ng_template_8_restore_button_3_Template, 1, 0, "restore-button", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](4, ToolListComponent_ejs_grid_1_ng_template_8_delete_button_4_Template, 1, 0, "delete-button", 12);
} if (rf & 2) {
    const data_r5 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", data_r5.active && data_r5.isExternal);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", data_r5.active && data_r5.isManagedByStateAndCarrier);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", data_r5.active && !data_r5.isExternal && !data_r5.isManagedByStateAndCarrier);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", !data_r5.active);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", data_r5.isExternal);
} }
function ToolListComponent_ejs_grid_1_Template(rf, ctx) { if (rf & 1) {
    const _r21 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "ejs-grid", 3, 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("rowDrop", function ToolListComponent_ejs_grid_1_Template_ejs_grid_rowDrop_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r21); const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](); return ctx_r20.onRowDrop($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](2, "e-columns");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](3, "e-column", 5)(4, "e-column", 6)(5, "e-column", 7)(6, "e-column", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](7, "e-column", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](8, ToolListComponent_ejs_grid_1_ng_template_8_Template, 5, 5, "ng-template", null, 10, _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()()();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("dataSource", ctx_r0.data)("allowTextWrap", true)("allowRowDragAndDrop", true)("searchSettings", ctx_r0.searchSettings);
} }
function ToolListComponent_ejs_grid_2_ng_template_7_edit_button_0_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](0, "edit-button", 13);
} if (rf & 2) {
    const data_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]().$implicit;
    const ctx_r26 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("routerLink", ctx_r26.replaceParams(ctx_r26.editToolUrl, data_r25.id))("state", ctx_r26.formatTool(data_r25));
} }
function ToolListComponent_ejs_grid_2_ng_template_7_edit_button_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](0, "edit-button", 13);
} if (rf & 2) {
    const data_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]().$implicit;
    const ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("routerLink", ctx_r27.replaceParams(ctx_r27.stateCarrierUrl, data_r25.id))("state", ctx_r27.formatTool(data_r25));
} }
function ToolListComponent_ejs_grid_2_ng_template_7_edit_button_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](0, "edit-button", 13);
} if (rf & 2) {
    const data_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]().$implicit;
    const ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("routerLink", ctx_r28.replaceParams(ctx_r28.generalInfoUrl, data_r25.id))("state", ctx_r28.formatTool(data_r25));
} }
function ToolListComponent_ejs_grid_2_ng_template_7_restore_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r36 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "restore-button", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("click", function ToolListComponent_ejs_grid_2_ng_template_7_restore_button_3_Template_restore_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r36); const data_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]().$implicit; const ctx_r34 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2); return ctx_r34.onRestore(data_r25); });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
} }
function ToolListComponent_ejs_grid_2_ng_template_7_delete_button_4_Template(rf, ctx) { if (rf & 1) {
    const _r39 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "delete-button", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("click", function ToolListComponent_ejs_grid_2_ng_template_7_delete_button_4_Template_delete_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r39); const data_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]().$implicit; const ctx_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2); return ctx_r37.onDelete(data_r25); });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
} }
function ToolListComponent_ejs_grid_2_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](0, ToolListComponent_ejs_grid_2_ng_template_7_edit_button_0_Template, 1, 2, "edit-button", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](1, ToolListComponent_ejs_grid_2_ng_template_7_edit_button_1_Template, 1, 2, "edit-button", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](2, ToolListComponent_ejs_grid_2_ng_template_7_edit_button_2_Template, 1, 2, "edit-button", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](3, ToolListComponent_ejs_grid_2_ng_template_7_restore_button_3_Template, 1, 0, "restore-button", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](4, ToolListComponent_ejs_grid_2_ng_template_7_delete_button_4_Template, 1, 0, "delete-button", 12);
} if (rf & 2) {
    const data_r25 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", data_r25.active && data_r25.isExternal);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", data_r25.active && data_r25.isManagedByStateAndCarrier);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", data_r25.active && !data_r25.isExternal && !data_r25.isManagedByStateAndCarrier);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", !data_r25.active);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", data_r25.isExternal);
} }
function ToolListComponent_ejs_grid_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "ejs-grid", 15, 4)(2, "e-columns");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](3, "e-column", 6)(4, "e-column", 7)(5, "e-column", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](6, "e-column", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](7, ToolListComponent_ejs_grid_2_ng_template_7_Template, 5, 5, "ng-template", null, 10, _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()()();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("dataSource", ctx_r1.data)("allowTextWrap", true)("searchSettings", ctx_r1.searchSettings);
} }
class ToolListComponent extends _shared_components_base_grid_base_grid_component__WEBPACK_IMPORTED_MODULE_0__.BaseGridComponent {
    constructor(route, resultHandler, toolService) {
        super();
        this.resultHandler = resultHandler;
        this.toolService = toolService;
        this.replaceParams = src_app_shared_utilities_url_utils__WEBPACK_IMPORTED_MODULE_2__.UrlUtils.replaceParams;
        this.newToolUrl = src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_1__.ApplicationUrls.GlobalToolSuite.ToolsManagement.NewExternalTool.path;
        this.editToolUrl = src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_1__.ApplicationUrls.GlobalToolSuite.ToolsManagement.EditTool.path;
        this.stateCarrierUrl = src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_1__.ApplicationUrls.GlobalToolSuite.ToolsManagement.StateAndCarrier.path;
        this.generalInfoUrl = src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_1__.ApplicationUrls.GlobalToolSuite.ToolsManagement.GeneralInformation.path;
        var data = route.snapshot.data["tools"];
        this.handleTools(data);
    }
    ngOnInit() {
        this.searchSettings = { fields: ['name'] };
    }
    handleTools(tools) {
        if (tools.isSuccess) {
            this.data = tools.value;
        }
        else {
            this.resultHandler.handle(tools);
        }
    }
    loadTools() {
        this.toolService.getManageableTools(!this.showArchived).subscribe((data) => {
            this.handleTools(data);
        }, (err) => this.resultHandler.handle(err.error));
    }
    onArchiveChange(showArchived) {
        this.showArchived = showArchived;
        this.loadTools();
    }
    onRestore(tool) {
        this.toolService.validateRestore(tool).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success)
                    this.restoreTool(tool);
            });
        }, (err) => {
            this.resultHandler.handle(err.error).then((success) => {
                if (success)
                    this.restoreTool(tool);
            });
        });
    }
    restoreTool(tool) {
        this.toolService.restoreTool(tool).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.loadTools();
                }
            });
        }, (err) => this.resultHandler.handle(err.error));
    }
    onDelete(tool) {
        this.toolService.validateDelete(tool).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success)
                    this.deleteTool(tool);
            });
        }, (err) => {
            this.resultHandler.handle(err.error).then((success) => {
                if (success)
                    this.deleteTool(tool);
            });
        });
    }
    deleteTool(tool) {
        this.toolService.delete(tool).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success)
                    this.loadTools();
            });
        }, (err) => this.resultHandler.handle(err.error));
    }
    formatTool(tool) {
        const state = {
            active: tool.active,
            description: tool.description,
            descriptionView: tool.descriptionView,
            isFavoritedByDefault: tool.isFavoritedByDefault,
            isFavoritedByDefaultView: tool.isFavoritedByDefaultView,
            id: tool.id,
            isAdminTool: tool.isAdminTool,
            isExternal: tool.isExternal,
            name: tool.name,
            permissionGroupsIds: [],
            order: tool.order,
            primaryLogoFilePath: tool.primaryLogoFilePath,
            fullSizeLogoFilePath: tool.fullSizeLogoFilePath,
            regionsIds: [],
            resourceLinks: tool.resourceLinks,
            type: tool.type,
            url: tool.url,
            welcomeMessage: tool.welcomeMessage,
            toolsManagement: [],
            isManagedByStateAndCarrier: tool.isManagedByStateAndCarrier
        };
        return { data: state };
    }
    onRowDrop($event) {
        const tool = $event.data[0];
        const newOrder = $event.dropIndex + 1;
        if (tool.order == newOrder)
            return;
        this.toolService.updateToolOrder(tool.id, newOrder).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success)
                    this.loadTools();
            });
        }, (err) => this.resultHandler.handle(err.error));
    }
}
ToolListComponent.ɵfac = function ToolListComponent_Factory(t) { return new (t || ToolListComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_10__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_3__.ResultHandlerService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_services_tool_service__WEBPACK_IMPORTED_MODULE_4__.ToolService)); };
ToolListComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineComponent"]({ type: ToolListComponent, selectors: [["app-tools-list"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵInheritDefinitionFeature"]], decls: 3, vars: 3, consts: [["title", "Tools Management", "searchPlaceHolder", "Search Tool Name...", "actionButtonText", "New External Link", 3, "actionButtonLink", "search", "archiveChange"], [3, "dataSource", "allowTextWrap", "allowRowDragAndDrop", "searchSettings", "rowDrop", 4, "ngIf"], [3, "dataSource", "allowTextWrap", "searchSettings", 4, "ngIf"], [3, "dataSource", "allowTextWrap", "allowRowDragAndDrop", "searchSettings", "rowDrop"], ["grid", ""], ["field", "order", "headerText", "#", "width", "40"], ["field", "name", "headerText", "Name"], ["field", "isFavoritedByDefaultView", "headerText", "Favorited by Default", "width", "125"], ["field", "type", "headerText", "Type", "width", "125"], ["headerText", "Actions", "width", "240"], ["template", ""], [3, "routerLink", "state", 4, "ngIf"], [3, "click", 4, "ngIf"], [3, "routerLink", "state"], [3, "click"], [3, "dataSource", "allowTextWrap", "searchSettings"]], template: function ToolListComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "container-list", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("search", function ToolListComponent_Template_container_list_search_0_listener($event) { return ctx.search($event); })("archiveChange", function ToolListComponent_Template_container_list_archiveChange_0_listener($event) { return ctx.onArchiveChange($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](1, ToolListComponent_ejs_grid_1_Template, 10, 4, "ejs-grid", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](2, ToolListComponent_ejs_grid_2_Template, 9, 3, "ejs-grid", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("actionButtonLink", ctx.newToolUrl);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", !ctx.showArchived);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.showArchived);
    } }, directives: [_shared_components_container_list_container_list_component__WEBPACK_IMPORTED_MODULE_5__.ContainerListComponent, _angular_common__WEBPACK_IMPORTED_MODULE_11__.NgIf, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.AggregateColumnDirective, _shared_components_edit_button_edit_button_component__WEBPACK_IMPORTED_MODULE_6__.EditButtonComponent, _angular_router__WEBPACK_IMPORTED_MODULE_10__.RouterLink, _shared_components_restore_button_restore_button_component__WEBPACK_IMPORTED_MODULE_7__.RestoreButtonComponent, _shared_components_delete_button_delete_button_component__WEBPACK_IMPORTED_MODULE_8__.DeleteButtonComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0b29sLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */"] });


/***/ }),

/***/ 23545:
/*!***********************************************************************************!*\
  !*** ./src/app/admin/tools-management/resolvers/tool-manageable-list.resolver.ts ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToolManageableListResolver": () => (/* binding */ ToolManageableListResolver)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _services_tool_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../services/tool.api.service */ 95995);


class ToolManageableListResolver {
    constructor(toolService) {
        this.toolService = toolService;
    }
    resolve(route, state) {
        return this.toolService.getManageableTools(true);
    }
}
ToolManageableListResolver.ɵfac = function ToolManageableListResolver_Factory(t) { return new (t || ToolManageableListResolver)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_services_tool_api_service__WEBPACK_IMPORTED_MODULE_0__.ToolApiService)); };
ToolManageableListResolver.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: ToolManageableListResolver, factory: ToolManageableListResolver.ɵfac });


/***/ }),

/***/ 18250:
/*!***************************************************************************************!*\
  !*** ./src/app/admin/user-management/components/user-create/user-create.component.ts ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UserCreateComponent": () => (/* binding */ UserCreateComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _shared_constants_tools_list_enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shared/constants/tools-list.enum */ 99485);
/* harmony import */ var _shared_utilities_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shared/utilities/shared */ 14364);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/user.service */ 34033);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/services/result.handler.service */ 32464);
/* harmony import */ var _shared_services_input_validator_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/input-validator.service */ 68516);
/* harmony import */ var _roles_services_role_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../roles/services/role.service */ 18862);
/* harmony import */ var _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/page-title/page-title.component */ 46896);
/* harmony import */ var _shared_components_return_button_return_button_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/return-button/return-button.component */ 44188);
/* harmony import */ var _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @syncfusion/ej2-angular-inputs */ 53691);
/* harmony import */ var _shared_components_field_error_display_field_error_display_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/field-error-display/field-error-display.component */ 76530);
/* harmony import */ var _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @syncfusion/ej2-angular-buttons */ 78218);
/* harmony import */ var _syncfusion_ej2_angular_navigations__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @syncfusion/ej2-angular-navigations */ 36477);
















function UserCreateComponent_div_19_ejs_checkbox_4_Template(rf, ctx) { if (rf & 1) {
    const _r7 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "ejs-checkbox", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("change", function UserCreateComponent_div_19_ejs_checkbox_4_Template_ejs_checkbox_change_0_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r7); const role_r5 = restoredCtx.$implicit; const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2); return ctx_r6.roleChecked(role_r5); });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
} if (rf & 2) {
    const role_r5 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵpropertyInterpolate"]("label", role_r5.name);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵpropertyInterpolate"]("value", role_r5.id);
} }
function UserCreateComponent_div_19_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "div", 17)(1, "label", 27);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](3, "div", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](4, UserCreateComponent_div_19_ejs_checkbox_4_Template, 1, 2, "ejs-checkbox", 28);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
} if (rf & 2) {
    const group_r3 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](group_r3.name);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngForOf", group_r3.subChild);
} }
function UserCreateComponent_ng_template_25_div_0_ejs_radiobutton_1_Template(rf, ctx) { if (rf & 1) {
    const _r15 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "ejs-radiobutton", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("change", function UserCreateComponent_ng_template_25_div_0_ejs_radiobutton_1_Template_ejs_radiobutton_change_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r15); const data_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2).$implicit; const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](); return ctx_r13.roleChecked(data_r8); });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2).$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵpropertyInterpolate"]("label", data_r8.name);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵpropertyInterpolate"]("name", data_r8.group);
} }
function UserCreateComponent_ng_template_25_div_0_ejs_checkbox_2_Template(rf, ctx) { if (rf & 1) {
    const _r19 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "ejs-checkbox", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("change", function UserCreateComponent_ng_template_25_div_0_ejs_checkbox_2_Template_ejs_checkbox_change_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r19); const data_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2).$implicit; const ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](); return ctx_r17.roleChecked(data_r8); });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2).$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵpropertyInterpolate"]("label", data_r8.name);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵpropertyInterpolate"]("name", data_r8.group);
} }
function UserCreateComponent_ng_template_25_div_0_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](1, UserCreateComponent_ng_template_25_div_0_ejs_radiobutton_1_Template, 1, 2, "ejs-radiobutton", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](2, UserCreateComponent_ng_template_25_div_0_ejs_checkbox_2_Template, 1, 2, "ejs-checkbox", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", data_r8.type == "radio");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", data_r8.type == "checkbox");
} }
function UserCreateComponent_ng_template_25_div_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "div")(1, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
} if (rf & 2) {
    const data_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](data_r8.name);
} }
function UserCreateComponent_ng_template_25_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](0, UserCreateComponent_ng_template_25_div_0_Template, 3, 2, "div", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](1, UserCreateComponent_ng_template_25_div_1_Template, 3, 1, "div", 30);
} if (rf & 2) {
    const data_r8 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", data_r8.type != null);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", data_r8.subChild != null);
} }
class UserCreateComponent {
    constructor(fb, userService, location, resultHandler, inputValidatorService, roleService) {
        this.fb = fb;
        this.userService = userService;
        this.location = location;
        this.resultHandler = resultHandler;
        this.inputValidatorService = inputValidatorService;
        this.roleService = roleService;
        this.checkedRoles = [];
        this.return = () => this.location.back();
    }
    ngOnInit() {
        this.initializeForm();
        this.roleService.getRolesGrouped().subscribe((data) => {
            this.handleRoles(data);
        });
    }
    handleRoles(roles) {
        if (roles.isSuccess) {
            this.roles = roles.value;
            this.setupRolesList();
        }
        else {
            this.resultHandler.handle(roles);
        }
    }
    initializeForm() {
        this.userCreateForm = this.fb.group({
            firstName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_10__.Validators.required],
            lastName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_10__.Validators.required],
            email: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_10__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.Validators.email]]
        });
    }
    clearForm() {
        this.userCreateForm.reset();
        this.setupRolesList();
    }
    setupRolesList() {
        const rolesFormated = this.getRolesFormated(this.roles);
        this.rolesTree = { dataSource: rolesFormated, id: 'id', text: 'name', child: 'subChild' };
        this.globalAdminRoles = this.roles.filter(r => r.tool.id == _shared_constants_tools_list_enum__WEBPACK_IMPORTED_MODULE_0__.ToolsList.GlobalToolSuite)[0].tool.groups.map(group => {
            return {
                name: group.name,
                subChild: group.roles.map(gr => {
                    return {
                        id: gr.id,
                        group: gr.id,
                        name: gr.name
                    };
                })
            };
        });
    }
    getRolesFormated(roles) {
        return roles.filter(r => r.tool.id != _shared_constants_tools_list_enum__WEBPACK_IMPORTED_MODULE_0__.ToolsList.GlobalToolSuite).map(role => {
            return {
                id: role.tool.id,
                name: (0,_shared_utilities_shared__WEBPACK_IMPORTED_MODULE_1__.formatAdminToolName)(role.tool),
                subChild: role.tool.regions.map(region => {
                    return {
                        id: `${role.tool.id}-${region.id}`,
                        name: region.name,
                        subChild: region.roles.map(rr => {
                            return {
                                id: rr.id,
                                name: rr.name,
                                group: `${role.tool.id}.${region.id}`,
                                type: 'radio'
                            };
                        })
                    };
                }).concat(role.tool.groups.map(group => {
                    return {
                        id: group.name,
                        name: group.name,
                        subChild: group.roles.map(gr => {
                            return {
                                id: gr.id,
                                name: gr.name,
                                group: `${gr.id}`,
                                type: 'checkbox'
                            };
                        })
                    };
                }))
            };
        });
    }
    roleChecked(data) {
        var index = this.checkedRoles.findIndex(role => role.group == data.group);
        if (index != -1) {
            this.checkedRoles[index].id = data.id;
        }
        else {
            this.checkedRoles.push({ group: data.group, id: data.id });
        }
    }
    onSaveUser() {
        this.userCreateForm.markAllAsTouched();
        if (!this.userCreateForm.valid) {
            return;
        }
        let model = this.userCreateForm.value;
        //always creating an admin user
        model.userType = 1;
        model.roleIds = this.checkedRoles.map(role => role.id);
        this.userService.createUser(model).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.return();
                }
            });
        }, (err) => {
            this.resultHandler.handle(err.error);
        });
    }
}
UserCreateComponent.ɵfac = function UserCreateComponent_Factory(t) { return new (t || UserCreateComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_10__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_services_user_service__WEBPACK_IMPORTED_MODULE_2__.UserService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_11__.Location), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_3__.ResultHandlerService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_shared_services_input_validator_service__WEBPACK_IMPORTED_MODULE_4__.InputValidatorService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_roles_services_role_service__WEBPACK_IMPORTED_MODULE_5__.RoleService)); };
UserCreateComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineComponent"]({ type: UserCreateComponent, selectors: [["app-user-create"]], decls: 34, vars: 7, consts: [[3, "formGroup", "ngSubmit"], [1, "container-fluid"], ["sufix", "To Users"], [1, "e-card", "mt-4", "p-1", "pb-4"], [1, "e-card-content"], [1, "row"], [1, "form-group", "col-6"], ["placeholder", "First Name", "floatLabelType", "Always", "autocomplete", "off", "maxlength", "255", "required", "", "formControlName", "firstName"], ["errorMsg", "* First Name is required", 3, "displayError"], ["placeholder", "Last Name", "floatLabelType", "Always", "autocomplete", "off", "maxlength", "255", "required", "", "formControlName", "lastName"], ["errorMsg", "* Last Name is required", 3, "displayError"], [1, "form-group", "row", "mt-2"], [1, "col-6"], ["placeholder", "Email", "floatLabelType", "Always", "autocomplete", "off", "maxlength", "255", "required", "", "formControlName", "email"], ["errorMsg", "* Email is required", 3, "displayError"], ["errorMsg", "* Invalid email", 3, "displayError"], ["class", "row pt-4", 4, "ngFor", "ngForOf"], [1, "row", "pt-4"], [1, "col-md-12"], [1, "pt-3"], [3, "fields"], ["nodeTemplate", ""], [1, "row", "pt-2", "actions-container"], [1, "col-md-3", "offset-md-6"], ["type", "button", "ejs-button", "", 1, "e-flat", 3, "click"], [1, "col-md-3"], ["ejs-button", "", 1, "e-success"], [1, "col-md-12", "fw-bold"], ["cssClass", "mr-3", 3, "label", "value", "change", 4, "ngFor", "ngForOf"], ["cssClass", "mr-3", 3, "label", "value", "change"], [4, "ngIf"], [3, "label", "name", "change", 4, "ngIf"], [3, "label", "name", "change"]], template: function UserCreateComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "form", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("ngSubmit", function UserCreateComponent_Template_form_ngSubmit_0_listener() { return ctx.onSaveUser(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](1, "div", 1)(2, "page-title");
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](3, "New Administrator");
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](4, "return-button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](5, "div", 3)(6, "div", 4)(7, "div", 5)(8, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](9, "ejs-textbox", 7)(10, "app-field-error-display", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](11, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](12, "ejs-textbox", 9)(13, "app-field-error-display", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](14, "div", 11)(15, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](16, "ejs-textbox", 13)(17, "app-field-error-display", 14)(18, "app-field-error-display", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](19, UserCreateComponent_div_19_Template, 5, 2, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](20, "div", 17)(21, "label", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](22, "Roles");
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](23, "div", 19)(24, "ejs-treeview", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](25, UserCreateComponent_ng_template_25_Template, 2, 2, "ng-template", null, 21, _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()()()();
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](27, "div", 22)(28, "div", 23)(29, "button", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("click", function UserCreateComponent_Template_button_click_29_listener() { return ctx.clearForm(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](30, "Clear");
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](31, "div", 25)(32, "button", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](33, "Add New");
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()()()()()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("formGroup", ctx.userCreateForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("displayError", ctx.inputValidatorService.isInvalidRequired(ctx.userCreateForm, "firstName"));
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("displayError", ctx.inputValidatorService.isInvalidRequired(ctx.userCreateForm, "lastName"));
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("displayError", ctx.inputValidatorService.isInvalidRequired(ctx.userCreateForm, "email"));
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("displayError", ctx.inputValidatorService.isInvalidEmail(ctx.userCreateForm, "email"));
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngForOf", ctx.globalAdminRoles);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("fields", ctx.rolesTree);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_10__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_10__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.FormGroupDirective, _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_6__.PageTitleComponent, _shared_components_return_button_return_button_component__WEBPACK_IMPORTED_MODULE_7__.ReturnButtonComponent, _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_12__.TextBoxComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.MaxLengthValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.RequiredValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.FormControlName, _shared_components_field_error_display_field_error_display_component__WEBPACK_IMPORTED_MODULE_8__.FieldErrorDisplayComponent, _angular_common__WEBPACK_IMPORTED_MODULE_11__.NgForOf, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_13__.CheckBoxComponent, _syncfusion_ej2_angular_navigations__WEBPACK_IMPORTED_MODULE_14__.TreeViewComponent, _angular_common__WEBPACK_IMPORTED_MODULE_11__.NgIf, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_13__.RadioButtonComponent, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_13__.ButtonComponent], styles: [".e-treeview[_ngcontent-%COMP%] {\n  height: 250px;\n  overflow-y: auto;\n  border: 1px solid #CCCCCC;\n  border-radius: 3px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXItY3JlYXRlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLGdCQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtBQUNGIiwiZmlsZSI6InVzZXItY3JlYXRlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmUtdHJlZXZpZXcge1xyXG4gIGhlaWdodDogMjUwcHg7XHJcbiAgb3ZlcmZsb3cteTogYXV0bztcclxuICBib3JkZXI6IDFweCBzb2xpZCAjQ0NDQ0NDO1xyXG4gIGJvcmRlci1yYWRpdXM6IDNweDtcclxufVxyXG4iXX0= */"] });


/***/ }),

/***/ 52937:
/*!***********************************************************************************************!*\
  !*** ./src/app/admin/user-management/components/user-edit-roles/user-edit-roles.component.ts ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UserEditRolesComponent": () => (/* binding */ UserEditRolesComponent)
/* harmony export */ });
/* harmony import */ var _shared_utilities_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shared/utilities/shared */ 14364);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/services/result.handler.service */ 32464);
/* harmony import */ var _roles_services_role_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../roles/services/role.service */ 18862);
/* harmony import */ var src_app_core_services_nav_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/core/services/nav.service */ 30651);
/* harmony import */ var _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/components/page-title/page-title.component */ 46896);
/* harmony import */ var _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @syncfusion/ej2-angular-buttons */ 78218);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _syncfusion_ej2_angular_navigations__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @syncfusion/ej2-angular-navigations */ 36477);
/* harmony import */ var _shared_tool_icon_tool_icon_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../shared/tool-icon/tool-icon.component */ 87786);
/* harmony import */ var _shared_user_edit_roles_tool_user_edit_roles_tool_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../shared/user-edit-roles-tool/user-edit-roles-tool.component */ 58340);












const _c0 = ["accordionComponent"];
function UserEditRolesComponent_ejs_accordion_9_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](1, "tool-icon", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](2, "label", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]()();
} if (rf & 2) {
    const roleGroup_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]().$implicit;
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("tool", roleGroup_r1.tool);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate"](ctx_r4.formatToolName(roleGroup_r1.tool));
} }
function UserEditRolesComponent_ejs_accordion_9_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](0, "app-user-edit-roles-tool", 12);
} if (rf & 2) {
    const roleGroup_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]().$implicit;
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("user", ctx_r6.user)("roleGroup", roleGroup_r1);
} }
function UserEditRolesComponent_ejs_accordion_9_Template(rf, ctx) { if (rf & 1) {
    const _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "ejs-accordion", 6, 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("expanded", function UserEditRolesComponent_ejs_accordion_9_Template_ejs_accordion_expanded_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r10); const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"](); return ctx_r9.accordionExpanded($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](2, "e-accordionitems")(3, "e-accordionitem");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](4, UserEditRolesComponent_ejs_accordion_9_ng_template_4_Template, 4, 2, "ng-template", null, 8, _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](6, UserEditRolesComponent_ejs_accordion_9_ng_template_6_Template, 1, 2, "ng-template", null, 9, _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]()()();
} }
class UserEditRolesComponent {
    constructor(route, resultHandler, roleService, navService) {
        this.resultHandler = resultHandler;
        this.roleService = roleService;
        this.formatToolName = _shared_utilities_shared__WEBPACK_IMPORTED_MODULE_0__.formatAdminToolName;
        this.checkedRoles = null;
        this.isExpanded = false;
        this.expandedCount = 0;
        const data = route.snapshot.data["user"];
        if (data.isSuccess) {
            this.user = data.value;
            navService.setUserManagementNavMenu(this.user.userTypeName);
        }
        else {
            this.resultHandler.handle(data);
        }
    }
    ngOnInit() {
        this.roleService.getRolesGrouped().subscribe((data) => {
            this.handleRoles(data);
        });
    }
    handleRoles(rolesGrouped) {
        if (rolesGrouped.isSuccess) {
            this.rolesGrouped = rolesGrouped.value;
        }
        else {
            this.resultHandler.handle(rolesGrouped);
        }
    }
    toggleAccordions() {
        this.accordionComponents.forEach(a => {
            a.expandItem(!this.isExpanded);
        });
    }
    accordionExpanded(event) {
        this.expandedCount = event.isExpanded ? this.expandedCount + 1 : this.expandedCount - 1;
        if (this.expandedCount == 0) {
            this.isExpanded = false;
        }
        else if (this.expandedCount == this.accordionComponents.length) {
            this.isExpanded = true;
        }
    }
}
UserEditRolesComponent.ɵfac = function UserEditRolesComponent_Factory(t) { return new (t || UserEditRolesComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_8__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_1__.ResultHandlerService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_roles_services_role_service__WEBPACK_IMPORTED_MODULE_2__.RoleService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](src_app_core_services_nav_service__WEBPACK_IMPORTED_MODULE_3__.NavService)); };
UserEditRolesComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineComponent"]({ type: UserEditRolesComponent, selectors: [["app-user-edit-roles"]], viewQuery: function UserEditRolesComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵviewQuery"](_c0, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵloadQuery"]()) && (ctx.accordionComponents = _t);
    } }, decls: 10, vars: 4, consts: [[1, "container-fluid"], [1, "row"], [1, "col-md-7"], [1, "col-md-3", "offset-md-2", "actions-container"], ["type", "button", "ejs-button", "", 3, "iconCss", "click"], ["class", "mt-4", 3, "expanded", 4, "ngFor", "ngForOf"], [1, "mt-4", 3, "expanded"], ["accordionComponent", ""], ["header", ""], ["content", ""], [1, "col", 3, "tool"], [1, "col", "fw-bold"], [3, "user", "roleGroup"]], template: function UserEditRolesComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div", 0)(1, "page-title");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](3, "div", 1)(4, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](5, "Select tool to expand and collapse role and state detail.");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](6, "div", 3)(7, "button", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function UserEditRolesComponent_Template_button_click_7_listener() { return ctx.toggleAccordions(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]()()();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](9, UserEditRolesComponent_ejs_accordion_9_Template, 8, 0, "ejs-accordion", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate1"]("Edit ", ctx.user.name, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵpropertyInterpolate1"]("iconCss", "e-icons ", ctx.isExpanded ? "e-intermediate-state-2" : "e-plus", "");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate1"](" ", ctx.isExpanded ? "Collapse All" : "Expand All", " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngForOf", ctx.rolesGrouped);
    } }, directives: [_shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_4__.PageTitleComponent, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_9__.ButtonComponent, _angular_common__WEBPACK_IMPORTED_MODULE_10__.NgForOf, _syncfusion_ej2_angular_navigations__WEBPACK_IMPORTED_MODULE_11__.AccordionComponent, _syncfusion_ej2_angular_navigations__WEBPACK_IMPORTED_MODULE_11__.AccordionItemsDirective, _syncfusion_ej2_angular_navigations__WEBPACK_IMPORTED_MODULE_11__.AccordionItemDirective, _shared_tool_icon_tool_icon_component__WEBPACK_IMPORTED_MODULE_5__.ToolIconComponent, _shared_user_edit_roles_tool_user_edit_roles_tool_component__WEBPACK_IMPORTED_MODULE_6__.UserEditRolesToolComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2VyLWVkaXQtcm9sZXMuY29tcG9uZW50LnNjc3MifQ== */"] });


/***/ }),

/***/ 15540:
/*!*****************************************************************************************************!*\
  !*** ./src/app/admin/user-management/components/user-edit-security/user-edit-security.component.ts ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UserEditSecurityComponent": () => (/* binding */ UserEditSecurityComponent)
/* harmony export */ });
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../../../../environments/environment */ 92340);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_app_shared_services_input_validator_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/shared/services/input-validator.service */ 68516);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/services/result.handler.service */ 32464);
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/user.service */ 34033);
/* harmony import */ var _authentication_services_account_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../authentication/services/account.service */ 94398);
/* harmony import */ var src_app_core_services_nav_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/core/services/nav.service */ 30651);
/* harmony import */ var _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/page-title/page-title.component */ 46896);
/* harmony import */ var _shared_components_page_description_page_description_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/page-description/page-description.component */ 89424);
/* harmony import */ var _shared_user_edit_password_user_edit_password_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../shared/user-edit-password/user-edit-password.component */ 44369);
/* harmony import */ var _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @syncfusion/ej2-angular-buttons */ 78218);
/* harmony import */ var _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @syncfusion/ej2-angular-inputs */ 53691);
/* harmony import */ var _shared_components_field_error_display_field_error_display_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/field-error-display/field-error-display.component */ 76530);

















function UserEditSecurityComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    const _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](0, "div", 8)(1, "div", 15)(2, "label", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](3, "Forget your password?");
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](4, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](5, "Click the Reset Password button and we will send you reset instructions.");
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](6, "button", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("click", function UserEditSecurityComponent_div_7_Template_button_click_6_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵrestoreView"](_r3); const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵnextContext"](); return ctx_r2.resetPassword(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](7, "Reset Password");
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]()()();
} }
function UserEditSecurityComponent_app_user_edit_password_8_Template(rf, ctx) { if (rf & 1) {
    const _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](0, "app-user-edit-password", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("onEditPassword", function UserEditSecurityComponent_app_user_edit_password_8_Template_app_user_edit_password_onEditPassword_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵrestoreView"](_r5); const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵnextContext"](); return ctx_r4.changePassword($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
} }
class UserEditSecurityComponent {
    constructor(route, fb, inputValidatorService, location, resultHandler, userService, accountService, navService) {
        this.fb = fb;
        this.inputValidatorService = inputValidatorService;
        this.location = location;
        this.resultHandler = resultHandler;
        this.userService = userService;
        this.accountService = accountService;
        this.isEditable = false;
        this.return = () => this.location.back();
        const data = route.snapshot.data["user"];
        if (data.isSuccess) {
            this.user = data.value;
            this.isEditable = data.value.userType == 1; // "Administrator";
            navService.setUserManagementNavMenu(this.user.userTypeName);
        }
        else {
            this.resultHandler.handle(data);
        }
    }
    ngOnInit() {
        this.initializeForm();
    }
    onSaveUser() {
        this.form.markAllAsTouched();
        if (!this.form.valid) {
            return;
        }
        let model = this.form.value;
        this.userService.updateUserSecurity(this.user.id, model).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.return();
                }
            });
        }, (err) => {
            this.resultHandler.handle(err.error);
        });
    }
    resetPassword() {
        let model = {
            clientUri: _environments_environment__WEBPACK_IMPORTED_MODULE_0__.environment.client.baseUrl,
            email: this.user.email
        };
        this.accountService.forgotPassword(model).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.return();
                }
            });
        }, (err) => {
            this.resultHandler.handle(err.error);
        });
    }
    changePassword(model) {
        var _a;
        model.email = (_a = this.user) === null || _a === void 0 ? void 0 : _a.email;
        this.userService.changePassword(model).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.return();
                }
            });
        }, (err) => {
            this.resultHandler.handle(err.error);
        });
    }
    initializeForm() {
        this.form = this.fb.group({
            accountLocked: [this.user.accountLocked, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.Validators.required],
            phoneNumber: [this.user.phoneNumber, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.Validators.required]
        });
    }
}
UserEditSecurityComponent.ɵfac = function UserEditSecurityComponent_Factory(t) { return new (t || UserEditSecurityComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_12__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](src_app_shared_services_input_validator_service__WEBPACK_IMPORTED_MODULE_1__.InputValidatorService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_13__.Location), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_2__.ResultHandlerService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_services_user_service__WEBPACK_IMPORTED_MODULE_3__.UserService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_authentication_services_account_service__WEBPACK_IMPORTED_MODULE_4__.AccountService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](src_app_core_services_nav_service__WEBPACK_IMPORTED_MODULE_5__.NavService)); };
UserEditSecurityComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineComponent"]({ type: UserEditSecurityComponent, selectors: [["app-user-edit-security"]], decls: 26, vars: 5, consts: [[1, "container-fluid"], [1, "e-card", "mt-4", "p-1", "pb-4"], [1, "e-card-content"], ["class", "row", 4, "ngIf"], [3, "onEditPassword", 4, "ngIf"], [3, "formGroup", "ngSubmit"], [1, "row", "mt-5"], [1, "fw-bold"], [1, "row"], [1, "col-4"], ["label", "Account is locked", "formControlName", "accountLocked"], ["mask", "(000) 000-0000", "floatLabelType", "Always", "autocomplete", "off", "maxlength", "255", "required", "", "formControlName", "phoneNumber", "width", "200px"], ["errorMsg", "* Phone Number is required", 3, "displayError"], [1, "row", "pt-2", "align-end"], ["ejs-button", "", 1, "e-success", "btn-default-size"], [1, "form-group", "col-6"], ["type", "button", 1, "btn", "btn-secondary", "btn-default-size", "mt-2", 3, "click"], [3, "onEditPassword"]], template: function UserEditSecurityComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](0, "div", 0)(1, "page-title");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](3, "page-description");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](4, "Security Settings");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](5, "div", 1)(6, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtemplate"](7, UserEditSecurityComponent_div_7_Template, 8, 0, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtemplate"](8, UserEditSecurityComponent_app_user_edit_password_8_Template, 1, 0, "app-user-edit-password", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](9, "form", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("ngSubmit", function UserEditSecurityComponent_Template_form_ngSubmit_9_listener() { return ctx.onSaveUser(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](10, "div", 6)(11, "label", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](12, "Unlock Account");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](13, "div", 8)(14, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](15, "ejs-checkbox", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](16, "div", 6)(17, "label", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](18, "Security Phone Number *");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](19, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](20, "Enter your phone number to enable two-factor authentication.");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](21, "ejs-maskedtextbox", 11)(22, "app-field-error-display", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](23, "div", 13)(24, "button", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](25, "Save");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]()()()()()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtextInterpolate1"]("Edit ", ctx.user.name, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("ngIf", !ctx.isEditable);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("ngIf", ctx.isEditable);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("formGroup", ctx.form);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](13);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("displayError", ctx.inputValidatorService.isInvalidRequired(ctx.form, "phoneNumber"));
    } }, directives: [_shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_6__.PageTitleComponent, _shared_components_page_description_page_description_component__WEBPACK_IMPORTED_MODULE_7__.PageDescriptionComponent, _angular_common__WEBPACK_IMPORTED_MODULE_13__.NgIf, _shared_user_edit_password_user_edit_password_component__WEBPACK_IMPORTED_MODULE_8__.UserEditPasswordComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_11__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormGroupDirective, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_14__.CheckBoxComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormControlName, _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_15__.MaskedTextBoxComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.MaxLengthValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.RequiredValidator, _shared_components_field_error_display_field_error_display_component__WEBPACK_IMPORTED_MODULE_9__.FieldErrorDisplayComponent, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_14__.ButtonComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2VyLWVkaXQtc2VjdXJpdHkuY29tcG9uZW50LnNjc3MifQ== */"] });


/***/ }),

/***/ 44757:
/*!***********************************************************************************!*\
  !*** ./src/app/admin/user-management/components/user-edit/user-edit.component.ts ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UserEditComponent": () => (/* binding */ UserEditComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../services/user.service */ 34033);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/services/result.handler.service */ 32464);
/* harmony import */ var _shared_services_input_validator_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/input-validator.service */ 68516);
/* harmony import */ var src_app_core_services_nav_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/core/services/nav.service */ 30651);
/* harmony import */ var _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/components/page-title/page-title.component */ 46896);
/* harmony import */ var _shared_components_page_description_page_description_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/components/page-description/page-description.component */ 89424);
/* harmony import */ var _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @syncfusion/ej2-angular-inputs */ 53691);
/* harmony import */ var _shared_components_field_error_display_field_error_display_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/field-error-display/field-error-display.component */ 76530);
/* harmony import */ var _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @syncfusion/ej2-angular-buttons */ 78218);














function UserEditComponent_div_14_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div", 9)(1, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](2, "ejs-textbox", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]()();
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵattribute"]("disabled", true);
} }
function UserEditComponent_div_27_Template(rf, ctx) { if (rf & 1) {
    const _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div", 22)(1, "div", 23)(2, "button", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function UserEditComponent_div_27_Template_button_click_2_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r3); const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"](); return ctx_r2.clearForm(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](3, "Undo");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]()();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](4, "div", 25)(5, "button", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](6, "Save");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]()()();
} }
class UserEditComponent {
    constructor(route, fb, userService, location, resultHandler, inputValidatorService, navService) {
        this.fb = fb;
        this.userService = userService;
        this.location = location;
        this.resultHandler = resultHandler;
        this.inputValidatorService = inputValidatorService;
        this.isEditable = false;
        this.hasAccountId = false;
        this.return = () => this.location.back();
        this.clearForm = () => this.initializeForm();
        const data = route.snapshot.data["user"];
        if (data.isSuccess) {
            this.user = data.value;
            this.isEditable = data.value.userType == 1; // "Administrator";
            this.hasAccountId = data.value.accountId != null && data.value.accountId != '';
            navService.setUserManagementNavMenu(this.user.userTypeName);
        }
        else {
            this.resultHandler.handle(data);
        }
    }
    ngOnInit() {
        this.initializeForm();
    }
    initializeForm() {
        this.form = this.fb.group({
            firstName: [this.user.firstName, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required],
            lastName: [this.user.lastName, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required],
            email: [this.user.email, [_angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.email]],
            accountId: [this.user.accountId]
        });
    }
    onSaveUser() {
        this.form.markAllAsTouched();
        if (!this.form.valid) {
            return;
        }
        let model = this.form.value;
        this.userService.updateUser(this.user.id, model).subscribe((data) => {
            this.resultHandler.handle(data);
        }, (err) => {
            this.resultHandler.handle(err.error);
        });
    }
}
UserEditComponent.ɵfac = function UserEditComponent_Factory(t) { return new (t || UserEditComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_9__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_services_user_service__WEBPACK_IMPORTED_MODULE_0__.UserService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_10__.Location), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_1__.ResultHandlerService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_shared_services_input_validator_service__WEBPACK_IMPORTED_MODULE_2__.InputValidatorService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](src_app_core_services_nav_service__WEBPACK_IMPORTED_MODULE_3__.NavService)); };
UserEditComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineComponent"]({ type: UserEditComponent, selectors: [["app-user-edit"]], decls: 28, vars: 12, consts: [[3, "formGroup", "ngSubmit"], [1, "container-fluid"], [1, "e-card", "mt-4", "p-1", "pb-4"], [1, "e-card-content"], [1, "row"], [1, "col-md-12", "fw-bold"], [1, "pt-1"], [1, "e-badge", "e-badge-success"], ["class", "row pt-4", 4, "ngIf"], [1, "row", "pt-4"], [1, "form-group", "col-6"], ["placeholder", "First Name", "floatLabelType", "Always", "autocomplete", "off", "maxlength", "255", "required", "", "formControlName", "firstName"], ["errorMsg", "* First Name is required", 3, "displayError"], ["placeholder", "Last Name", "floatLabelType", "Always", "autocomplete", "off", "maxlength", "255", "required", "", "formControlName", "lastName"], ["errorMsg", "* Last Name is required", 3, "displayError"], [1, "form-group", "row", "pt-4"], [1, "col-6"], ["placeholder", "Email", "floatLabelType", "Always", "autocomplete", "off", "maxlength", "255", "required", "", "formControlName", "email"], ["errorMsg", "* Email is required", 3, "displayError"], ["errorMsg", "* Invalid email", 3, "displayError"], ["class", "row pt-2 actions-container", 4, "ngIf"], ["placeholder", "Account ID", "floatLabelType", "Always", "autocomplete", "off", "maxlength", "255", "required", "", "formControlName", "accountId"], [1, "row", "pt-2", "actions-container"], [1, "col-md-3", "offset-md-6"], ["type", "button", "ejs-button", "", 1, "e-flat", 3, "click"], [1, "col-md-3"], ["ejs-button", "", 1, "e-success"]], template: function UserEditComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "form", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngSubmit", function UserEditComponent_Template_form_ngSubmit_0_listener() { return ctx.onSaveUser(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](1, "div", 1)(2, "page-title");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](4, "page-description");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](5, "Contact Information");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](6, "div", 2)(7, "div", 3)(8, "div", 4)(9, "label", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](10, "User Type");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](11, "div", 6)(12, "span", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](13);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]()()();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](14, UserEditComponent_div_14_Template, 3, 1, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](15, "div", 9)(16, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](17, "ejs-textbox", 11)(18, "app-field-error-display", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](19, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](20, "ejs-textbox", 13)(21, "app-field-error-display", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](22, "div", 15)(23, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](24, "ejs-textbox", 17)(25, "app-field-error-display", 18)(26, "app-field-error-display", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]()()();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](27, UserEditComponent_div_27_Template, 7, 0, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]()()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("formGroup", ctx.form);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate1"]("Edit ", ctx.user.name, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate"](ctx.user.userTypeName.toUpperCase());
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", ctx.hasAccountId);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵattribute"]("disabled", !ctx.isEditable);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("displayError", ctx.inputValidatorService.isInvalidRequired(ctx.form, "firstName"));
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵattribute"]("disabled", !ctx.isEditable);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("displayError", ctx.inputValidatorService.isInvalidRequired(ctx.form, "lastName"));
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵattribute"]("disabled", !ctx.isEditable);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("displayError", ctx.inputValidatorService.isInvalidRequired(ctx.form, "email"));
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("displayError", ctx.inputValidatorService.isInvalidEmail(ctx.form, "email"));
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", ctx.isEditable);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_8__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_8__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormGroupDirective, _shared_components_page_title_page_title_component__WEBPACK_IMPORTED_MODULE_4__.PageTitleComponent, _shared_components_page_description_page_description_component__WEBPACK_IMPORTED_MODULE_5__.PageDescriptionComponent, _angular_common__WEBPACK_IMPORTED_MODULE_10__.NgIf, _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_11__.TextBoxComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.MaxLengthValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.RequiredValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControlName, _shared_components_field_error_display_field_error_display_component__WEBPACK_IMPORTED_MODULE_6__.FieldErrorDisplayComponent, _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_12__.ButtonComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2VyLWVkaXQuY29tcG9uZW50LnNjc3MifQ== */"] });


/***/ }),

/***/ 18920:
/*!***********************************************************************************!*\
  !*** ./src/app/admin/user-management/components/user-list/user-list.component.ts ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UserListComponent": () => (/* binding */ UserListComponent)
/* harmony export */ });
/* harmony import */ var _shared_components_base_grid_base_grid_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shared/components/base-grid/base-grid.component */ 84766);
/* harmony import */ var src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/shared/constants/application-urls */ 85561);
/* harmony import */ var src_app_shared_utilities_url_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/utilities/url-utils */ 82000);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/services/result.handler.service */ 32464);
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/user.service */ 34033);
/* harmony import */ var _authentication_services_account_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../authentication/services/account.service */ 94398);
/* harmony import */ var _shared_components_container_list_container_list_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/container-list/container-list.component */ 91317);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 27723);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _shared_components_edit_button_edit_button_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/edit-button/edit-button.component */ 81297);
/* harmony import */ var _shared_components_restore_button_restore_button_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/restore-button/restore-button.component */ 24805);
/* harmony import */ var _shared_components_delete_button_delete_button_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/delete-button/delete-button.component */ 36820);














const _c0 = function (a0) { return { data: a0 }; };
function UserListComponent_ng_template_8_edit_button_0_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](0, "edit-button", 11);
} if (rf & 2) {
    const data_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵnextContext"]().$implicit;
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("routerLink", ctx_r4.replaceParams(ctx_r4.contactInfoUrl, data_r3.id))("state", _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵpureFunction1"](2, _c0, data_r3.userType));
} }
function UserListComponent_ng_template_8_restore_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r9 = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](0, "restore-button", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("click", function UserListComponent_ng_template_8_restore_button_1_Template_restore_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵrestoreView"](_r9); const data_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵnextContext"]().$implicit; const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵnextContext"](); return ctx_r7.onRestoreUser(data_r3); });
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
} }
function UserListComponent_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    const _r11 = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtemplate"](0, UserListComponent_ng_template_8_edit_button_0_Template, 1, 4, "edit-button", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtemplate"](1, UserListComponent_ng_template_8_restore_button_1_Template, 1, 0, "restore-button", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](2, "delete-button", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("click", function UserListComponent_ng_template_8_Template_delete_button_click_2_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵrestoreView"](_r11); const data_r3 = restoredCtx.$implicit; const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵnextContext"](); return ctx_r10.onDeleteUser(data_r3); });
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r3 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("ngIf", data_r3.active);
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("ngIf", !data_r3.active);
} }
class UserListComponent extends _shared_components_base_grid_base_grid_component__WEBPACK_IMPORTED_MODULE_0__.BaseGridComponent {
    constructor(activatedRoute, resultHandler, userService, accountService) {
        super(accountService);
        this.activatedRoute = activatedRoute;
        this.resultHandler = resultHandler;
        this.userService = userService;
        this.replaceParams = src_app_shared_utilities_url_utils__WEBPACK_IMPORTED_MODULE_2__.UrlUtils.replaceParams;
        this.newUserUrl = src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_1__.ApplicationUrls.GlobalToolSuite.UserManagement.NewAdministrator.path;
        this.contactInfoUrl = src_app_shared_constants_application_urls__WEBPACK_IMPORTED_MODULE_1__.ApplicationUrls.GlobalToolSuite.UserManagement.ContactInfo.path;
        var users = this.activatedRoute.snapshot.data["users"];
        this.handleUsers(users);
    }
    ngOnInit() {
        this.filterSettings = { type: 'CheckBox' };
        this.searchSettings = { fields: ['name'] };
    }
    handleUsers(users) {
        if (users.isSuccess) {
            this.data = users.value;
            this.setupPagination(this.data);
        }
        else {
            this.resultHandler.handle(users);
        }
    }
    loadUsers() {
        this.userService.getUsers(!this.showArchived).subscribe((data) => {
            this.handleUsers(data);
        }, (err) => this.resultHandler.handle(err.error));
    }
    onArchiveChange(showArchived) {
        this.showArchived = showArchived;
        this.loadUsers();
    }
    onRestoreUser(user) {
        this.userService.validateRestore(user).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.restoreUser(user);
                }
            });
        }, (err) => {
            this.resultHandler.handle(err.error).then((success) => {
                if (success) {
                    this.restoreUser(user);
                }
            });
        });
    }
    restoreUser(user) {
        this.userService.restoreUser(user).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.loadUsers();
                }
            });
        }, (err) => {
            this.resultHandler.handle(err.error);
        });
    }
    onDeleteUser(user) {
        this.userService.validateDelete(user).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.deleteUser(user);
                }
            });
        }, (err) => {
            this.resultHandler.handle(err.error).then((success) => {
                if (success) {
                    this.deleteUser(user);
                }
            });
        });
    }
    deleteUser(user) {
        this.userService.deleteUser(user.id).subscribe((data) => {
            this.resultHandler.handle(data).then((success) => {
                if (success) {
                    this.loadUsers();
                }
            });
        }, (err) => {
            this.resultHandler.handle(err.error);
        });
    }
}
UserListComponent.ɵfac = function UserListComponent_Factory(t) { return new (t || UserListComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_11__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_core_services_result_handler_service__WEBPACK_IMPORTED_MODULE_3__.ResultHandlerService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_services_user_service__WEBPACK_IMPORTED_MODULE_4__.UserService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_authentication_services_account_service__WEBPACK_IMPORTED_MODULE_5__.AccountService)); };
UserListComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineComponent"]({ type: UserListComponent, selectors: [["app-user-list"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵInheritDefinitionFeature"]], decls: 10, vars: 9, consts: [["title", "User Management", "searchPlaceHolder", "Search User Name...", "actionButtonText", "New Administrator", 3, "actionButtonLink", "showActionButton", "search", "archiveChange"], [3, "dataSource", "allowPaging", "allowSorting", "allowFiltering", "filterSettings", "pageSettings", "searchSettings"], ["grid", ""], ["field", "name", "headerText", "Name"], ["field", "userType", "headerText", "Type", "width", "150"], ["field", "mainRole", "headerText", "Role", "clipMode", "EllipsisWithTooltip", "width", "150"], ["headerText", "Actions", "textAlign", "Left", "width", "240"], ["template", ""], [3, "routerLink", "state", 4, "ngIf"], [3, "click", 4, "ngIf"], [3, "click"], [3, "routerLink", "state"]], template: function UserListComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](0, "container-list", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("search", function UserListComponent_Template_container_list_search_0_listener($event) { return ctx.search($event); })("archiveChange", function UserListComponent_Template_container_list_archiveChange_0_listener($event) { return ctx.onArchiveChange($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](1, "ejs-grid", 1, 2)(3, "e-columns");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](4, "e-column", 3)(5, "e-column", 4)(6, "e-column", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](7, "e-column", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtemplate"](8, UserListComponent_ng_template_8_Template, 3, 2, "ng-template", null, 7, _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]()()()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("actionButtonLink", ctx.newUserUrl)("showActionButton", ctx.isSuperAdmin());
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("dataSource", ctx.data)("allowPaging", ctx.allowPaging)("allowSorting", true)("allowFiltering", true)("filterSettings", ctx.filterSettings)("pageSettings", ctx.pageSettings)("searchSettings", ctx.searchSettings);
    } }, directives: [_shared_components_container_list_container_list_component__WEBPACK_IMPORTED_MODULE_6__.ContainerListComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.AggregateColumnDirective, _angular_common__WEBPACK_IMPORTED_MODULE_13__.NgIf, _shared_components_edit_button_edit_button_component__WEBPACK_IMPORTED_MODULE_7__.EditButtonComponent, _angular_router__WEBPACK_IMPORTED_MODULE_11__.RouterLink, _shared_components_restore_button_restore_button_component__WEBPACK_IMPORTED_MODULE_8__.RestoreButtonComponent, _shared_components_delete_button_delete_button_component__WEBPACK_IMPORTED_MODULE_9__.DeleteButtonComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2VyLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */"] });


/***/ }),

/***/ 52358:
/*!***********************************************************************!*\
  !*** ./src/app/admin/user-management/resolvers/user-edit.resolver.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UserEditResolver": () => (/* binding */ UserEditResolver)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _services_user_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../services/user.api.service */ 33031);


class UserEditResolver {
    constructor(userService) {
        this.userService = userService;
    }
    resolve(route, state) {
        const id = Number(route.paramMap.get('id'));
        return this.userService.getUser(id);
    }
}
UserEditResolver.ɵfac = function UserEditResolver_Factory(t) { return new (t || UserEditResolver)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_services_user_api_service__WEBPACK_IMPORTED_MODULE_0__.UserApiService)); };
UserEditResolver.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: UserEditResolver, factory: UserEditResolver.ɵfac });


/***/ }),

/***/ 46529:
/*!***********************************************************************!*\
  !*** ./src/app/admin/user-management/resolvers/user-list.resolver.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UserListResolver": () => (/* binding */ UserListResolver)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _services_user_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../services/user.api.service */ 33031);


class UserListResolver {
    constructor(userService) {
        this.userService = userService;
    }
    resolve(route, state) {
        return this.userService.getUsers(true);
    }
}
UserListResolver.ɵfac = function UserListResolver_Factory(t) { return new (t || UserListResolver)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_services_user_api_service__WEBPACK_IMPORTED_MODULE_0__.UserApiService)); };
UserListResolver.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: UserListResolver, factory: UserListResolver.ɵfac });


/***/ }),

/***/ 50491:
/*!*************************************************************************!*\
  !*** ./src/app/admin/user-management/services/user-type.api.service.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UserTypeApiService": () => (/* binding */ UserTypeApiService)
/* harmony export */ });
/* harmony import */ var _core_api_base_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/api/base.api.service */ 14089);
/* harmony import */ var _constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants/admin-api.constants */ 86937);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ 28784);




class UserTypeApiService extends _core_api_base_api_service__WEBPACK_IMPORTED_MODULE_0__.BaseAPIService {
    constructor(baseApiUrl_Web, http) {
        super(baseApiUrl_Web, http);
    }
    getUserTypes() {
        return this.http.get(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.GetUserTypes()));
    }
}
UserTypeApiService.ɵfac = function UserTypeApiService_Factory(t) { return new (t || UserTypeApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"]("BASE_API_URL_WEB"), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__.HttpClient)); };
UserTypeApiService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: UserTypeApiService, factory: UserTypeApiService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 52257:
/*!*********************************************************************!*\
  !*** ./src/app/admin/user-management/services/user-type.service.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UserTypeService": () => (/* binding */ UserTypeService)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _user_type_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./user-type.api.service */ 50491);


class UserTypeService {
    constructor(userTypeApiService) {
        this.userTypeApiService = userTypeApiService;
    }
    getUserTypes() {
        return this.userTypeApiService.getUserTypes();
    }
}
UserTypeService.ɵfac = function UserTypeService_Factory(t) { return new (t || UserTypeService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_user_type_api_service__WEBPACK_IMPORTED_MODULE_0__.UserTypeApiService)); };
UserTypeService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: UserTypeService, factory: UserTypeService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 33031:
/*!********************************************************************!*\
  !*** ./src/app/admin/user-management/services/user.api.service.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UserApiService": () => (/* binding */ UserApiService)
/* harmony export */ });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _core_api_base_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/api/base.api.service */ 14089);
/* harmony import */ var _constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants/admin-api.constants */ 86937);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);





class UserApiService extends _core_api_base_api_service__WEBPACK_IMPORTED_MODULE_0__.BaseAPIService {
    constructor(baseApiUrl_Web, http) {
        super(baseApiUrl_Web, http);
    }
    changePassword(model) {
        return this.http.post(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.ChangePassword()), model);
    }
    getUsers(active, hasRoles, toolId) {
        let params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('active', active)
            .set('hasRoles', hasRoles !== null && hasRoles !== void 0 ? hasRoles : '')
            .set('toolId', toolId !== null && toolId !== void 0 ? toolId : '');
        return this.http.get(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.GetUsers()), { params });
    }
    getUser(id) {
        return this.http.get(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.GetUserById(id)));
    }
    createUser(user) {
        return this.http.post(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.CreateUser()), user);
    }
    updateUser(id, user) {
        return this.http.put(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.UpdateUser(id)), user);
    }
    updateUserSecurity(id, user) {
        return this.http.patch(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.UpdateUserSecurity(id)), user);
    }
    validateDelete(user) {
        return this.http.post(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.ValidateDeleteUser()), user);
    }
    deleteUser(id) {
        return this.http.delete(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.DeleteUser(id)));
    }
    validateRestore(user) {
        return this.http.post(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.ValidateRestoreUser()), user);
    }
    restoreCarrier(id) {
        return this.http.post(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.RestoreUser(id)), null);
    }
    validateUpdateRoles(userId, toolId, roles) {
        return this.http.post(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.ValidateUpdateUserRolesByTool(userId, toolId)), roles);
    }
    updateRoles(userId, toolId, roles) {
        return this.http.patch(this.constructRequestUrl(_constants_admin_api_constants__WEBPACK_IMPORTED_MODULE_1__.AdminApiEndpoints.UpdateUserRolesByTool(userId, toolId)), roles);
    }
}
UserApiService.ɵfac = function UserApiService_Factory(t) { return new (t || UserApiService)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"]("BASE_API_URL_WEB"), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpClient)); };
UserApiService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjectable"]({ token: UserApiService, factory: UserApiService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 34033:
/*!****************************************************************!*\
  !*** ./src/app/admin/user-management/services/user.service.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UserService": () => (/* binding */ UserService)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _user_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./user.api.service */ 33031);


class UserService {
    constructor(userApiService) {
        this.userApiService = userApiService;
    }
    getUsers(active, hasRoles, toolId) {
        return this.userApiService.getUsers(active, hasRoles, toolId);
    }
    getUser(id) {
        return this.userApiService.getUser(id);
    }
    createUser(user) {
        return this.userApiService.createUser(user);
    }
    updateUser(id, user) {
        return this.userApiService.updateUser(id, user);
    }
    updateUserSecurity(id, user) {
        return this.userApiService.updateUserSecurity(id, user);
    }
    validateDelete(user) {
        return this.userApiService.validateDelete(user);
    }
    deleteUser(id) {
        return this.userApiService.deleteUser(id);
    }
    validateRestore(user) {
        return this.userApiService.validateRestore(user);
    }
    changePassword(model) {
        return this.userApiService.changePassword(model);
    }
    restoreUser(user) {
        return this.userApiService.restoreCarrier(user.id);
    }
    validateUpdateRoles(userId, toolId, roles) {
        return this.userApiService.validateUpdateRoles(userId, toolId, roles);
    }
    updateRoles(userId, toolId, roles) {
        return this.userApiService.updateRoles(userId, toolId, roles);
    }
}
UserService.ɵfac = function UserService_Factory(t) { return new (t || UserService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_user_api_service__WEBPACK_IMPORTED_MODULE_0__.UserApiService)); };
UserService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: UserService, factory: UserService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 84766:
/*!********************************************************************!*\
  !*** ./src/app/shared/components/base-grid/base-grid.component.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BaseGridComponent": () => (/* binding */ BaseGridComponent)
/* harmony export */ });
/* harmony import */ var _restricted_restricted_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../restricted/restricted.component */ 64780);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _authentication_services_account_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../authentication/services/account.service */ 94398);



const _c0 = ["grid"];
const _c1 = ["searchTextbox"];
class BaseGridComponent extends _restricted_restricted_component__WEBPACK_IMPORTED_MODULE_0__.RestrictedComponent {
    constructor(accountService) {
        super(accountService);
        this.showArchived = false;
        this.allowPaging = false;
    }
    onCreate(args) {
        this.searchTextbox.addIcon("append", "e-icons e-search");
    }
    search(event) {
        if (event.value == null || event.value === '') {
            this.grid.clearFiltering();
            this.grid.search('');
        }
        else {
            this.grid.search(event.value);
        }
    }
    ;
    setupPagination(data) {
        this.pageSizes = [10, 20, 50];
        this.pageSettings = { pageSize: this.pageSizes[0], pageSizes: this.pageSizes };
        if (data != null && data.length > this.pageSizes[this.pageSizes.length - 1]) {
            this.pageSizes.push(data.length);
        }
        this.allowPaging = true;
    }
}
BaseGridComponent.ɵfac = function BaseGridComponent_Factory(t) { return new (t || BaseGridComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_authentication_services_account_service__WEBPACK_IMPORTED_MODULE_1__.AccountService)); };
BaseGridComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: BaseGridComponent, selectors: [["ng-component"]], viewQuery: function BaseGridComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵviewQuery"](_c1, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵloadQuery"]()) && (ctx.grid = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵloadQuery"]()) && (ctx.searchTextbox = _t.first);
    } }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵInheritDefinitionFeature"]], decls: 0, vars: 0, template: function BaseGridComponent_Template(rf, ctx) { }, encapsulation: 2 });


/***/ }),

/***/ 43350:
/*!**********************************************************************************!*\
  !*** ./src/app/shared/components/information-text/information-text.component.ts ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InformationTextComponent": () => (/* binding */ InformationTextComponent)
/* harmony export */ });
/* harmony import */ var _fortawesome_pro_light_svg_icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @fortawesome/pro-light-svg-icons */ 67538);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _fortawesome_angular_fontawesome__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @fortawesome/angular-fontawesome */ 19397);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ 52816);





function InformationTextComponent_a_4_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "a", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("routerLink", ctx_r0.redirect)("state", ctx_r0.state);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r0.title);
} }
class InformationTextComponent {
    constructor() {
        this.text = "";
        this.redirect = "";
        this.title = "";
        this.faCircleQuestion = _fortawesome_pro_light_svg_icons__WEBPACK_IMPORTED_MODULE_1__.faCircleQuestion;
    }
    ngOnInit() {
    }
}
InformationTextComponent.ɵfac = function InformationTextComponent_Factory(t) { return new (t || InformationTextComponent)(); };
InformationTextComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: InformationTextComponent, selectors: [["app-information-text"]], inputs: { state: "state", text: "text", redirect: "redirect", title: "title" }, decls: 5, vars: 3, consts: [[1, "information"], [1, "m-3", "center", 3, "icon"], [1, "center", "mr-1"], [3, "routerLink", "state", 4, "ngIf"], [3, "routerLink", "state"]], template: function InformationTextComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "fa-icon", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "label", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, InformationTextComponent_a_4_Template, 2, 3, "a", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("icon", ctx.faCircleQuestion);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx.text);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.redirect != "");
    } }, directives: [_fortawesome_angular_fontawesome__WEBPACK_IMPORTED_MODULE_2__.FaIconComponent, _angular_common__WEBPACK_IMPORTED_MODULE_3__.NgIf, _angular_router__WEBPACK_IMPORTED_MODULE_4__.RouterLinkWithHref], styles: [".information[_ngcontent-%COMP%] {\n  background-color: #f5f5f5;\n  border-radius: 7px;\n  height: 55px;\n  display: flex;\n  align-items: center;\n}\n\nlabel[_ngcontent-%COMP%] {\n  font-size: 16px;\n}\n\n.center[_ngcontent-%COMP%] {\n  align-self: center;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZm9ybWF0aW9uLXRleHQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtBQUNGOztBQUNBO0VBQ0UsZUFBQTtBQUVGOztBQUFBO0VBQ0Usa0JBQUE7QUFHRiIsImZpbGUiOiJpbmZvcm1hdGlvbi10ZXh0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmluZm9ybWF0aW9uIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1O1xyXG4gIGJvcmRlci1yYWRpdXM6IDdweDtcclxuICBoZWlnaHQ6IDU1cHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbmxhYmVsIHtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbn1cclxuLmNlbnRlciB7XHJcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG59XHJcbiJdfQ== */"] });


/***/ }),

/***/ 16706:
/*!************************************************!*\
  !*** ./src/app/shared/constants/file-sizes.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MaxFileSizes": () => (/* binding */ MaxFileSizes)
/* harmony export */ });
const MaxFileSizes = {
    IconLogo: 15000000,
    FullSizeLogo: 25000000
};


/***/ }),

/***/ 81456:
/*!**************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-notifications/dist/es6/ej2-notifications.es5.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ButtonModelProps": () => (/* binding */ ButtonModelProps),
/* harmony export */   "Message": () => (/* binding */ Message),
/* harmony export */   "Severity": () => (/* binding */ Severity),
/* harmony export */   "Skeleton": () => (/* binding */ Skeleton),
/* harmony export */   "Toast": () => (/* binding */ Toast),
/* harmony export */   "ToastAnimationSettings": () => (/* binding */ ToastAnimationSettings),
/* harmony export */   "ToastAnimations": () => (/* binding */ ToastAnimations),
/* harmony export */   "ToastPosition": () => (/* binding */ ToastPosition),
/* harmony export */   "ToastUtility": () => (/* binding */ ToastUtility),
/* harmony export */   "Variant": () => (/* binding */ Variant)
/* harmony export */ });
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ 32610);
/* harmony import */ var _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-buttons */ 61334);
/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-popups */ 36627);




var __extends = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = ( false) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ROOT = 'e-toast';
var CONTAINER = 'e-toast-container';
var TITLE = 'e-toast-title';
var WIDTHFULL = 'e-toast-full-width';
var CONTENT = 'e-toast-content';
var MESSAGE = 'e-toast-message';
var ICON = 'e-toast-icon';
var PROGRESS = 'e-toast-progress';
var ACTIOBUTTONS = 'e-toast-actions';
var CLOSEBTN = 'e-toast-close-icon';
var RTL = 'e-rtl';
var TOAST_BLAZOR_HIDDEN = 'e-blazor-toast-hidden';
/**
 * An object that is used to configure the Toast X Y positions.
 */
var ToastPosition = /** @__PURE__ @class */ (function (_super) {
    __extends(ToastPosition, _super);
    function ToastPosition() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Left')
    ], ToastPosition.prototype, "X", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Top')
    ], ToastPosition.prototype, "Y", void 0);
    return ToastPosition;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));
/**
 * An object that is used to configure the action button model properties and event.
 */
var ButtonModelProps = /** @__PURE__ @class */ (function (_super) {
    __extends(ButtonModelProps, _super);
    function ButtonModelProps() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)
    ], ButtonModelProps.prototype, "model", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)
    ], ButtonModelProps.prototype, "click", void 0);
    return ButtonModelProps;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));
/**
 * An object that is used to configure the animation object of Toast.
 */
var ToastAnimations = /** @__PURE__ @class */ (function (_super) {
    __extends(ToastAnimations, _super);
    function ToastAnimations() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('FadeIn')
    ], ToastAnimations.prototype, "effect", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(600)
    ], ToastAnimations.prototype, "duration", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('ease')
    ], ToastAnimations.prototype, "easing", void 0);
    return ToastAnimations;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));
/**
 * An object that is used to configure the show/hide animation settings of Toast.
 */
var ToastAnimationSettings = /** @__PURE__ @class */ (function (_super) {
    __extends(ToastAnimationSettings, _super);
    function ToastAnimationSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ effect: 'FadeIn', duration: 600, easing: 'ease' }, ToastAnimations)
    ], ToastAnimationSettings.prototype, "show", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ effect: 'FadeOut', duration: 600, easing: 'ease' }, ToastAnimations)
    ], ToastAnimationSettings.prototype, "hide", void 0);
    return ToastAnimationSettings;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));
/**
 * The Toast is a notification pop-up that showing on desired position which can provide an information to the user.
 * ```html
 * <div id="toast"/>
 * <script>
 *   var toastObj = new Toast();
 *   toastObj.appendTo("#toast");
 * </script>
 * ```
 */
var Toast = /** @__PURE__ @class */ (function (_super) {
    __extends(Toast, _super);
    /**
     * Initializes a new instance of the Toast class.
     *
     * @param {ToastModel} options  - Specifies Toast model properties as options.
     * @param {HTMLElement} element  - Specifies the element that is rendered as a Toast.
     */
    function Toast(options, element) {
        var _this = _super.call(this, options, element) || this;
        _this.toastCollection = [];
        _this.needsID = true;
        return _this;
    }
    /**
     * Gets the Component module name.
     *
     * @returns {string} - returns the string
     * @private
     */
    Toast.prototype.getModuleName = function () {
        return 'toast';
    };
    /**
     * Gets the persisted state properties of the Component.
     *
     * @returns {string} - returns the string
     */
    Toast.prototype.getPersistData = function () {
        return this.addOnPersist([]);
    };
    /**
     * Removes the component from the DOM and detaches all its related event handlers, attributes and classes.
     *
     * @returns {void}
     */
    Toast.prototype.destroy = function () {
        this.hide('All');
        this.element.classList.remove(CONTAINER);
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.element, { 'position': '', 'z-index': '' });
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.refElement) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.refElement.parentElement)) {
            this.refElement.parentElement.insertBefore(this.element, this.refElement);
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.refElement);
            this.refElement = undefined;
        }
        if (!this.isBlazorServer()) {
            _super.prototype.destroy.call(this);
        }
    };
    /**
     * Initialize the event handler
     *
     * @returns {void}
     * @private
     */
    Toast.prototype.preRender = function () {
        //There is no event handler
        this.isDevice = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice;
        if (this.width === '300px') {
            this.width = (this.isDevice && screen.width < 768) ? '100%' : '300px';
        }
        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.target)) {
            this.target = document.body;
        }
        if (this.enableRtl && !this.isBlazorServer()) {
            this.element.classList.add(RTL);
        }
    };
    /**
     * Initialize the component rendering
     *
     * @returns {void}
     * @private
     */
    Toast.prototype.render = function () {
        this.progressObj = [];
        this.intervalId = [];
        this.contentTemplate = null;
        this.toastTemplate = null;
        this.renderComplete();
        this.initRenderClass = this.element.className;
    };
    /**
     * To show Toast element on a document with the relative position.
     *
     * @param  {ToastModel} toastObj - To show Toast element on screen.
     * @returns {void}
     * @deprecated
     */
    Toast.prototype.show = function (toastObj) {
        var collectionObj;
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(toastObj)) {
            this.templateChanges(toastObj);
            collectionObj = JSON.parse(JSON.stringify(toastObj));
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(this, this, toastObj);
        }
        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.toastContainer)) {
            this.toastContainer = this.getContainer();
            var target = typeof (this.target) === 'string' ? document.querySelector(this.target) :
                (typeof (this.target) === 'object' ? this.target : document.body);
            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(target)) {
                return;
            }
            if (target.tagName === 'BODY') {
                this.toastContainer.style.position = 'fixed';
            }
            else {
                this.toastContainer.style.position = 'absolute';
                target.style.position = 'relative';
            }
            this.setPositioning(this.position);
            target.appendChild(this.toastContainer);
        }
        if (this.isBlazorServer() && this.element.classList.contains('e-control')) {
            this.isToastModel(toastObj);
            return;
        }
        this.toastEle = this.createElement('div', { className: ROOT, id: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getUniqueID)('toast') });
        this.setWidthHeight();
        this.setCSSClass(this.cssClass);
        // eslint-disable-next-line
        ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.template) || this.template === '') ? this.personalizeToast() : this.templateRendering();
        this.setProgress();
        this.setCloseButton();
        this.setAria();
        this.appendToTarget(toastObj);
        if (this.isDevice && screen.width < 768) {
            new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Touch(this.toastEle, { swipe: this.swipeHandler.bind(this) });
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(collectionObj)) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(collectionObj, { element: [this.toastEle] }, true);
            this.toastCollection.push(collectionObj);
        }
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        if (this.isReact) {
            this.renderReactTemplates();
        }
    };
    /**
      * @param {string} id - specifies the id
      * @param {ToastModel} toastObj - specifies the model
      * @returns {void}
      * @hidden
      * @deprecated
      * This method applicable for blazor alone.
     */
    Toast.prototype.showToast = function (id, toastObj) {
        this.toastEle = this.element.querySelector('#' + id);
        this.show(toastObj);
    };
    Toast.prototype.isToastModel = function (toastObj) {
        this.toastContainer = this.element;
        this.setPositioning(this.position);
        // eslint-disable-next-line
        var proxy = this;
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(proxy.element.lastElementChild)) {
            this.setProgress();
        }
        this.setAria();
        this.appendToTarget(toastObj);
    };
    Toast.prototype.swipeHandler = function (e) {
        var toastEle = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.originalEvent.target, '.' + ROOT + ':not(.' + CONTAINER + ')');
        var hideAnimation = this.animation.hide.effect;
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(toastEle)) {
            if (e.swipeDirection === 'Right') {
                this.animation.hide.effect = 'SlideRightOut';
                this.hideToast('swipe', toastEle);
            }
            else if (e.swipeDirection === 'Left') {
                this.animation.hide.effect = 'SlideLeftOut';
                this.hideToast('swipe', toastEle);
            }
            this.animation.hide.effect = hideAnimation;
        }
    };
    Toast.prototype.templateChanges = function (toastObj) {
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(toastObj.content) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.contentTemplate) && this.content !== toastObj.content) {
            this.clearContentTemplate();
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(toastObj.template) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.toastTemplate) && this.template !== toastObj.template) {
            this.clearToastTemplate();
        }
    };
    Toast.prototype.setCSSClass = function (cssClass) {
        if (cssClass) {
            var split = cssClass.indexOf(',') !== -1 ? ',' : ' ';
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.toastEle, cssClass.split(split), []);
            if (this.toastContainer) {
                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.toastContainer, cssClass.split(split), []);
            }
        }
    };
    Toast.prototype.setWidthHeight = function () {
        if (this.width === '300px') {
            this.toastEle.style.width = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.width);
        }
        else if (this.width === '100%') {
            this.toastContainer.classList.add(WIDTHFULL);
        }
        else {
            this.toastEle.style.width = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.width);
            this.toastContainer.classList.remove(WIDTHFULL);
        }
        this.toastEle.style.height = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.height);
    };
    Toast.prototype.templateRendering = function () {
        this.fetchEle(this.toastEle, this.template, 'template');
    };
    /**
     * @param {string} value - specifies the string value.
     * @returns {string} - returns the string
     * @hidden
     */
    Toast.prototype.sanitizeHelper = function (value) {
        if (this.enableHtmlSanitizer) {
            var item = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlHelper.beforeSanitize();
            var beforeEvent = {
                cancel: false,
                helper: null
            };
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(item, item, beforeEvent);
            this.trigger('beforeSanitizeHtml', item);
            if (item.cancel && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(item.helper)) {
                value = item.helper(value);
            }
            else if (!item.cancel) {
                value = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlHelper.serializeValue(item, value);
            }
        }
        return value;
    };
    /**
     * To Hide Toast element on a document.
     * To Hide all toast element when passing 'All'.
     *
     * @param  {HTMLElement} element - To Hide Toast element on screen.
     * @returns {void}
     */
    Toast.prototype.hide = function (element) {
        this.hideToast('', element);
    };
    Toast.prototype.hideToast = function (interactionType, element) {
        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.toastContainer) || this.toastContainer.childElementCount === 0) {
            return;
        }
        if (typeof element === 'string' && element === 'All') {
            for (var i = 0; i < this.toastContainer.childElementCount; i++) {
                this.destroyToast(this.toastContainer.children[i], interactionType);
            }
            return;
        }
        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element)) {
            element = (this.newestOnTop ? this.toastContainer.lastElementChild : this.toastContainer.firstElementChild);
        }
        this.destroyToast(element, interactionType);
    };
    Toast.prototype.fetchEle = function (ele, value, prob) {
        value = typeof (value) === 'string' ? this.sanitizeHelper(value) : value;
        // eslint-disable-next-line
        var templateFn;
        var tempVar;
        var tmpArray;
        var templateProps;
        if (ele.classList.contains(TITLE)) {
            templateProps = this.element.id + 'title';
        }
        else if (ele.classList.contains(CONTENT)) {
            templateProps = this.element.id + 'content';
        }
        else {
            templateProps = this.element.id + 'template';
        }
        // eslint-disable-next-line
        prob === 'content' ? tempVar = this.contentTemplate : tempVar = this.toastTemplate;
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tempVar)) {
            ele.appendChild(tempVar.cloneNode(true));
            return ele;
        }
        try {
            if (document.querySelectorAll(value).length > 0) {
                var elem = null;
                if (prob !== 'title') {
                    elem = document.querySelector(value);
                    ele.appendChild(elem);
                    elem.style.display = '';
                }
                var clo = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(elem) ? tempVar : elem.cloneNode(true);
                // eslint-disable-next-line
                prob === 'content' ? this.contentTemplate = clo : this.toastTemplate = clo;
            }
            else {
                templateFn = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(value);
            }
        }
        catch (e) {
            templateFn = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(value);
            // eslint-disable-next-line
            
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(templateFn)) {
            if (!this.isBlazorServer()) {
                tmpArray = templateFn({}, this, prob, null, true);
            }
            else {
                var isString = true;
                tmpArray = templateFn({}, this, prob, templateProps, isString);
            }
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tmpArray) && tmpArray.length > 0 && !((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tmpArray[0].tagName) && tmpArray.length === 1)) {
            [].slice.call(tmpArray).forEach(function (el) {
                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(el.tagName)) {
                    el.style.display = '';
                }
                ele.appendChild(el);
            });
        }
        else if (ele.childElementCount === 0) {
            ele.innerHTML = value;
        }
        return ele;
    };
    Toast.prototype.clearProgress = function (intervalId) {
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.intervalId[intervalId])) {
            clearInterval(this.intervalId[intervalId]);
            delete this.intervalId[intervalId];
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.progressObj[intervalId])) {
            clearInterval(this.progressObj[intervalId].intervalId);
            delete this.progressObj[intervalId];
        }
    };
    Toast.prototype.removeToastContainer = function (isClosed) {
        if (isClosed && this.toastContainer.classList.contains('e-toast-util')) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.toastContainer);
        }
    };
    Toast.prototype.clearContainerPos = function (isClosed) {
        var _this = this;
        if (this.isBlazorServer()) {
            this.toastContainer = null;
            return;
        }
        if (this.customPosition) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.toastContainer, { 'left': '', 'top': '' });
            this.removeToastContainer(isClosed);
            this.toastContainer = null;
            this.customPosition = false;
        }
        else {
            [ROOT + '-top-left',
                ROOT + '-top-right',
                ROOT + '-bottom-left',
                ROOT + '-bottom-right',
                ROOT + '-bottom-center',
                ROOT + '-top-center',
                ROOT + '-full-width'].forEach(function (pos) {
                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.toastContainer) && _this.toastContainer.classList.contains(pos)) {
                    _this.toastContainer.classList.remove(pos);
                }
            });
            this.removeToastContainer(isClosed);
            this.toastContainer = null;
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.contentTemplate)) {
            this.clearContentTemplate();
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.toastTemplate)) {
            this.clearToastTemplate();
        }
    };
    Toast.prototype.clearContentTemplate = function () {
        this.contentTemplate.style.display = 'none';
        document.body.appendChild(this.contentTemplate);
        this.contentTemplate = null;
    };
    Toast.prototype.clearToastTemplate = function () {
        this.toastTemplate.style.display = 'none';
        document.body.appendChild(this.toastTemplate);
        this.toastTemplate = null;
    };
    Toast.prototype.isBlazorServer = function () {
        return ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)() && this.isServerRendered);
    };
    Toast.prototype.destroyToast = function (toastEle, interactionType) {
        var _this = this;
        var toastObj;
        for (var i = 0; i < this.toastCollection.length; i++) {
            if (this.toastCollection[i].element[0] === toastEle) {
                toastObj = this.toastCollection[i];
                this.toastCollection.splice(i, 1);
            }
        }
        var toastBeforeClose = {
            options: this,
            cancel: false,
            type: interactionType,
            element: toastEle,
            toastContainer: this.toastContainer
        };
        var hideAnimate = this.animation.hide;
        var animate = {
            duration: hideAnimate.duration, name: hideAnimate.effect, timingFunction: hideAnimate.easing
        };
        var intervalId = parseInt(toastEle.id.split('toast_')[1], 10);
        var toastClose = this.isBlazorServer() ? {
            options: toastObj,
            toastContainer: this.toastContainer
        } : {
            options: toastObj,
            toastContainer: this.toastContainer,
            toastObj: this,
        };
        this.trigger('beforeClose', toastBeforeClose, function (toastBeforeCloseArgs) {
            if (!toastBeforeCloseArgs.cancel) {
                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.progressObj[intervalId]) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(toastEle.querySelector('.' + PROGRESS))) {
                    _this.progressObj[intervalId].progressEle.style.width = '0%';
                }
                animate.end = function () {
                    _this.clearProgress(intervalId);
                    if (!_this.isBlazorServer() || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(toastObj)) {
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(toastEle);
                    }
                    _this.trigger('close', toastClose);
                    if (_this.toastContainer.childElementCount === 0) {
                        _this.clearContainerPos(true);
                    }
                    hideAnimate = null;
                    animate = null;
                };
                new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Animation(animate).animate(toastEle);
            }
        });
    };
    Toast.prototype.personalizeToast = function () {
        this.setIcon();
        this.setTitle();
        this.setContent();
        this.actionButtons();
    };
    Toast.prototype.setAria = function () {
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.toastEle, { 'role': 'alert' });
    };
    Toast.prototype.setPositioning = function (pos) {
        if (this.isBlazorServer()) {
            return;
        }
        if (!isNaN(parseFloat(pos.X)) || !isNaN(parseFloat(pos.Y))) {
            this.customPosition = true;
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.toastContainer, { 'left': (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(pos.X), 'top': (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(pos.Y) });
        }
        else {
            this.toastContainer.classList.add(ROOT + '-' + pos.Y.toString().toLowerCase() + '-' + pos.X.toString().toLowerCase());
        }
    };
    Toast.prototype.setCloseButton = function () {
        if (!this.showCloseButton) {
            return;
        }
        // eslint-disable-next-line
        var localeText = { close: 'Close' };
        this.l10n = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('toast', localeText, this.locale);
        this.l10n.setLocale(this.locale);
        var closeIconTitle = this.l10n.getConstant('close');
        var closeBtn = this.createElement('div', { className: CLOSEBTN + ' e-icons ', attrs: { tabindex: '0', 'aria-label': closeIconTitle, 'role': 'button' } });
        this.toastEle.classList.add('e-toast-header-close-icon');
        this.toastEle.appendChild(closeBtn);
    };
    Toast.prototype.setProgress = function () {
        if (this.timeOut > 0) {
            var id = parseInt(this.toastEle.id.split('toast_')[1], 10);
            this.intervalId[id] = window.setTimeout(this.destroyToast.bind(this, this.toastEle), this.timeOut);
            this.progressObj[id] = { hideEta: null, intervalId: null, maxHideTime: null,
                element: null, timeOutId: null, progressEle: null };
            this.progressObj[id].maxHideTime = parseFloat(this.timeOut + '');
            this.progressObj[id].hideEta = new Date().getTime() + this.progressObj[id].maxHideTime;
            this.progressObj[id].element = this.toastEle;
            if (this.extendedTimeout > 0) {
                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.toastEle, 'mouseover', this.toastHoverAction.bind(this, id));
                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.toastEle, 'mouseleave', this.delayedToastProgress.bind(this, id));
                this.progressObj[id].timeOutId = this.intervalId[id];
            }
            if (this.showProgressBar) {
                this.progressBarEle = this.createElement('div', { className: PROGRESS });
                this.toastEle.insertBefore(this.progressBarEle, this.toastEle.children[0]);
                this.progressObj[id].intervalId = setInterval(this.updateProgressBar.bind(this, this.progressObj[id]), 10);
                this.progressObj[id].progressEle = this.progressBarEle;
            }
        }
    };
    Toast.prototype.toastHoverAction = function (id) {
        clearTimeout(this.progressObj[id].timeOutId);
        clearInterval(this.progressObj[id].intervalId);
        this.progressObj[id].hideEta = 0;
        var toastEle = this.progressObj[id].element;
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(toastEle.querySelector('.' + PROGRESS))) {
            this.progressObj[id].progressEle.style.width = '0%';
        }
    };
    Toast.prototype.delayedToastProgress = function (id) {
        var progress = this.progressObj[id];
        var toastEle = progress.element;
        progress.timeOutId = window.setTimeout(this.destroyToast.bind(this, toastEle), this.extendedTimeout);
        progress.maxHideTime = parseFloat(this.extendedTimeout + '');
        progress.hideEta = new Date().getTime() + progress.maxHideTime;
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(toastEle.querySelector('.' + PROGRESS))) {
            progress.intervalId = setInterval(this.updateProgressBar.bind(this, progress), 10);
        }
    };
    Toast.prototype.updateProgressBar = function (progressObj) {
        var percentage = ((progressObj.hideEta - (new Date().getTime())) / progressObj.maxHideTime) * 100;
        percentage = this.progressDirection === 'Ltr' ? 100 - percentage : percentage;
        progressObj.progressEle.style.width = percentage + '%';
    };
    Toast.prototype.setIcon = function () {
        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.icon) || this.icon.length === 0) {
            return;
        }
        var iconEle = this.createElement('div', { className: ICON + ' e-icons ' + this.icon });
        this.toastEle.classList.add('e-toast-header-icon');
        this.toastEle.appendChild(iconEle);
    };
    Toast.prototype.setTitle = function () {
        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.title)) {
            return;
        }
        var titleEle = this.createElement('div', { className: TITLE });
        titleEle = this.fetchEle(titleEle, this.title, 'title');
        var msgContainer = this.createElement('div', { className: MESSAGE });
        msgContainer.appendChild(titleEle);
        this.toastEle.appendChild(msgContainer);
    };
    Toast.prototype.setContent = function () {
        var contentEle = this.createElement('div', { className: CONTENT });
        var ele = this.element;
        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.content) || this.content === '') {
            var isContent = this.element.innerHTML.replace(/\s/g, '') !== '';
            if ((ele.children.length > 0 || isContent) && !(ele.firstElementChild && ele.firstElementChild.classList.contains(ROOT))) {
                this.innerEle = document.createDocumentFragment();
                var tempEle_1 = this.createElement('div');
                while (ele.childNodes.length !== 0) {
                    this.innerEle.appendChild(this.element.childNodes[0]);
                }
                contentEle.appendChild(this.innerEle);
                [].slice.call(contentEle.children).forEach(function (ele) {
                    tempEle_1.appendChild(ele.cloneNode(true));
                });
                this.content = tempEle_1;
                this.appendMessageContainer(contentEle);
            }
        }
        else {
            if (typeof (this.content) === 'object' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.content.tagName)) {
                contentEle.appendChild(this.content);
                this.content = this.content.cloneNode(true);
                this.appendMessageContainer(contentEle);
            }
            else {
                contentEle = this.fetchEle(contentEle, this.content, 'content');
                this.appendMessageContainer(contentEle);
            }
        }
    };
    Toast.prototype.appendMessageContainer = function (element) {
        if (this.toastEle.querySelectorAll('.' + MESSAGE).length > 0) {
            this.toastEle.querySelector('.' + MESSAGE).appendChild(element);
        }
        else {
            var msgContainer = this.createElement('div', { className: MESSAGE });
            msgContainer.appendChild(element);
            this.toastEle.appendChild(msgContainer);
        }
    };
    Toast.prototype.actionButtons = function () {
        var _this = this;
        var actionBtnContainer = this.createElement('div', { className: ACTIOBUTTONS });
        [].slice.call(this.buttons).forEach(function (actionBtn) {
            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(actionBtn.model)) {
                return;
            }
            var btnDom = _this.createElement('button');
            btnDom.setAttribute('type', 'button');
            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(actionBtn.model.cssClass) || actionBtn.model.cssClass.length === 0) {
                actionBtn.model.cssClass = 'e-primary' + ' ' + _this.cssClass;
            }
            btnDom.classList.add('e-small');
            new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_1__.Button(actionBtn.model, btnDom);
            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(actionBtn.click) && typeof (actionBtn.click) === 'function') {
                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(btnDom, 'click', actionBtn.click);
            }
            actionBtnContainer.appendChild(btnDom);
        });
        if (actionBtnContainer.childElementCount > 0) {
            this.appendMessageContainer(actionBtnContainer);
        }
    };
    Toast.prototype.appendToTarget = function (toastObj) {
        var _this = this;
        var toastBeforeOpen = this.isBlazorServer() ? {
            options: toastObj,
            element: this.toastEle,
            cancel: false
        } : {
            options: toastObj,
            toastObj: this,
            element: this.toastEle,
            cancel: false
        };
        this.trigger('beforeOpen', toastBeforeOpen, function (toastBeforeOpenArgs) {
            if (!toastBeforeOpenArgs.cancel) {
                if (!_this.isBlazorServer()) {
                    _this.toastEle.style.display = 'none';
                }
                if (_this.newestOnTop && _this.toastContainer.childElementCount !== 0) {
                    _this.toastContainer.insertBefore(_this.toastEle, _this.toastContainer.children[0]);
                }
                else if (!_this.isBlazorServer()) {
                    _this.toastContainer.appendChild(_this.toastEle);
                }
                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([_this.toastEle], TOAST_BLAZOR_HIDDEN);
                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(_this.toastEle, 'click', _this.clickHandler, _this);
                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(_this.toastEle, 'keydown', _this.keyDownHandler, _this);
                _this.toastContainer.style.zIndex = (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_2__.getZindexPartial)(_this.toastContainer) + '';
                _this.displayToast(_this.toastEle, toastObj);
            }
            else if (_this.isBlazorServer()) {
                var intervalId = parseInt(_this.toastEle.id.split('toast_')[1], 10);
                _this.clearProgress(intervalId);
                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(_this.toastEle);
                if (_this.toastContainer.childElementCount === 0) {
                    _this.clearContainerPos();
                }
            }
        });
    };
    Toast.prototype.clickHandler = function (e) {
        var _this = this;
        if (!this.isBlazorServer()) {
            e.stopPropagation();
        }
        var target = e.target;
        var toastEle = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.' + ROOT);
        var clickArgs = this.isBlazorServer() ? {
            element: toastEle, cancel: false, clickToClose: false, originalEvent: e
        } : {
            element: toastEle, cancel: false, clickToClose: false, originalEvent: e, toastObj: this
        };
        var isCloseIcon = target.classList.contains(CLOSEBTN);
        this.trigger('click', clickArgs, function (toastClickArgs) {
            if ((isCloseIcon && !toastClickArgs.cancel) || toastClickArgs.clickToClose) {
                _this.destroyToast(toastEle, 'click');
            }
        });
    };
    Toast.prototype.keyDownHandler = function (e) {
        if (e.target.classList.contains(CLOSEBTN) &&
            (e.keyCode === 13 || e.keyCode === 32)) {
            var target = e.target;
            var toastEle = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.' + ROOT);
            this.destroyToast(toastEle, 'key');
        }
    };
    Toast.prototype.displayToast = function (toastEle, toastObj) {
        var _this = this;
        var showAnimate = this.animation.show;
        var animate = {
            duration: showAnimate.duration, name: showAnimate.effect, timingFunction: showAnimate.easing
        };
        var toastOpen = this.isBlazorServer() ? {
            options: toastObj,
            element: this.toastEle
        } : {
            options: toastObj,
            toastObj: this,
            element: this.toastEle,
        };
        animate.begin = function () {
            toastEle.style.display = '';
        };
        animate.end = function () {
            _this.trigger('open', toastOpen);
        };
        new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Animation(animate).animate(toastEle);
    };
    Toast.prototype.getContainer = function () {
        this.element.classList.add(CONTAINER);
        return this.element;
    };
    /**
     * Called internally if any of the property value changed.
     *
     * @param {ToastModel} newProp - specifies the new property
     * @param {ToastModel} oldProp - specifies the old property
     * @returns {void}
     * @private
     */
    // eslint-disable-next-line
    Toast.prototype.onPropertyChanged = function (newProp, oldProp) {
        var container = this.element;
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'enableRtl':
                    // eslint-disable-next-line
                    newProp.enableRtl ? container.classList.add(RTL) : container.classList.remove(RTL);
                    break;
            }
        }
    };
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('300px')
    ], Toast.prototype, "width", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('auto')
    ], Toast.prototype, "height", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)
    ], Toast.prototype, "title", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)
    ], Toast.prototype, "content", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)
    ], Toast.prototype, "enableHtmlSanitizer", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)
    ], Toast.prototype, "icon", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)
    ], Toast.prototype, "cssClass", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)
    ], Toast.prototype, "template", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)
    ], Toast.prototype, "newestOnTop", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], Toast.prototype, "showCloseButton", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], Toast.prototype, "showProgressBar", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(5000)
    ], Toast.prototype, "timeOut", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Rtl')
    ], Toast.prototype, "progressDirection", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(1000)
    ], Toast.prototype, "extendedTimeout", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, ToastAnimationSettings)
    ], Toast.prototype, "animation", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, ToastPosition)
    ], Toast.prototype, "position", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Collection)([{}], ButtonModelProps)
    ], Toast.prototype, "buttons", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)
    ], Toast.prototype, "target", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Toast.prototype, "created", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Toast.prototype, "beforeSanitizeHtml", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Toast.prototype, "destroyed", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Toast.prototype, "open", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Toast.prototype, "beforeOpen", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Toast.prototype, "beforeClose", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Toast.prototype, "close", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Toast.prototype, "click", void 0);
    Toast = __decorate([
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges
    ], Toast);
    return Toast;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));
/**
 * Base for creating Toast through utility method.
 */
// eslint-disable-next-line
var ToastUtility;
(function (ToastUtility) {
    /**
     * To display a simple toast using the 'ToastUtility' with 'ToastModal' or
     * as string with toast content, type, timeOut.
     * ```
     * Eg : ToastUtility.show('Toast Content Message', 'Information', 7000);
     *
     * ```
     */
    /* istanbul ignore next */
    /**
     *
     * @param { ToastModel | string } content - Specifies the toast modal or the content of the Toast.
     * @param {string} type - Specifies the type of toast.
     * @param { number } timeOut - Specifies the timeOut of the toast.
     * @returns {Toast} - returns the element
     */
    function show(content, type, timeOut) {
        var toastContainerElement;
        if (document.querySelector('.' + CONTAINER)) {
            toastContainerElement = document.querySelector('.' + CONTAINER);
        }
        else {
            toastContainerElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { 'className': ROOT + ' ' + CONTAINER + ' e-toast-util' });
            document.body.appendChild(toastContainerElement);
        }
        var toastObj;
        var untilToastsModel;
        if (typeof (content) === 'string') {
            var cssClass = void 0;
            var icon = void 0;
            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(type)) {
                switch (type) {
                    case 'Warning':
                        cssClass = 'e-toast-warning';
                        icon = 'e-toast-warning-icon';
                        break;
                    case 'Success':
                        cssClass = 'e-toast-success';
                        icon = 'e-toast-success-icon';
                        break;
                    case 'Error':
                        cssClass = 'e-toast-danger';
                        icon = 'e-toast-error-icon';
                        break;
                    case 'Information':
                        cssClass = 'e-toast-info';
                        icon = 'e-toast-info-icon';
                        break;
                }
            }
            else {
                cssClass = '';
                icon = '';
            }
            untilToastsModel = {
                content: content,
                cssClass: cssClass,
                icon: icon,
                timeOut: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(timeOut) ? timeOut : 5000
            };
        }
        else {
            untilToastsModel = content;
        }
        toastObj = new Toast(untilToastsModel);
        toastObj.appendTo(toastContainerElement);
        toastObj.show();
        return toastObj;
    }
    ToastUtility.show = show;
})(ToastUtility || (ToastUtility = {}));

/**
 * Toast modules
 */

var __extends$1 = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate$1 = ( false) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
/**
 * Specifies the type of severity to display the message with distinctive icons and colors.
 */
var Severity;
(function (Severity) {
    /**
     * The message is displayed with icons and colors to denote it as a normal message.
     */
    Severity["Normal"] = "Normal";
    /**
     * The message is displayed with icons and colors to denote it as a success message.
     */
    Severity["Success"] = "Success";
    /**
     * The message is displayed with icons and colors to denote it as information.
     */
    Severity["Info"] = "Info";
    /**
     * The message is displayed with icons and colors to denote it as a warning message.
     */
    Severity["Warning"] = "Warning";
    /**
     * The message is displayed with icons and colors to denote it as an error message.
     */
    Severity["Error"] = "Error";
})(Severity || (Severity = {}));
/**
 * Specifies the predefined appearance variants for the component to display.
 */
var Variant;
(function (Variant) {
    /**
     * Denotes the severity is differentiated using text color and light background color.
     */
    Variant["Text"] = "Text";
    /**
     * Denotes the severity is differentiated using text color and border without background.
     */
    Variant["Outlined"] = "Outlined";
    /**
     * Denotes the severity is differentiated using text color and dark background color.
     */
    Variant["Filled"] = "Filled";
})(Variant || (Variant = {}));
var MSG_ICON = 'e-msg-icon';
var MSG_CLOSE_ICON = 'e-msg-close-icon';
var MSG_CONTENT = 'e-msg-content';
var RTL$1 = 'e-rtl';
var SUCCESS = 'e-success';
var WARNING = 'e-warning';
var INFO = 'e-info';
var ERROR = 'e-error';
var OUTLINED = 'e-outlined';
var FILLED = 'e-filled';
var HIDE = 'e-hidden';
/**
 * The Message component displays messages with severity by differentiating icons and colors to denote the importance and context of the message to the end user.
 * ```html
 * <div id="msg"></div>
 * <script>
 *   var msgObj: Message = new Message({
 *      content: 'Editing is restricted',
 *      showCloseIcon: true
 *   })
 *   msgObj.appendTo('#msg');
 * </script>
 * ```
 *
 */
var Message = /** @__PURE__ @class */ (function (_super) {
    __extends$1(Message, _super);
    /**
     * Constructor for creating the Message component widget.
     *
     * @param {MessageModel}options - Specifies the Message component interface.
     * @param {HTMLElement}element - Specifies the target element.
     */
    function Message(options, element) {
        var _this = _super.call(this, options, element) || this;
        _this.initialRender = true;
        return _this;
    }
    /**
     * Gets the Message component module name.
     *
     * @returns {string} - Returns the string.
     * @private
     */
    Message.prototype.getModuleName = function () {
        return 'message';
    };
    /**
     * Get the persisted state properties of the Message component.
     *
     * @returns {string} - Returns the string.
     */
    Message.prototype.getPersistData = function () {
        return this.addOnPersist([]);
    };
    /**
     * Method to initialize the variables for the Message component.
     *
     * @returns {void}
     * @private
     */
    Message.prototype.preRender = function () {
        var localeText = { close: 'Close' };
        this.l10n = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('message', localeText, this.locale);
    };
    /**
     * Method to initialize the Message component rendering.
     *
     * @returns {void}
     * @private
     */
    Message.prototype.render = function () {
        this.innerContent = this.element.innerHTML;
        this.element.innerHTML = '';
        this.initialize();
        this.wireEvents();
        this.renderComplete();
        this.renderReactTemplates();
        this.initialRender = false;
    };
    Message.prototype.initialize = function () {
        this.element.setAttribute("role", "alert");
        this.setIcon();
        this.setContent();
        this.setCloseIcon();
        this.setSeverity();
        this.setVariant();
        this.setCssClass();
        this.setVisible();
        if (this.enableRtl) {
            this.element.classList.add(RTL$1);
        }
    };
    Message.prototype.setIcon = function () {
        if (this.showIcon) {
            this.iconElement = this.createElement('span', { className: MSG_ICON });
            this.element.appendChild(this.iconElement);
        }
    };
    Message.prototype.setCloseIcon = function () {
        if (this.showCloseIcon) {
            this.closeIcon = this.createElement('button', { attrs: { type: "button", class: MSG_CLOSE_ICON } });
            this.element.appendChild(this.closeIcon);
            this.setTitle();
        }
    };
    Message.prototype.setTitle = function () {
        this.l10n.setLocale(this.locale);
        var closeIconTitle = this.l10n.getConstant('close');
        this.closeIcon.setAttribute('title', closeIconTitle);
        this.closeIcon.setAttribute('aria-label', closeIconTitle);
    };
    Message.prototype.setContent = function () {
        this.txtElement = this.createElement('div', { className: MSG_CONTENT });
        this.element.appendChild(this.txtElement);
        this.setTemplate();
    };
    Message.prototype.setTemplate = function () {
        var templateFn;
        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.content) || this.content === '') {
            this.txtElement.innerHTML = this.innerContent;
        }
        else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.content) && this.content !== '') {
            if ((typeof this.content === 'string') || (typeof this.content !== 'string')) {
                if (this.isVue || typeof this.content !== 'string') {
                    templateFn = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(this.content);
                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(templateFn)) {
                        var tempArr = templateFn({}, this, 'content', this.element.id + 'content', true);
                        if (tempArr) {
                            tempArr = Array.prototype.slice.call(tempArr);
                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.append)(tempArr, this.txtElement);
                            this.renderReactTemplates();
                        }
                    }
                }
                else {
                    this.txtElement.innerHTML = this.content;
                }
            }
        }
    };
    Message.prototype.setSeverity = function () {
        var classList$$1 = [SUCCESS, WARNING, INFO, ERROR];
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], classList$$1);
        if (this.severity === "Success") {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], SUCCESS);
        }
        else if (this.severity === "Warning") {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], WARNING);
        }
        else if (this.severity === "Error") {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], ERROR);
        }
        else if (this.severity === "Info") {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], INFO);
        }
    };
    Message.prototype.setVariant = function () {
        var classList$$1 = [FILLED, OUTLINED];
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], classList$$1);
        if (this.variant === 'Outlined') {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], OUTLINED);
        }
        else if (this.variant === 'Filled') {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], FILLED);
        }
    };
    Message.prototype.setCssClass = function (oldCssClass) {
        if (oldCssClass) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], oldCssClass.split(' '));
        }
        if (this.cssClass) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], this.cssClass.split(' '));
        }
    };
    Message.prototype.setVisible = function () {
        if (!this.visible) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], HIDE);
            if (!this.initialRender) {
                this.trigger('closed', { event: event, isInteracted: false, element: this.element });
            }
        }
        else {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], HIDE);
        }
    };
    Message.prototype.clickHandler = function (event) {
        this.closeMessage(event);
    };
    Message.prototype.keyboardHandler = function (event) {
        if (event.keyCode === 32 || event.keyCode === 13) {
            this.closeMessage(event);
        }
    };
    Message.prototype.closeMessage = function (event) {
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], HIDE);
        this.setProperties({ visible: false }, true);
        var eventArgs = { event: event, isInteracted: true, element: this.element };
        this.trigger('closed', eventArgs);
    };
    Message.prototype.wireEvents = function () {
        if (this.showCloseIcon) {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.closeIcon, 'click', this.clickHandler, this);
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.closeIcon, 'keydown', this.keyboardHandler, this);
        }
    };
    Message.prototype.unWireEvents = function () {
        if (this.showCloseIcon) {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.closeIcon, 'click', this.clickHandler);
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.closeIcon, 'keydown', this.keyboardHandler);
        }
    };
    /**
     * Method to handle the dynamic changes of the Message component properties.
     *
     * @param {MessageModel} newProp - Specifies the old property.
     * @param {MessageModel} oldProp - Specifies the new property.
     * @returns {void}
     * @private
     */
    Message.prototype.onPropertyChanged = function (newProp, oldProp) {
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'cssClass':
                    this.setCssClass(oldProp.cssClass);
                    break;
                case 'content':
                    this.txtElement.innerHTML = '';
                    this.setTemplate();
                    break;
                case 'enableRtl':
                    if (!this.enableRtl) {
                        this.element.classList.remove(RTL$1);
                    }
                    else {
                        this.element.classList.add(RTL$1);
                    }
                    break;
                case 'locale':
                    if (this.showCloseIcon) {
                        this.setTitle();
                    }
                    break;
                case 'showIcon':
                    if (!this.showIcon && this.element.getElementsByClassName(MSG_ICON).length > 0) {
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.iconElement);
                    }
                    if (this.showIcon) {
                        this.iconElement = this.createElement('span', { className: MSG_ICON });
                        this.element.insertBefore(this.iconElement, this.txtElement);
                    }
                    break;
                case 'showCloseIcon':
                    if (!this.showCloseIcon && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.closeIcon)) {
                        this.unWireEvents();
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.closeIcon);
                    }
                    else {
                        this.setCloseIcon();
                        this.wireEvents();
                    }
                    break;
                case 'severity':
                    this.setSeverity();
                    break;
                case 'variant':
                    this.setVariant();
                    break;
                case 'visible':
                    this.setVisible();
                    break;
            }
        }
    };
    /**
     * Method to destroy the Message component. It removes the component from the DOM and detaches all its bound events. It also removes the attributes and classes of the component.
     *
     * @returns {void}
     */
    Message.prototype.destroy = function () {
        var cssClass = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.cssClass) ? [''] : this.cssClass.split(' ');
        var className = [SUCCESS, WARNING, INFO, ERROR, RTL$1, HIDE, OUTLINED, FILLED];
        var classList$$1 = (cssClass.length === 1 && cssClass[0] === '') ? className : className.concat(cssClass);
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], classList$$1);
        this.element.removeAttribute('role');
        this.unWireEvents();
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.iconElement)) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.iconElement);
        }
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.txtElement);
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.closeIcon)) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.closeIcon);
        }
        _super.prototype.destroy.call(this);
    };
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)
    ], Message.prototype, "content", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], Message.prototype, "cssClass", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)
    ], Message.prototype, "showIcon", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], Message.prototype, "showCloseIcon", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Normal')
    ], Message.prototype, "severity", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Text')
    ], Message.prototype, "variant", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)
    ], Message.prototype, "visible", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Message.prototype, "created", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Message.prototype, "destroyed", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Message.prototype, "closed", void 0);
    Message = __decorate$1([
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges
    ], Message);
    return Message;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));

/**
 * Message modules
 */

var __extends$2 = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate$2 = ( false) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var cssClassName = {
    TEXTSHAPE: 'e-skeleton-text',
    CIRCLESHAPE: 'e-skeleton-circle',
    SQUARESHAPE: 'e-skeleton-square',
    RECTANGLESHAPE: 'e-skeleton-rectangle',
    WAVEEFFECT: 'e-shimmer-wave',
    PULSEEFFECT: 'e-shimmer-pulse',
    FADEEFFECT: 'e-shimmer-fade',
    VISIBLENONE: 'e-visible-none'
};
/**
 * The Shimmer is a placeholder that animates a shimmer effect to let users know that the page’s content is loading at the moment.
 * In other terms, it simulates the layout of page content while loading the actual content.
 * ```html
 * <div id="skeletonCircle"></div>
 * ```
 * ```typescript
 * <script>
 * var skeletonObj = new Skeleton({ shape: 'Circle', width: "2rem" });
 * skeletonObj.appendTo("#skeletonCircle");
 * </script>
 * ```
 */
var Skeleton = /** @__PURE__ @class */ (function (_super) {
    __extends$2(Skeleton, _super);
    /**
     * Constructor for creating Skeleton component.
     * @param {SkeletonModel} options - Defines the model of Skeleton class.
     * @param {HTMLElement} element - Defines the target HTML element.
     */
    function Skeleton(options, element) {
        return _super.call(this, options, element) || this;
    }
    /**
     * Get component module name.
     * @returns {string} - Module name
     * @private
     */
    Skeleton.prototype.getModuleName = function () {
        return 'skeleton';
    };
    Skeleton.prototype.getPersistData = function () {
        return this.addOnPersist([]);
    };
    Skeleton.prototype.preRender = function () {
        if (!this.element.id) {
            this.element.id = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getUniqueID)('e-' + this.getModuleName());
        }
        this.updateCssClass();
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.element, { role: 'alert', 'aria-busy': 'true', 'aria-live': 'polite', 'aria-label': this.label });
    };
    /**
     * Method for initialize the component rendering.
     * @returns {void}
     * @private
     */
    Skeleton.prototype.render = function () {
        this.initialize();
    };
    Skeleton.prototype.onPropertyChanged = function (newProp, oldProp) {
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'width':
                case 'height':
                    this.updateDimension();
                    break;
                case 'shape':
                    this.updateShape();
                    break;
                case 'shimmerEffect':
                    this.updateEffect();
                    break;
                case 'visible':
                    this.updateVisibility();
                    break;
                case 'label':
                    this.element.setAttribute('aria-label', this.label);
                    break;
                case 'cssClass':
                    if (oldProp.cssClass)
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], oldProp.cssClass.split(' '));
                    this.updateCssClass();
                    break;
            }
        }
    };
    /**
     * Method to destroys the Skeleton component.
     * @returns {void}
     */
    Skeleton.prototype.destroy = function () {
        _super.prototype.destroy.call(this);
        var attrs = ['role', 'aria-live', 'aria-busy', 'aria-label'];
        var cssClass = [];
        if (this.cssClass)
            cssClass = cssClass.concat(this.cssClass.split(' '));
        for (var i = 0; i < attrs.length; i++) {
            this.element.removeAttribute(attrs[i]);
        }
        cssClass = cssClass.concat(this.element.classList.value.match(/(e-skeleton-[^\s]+)/g));
        cssClass = cssClass.concat(this.element.classList.value.match(/(e-shimmer-[^\s]+)/g));
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], cssClass);
    };
    Skeleton.prototype.initialize = function () {
        this.updateShape();
        this.updateEffect();
        this.updateVisibility();
    };
    Skeleton.prototype.updateShape = function () {
        var shapeCss = cssClassName[this.shape.toUpperCase() + 'SHAPE'];
        var removeCss = this.element.classList.value.match(/(e-skeleton-[^\s]+)/g);
        this.updateDimension();
        if (removeCss)
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], removeCss);
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], [shapeCss]);
    };
    Skeleton.prototype.updateDimension = function () {
        var width = (!this.width && (['Text', 'Rectangle'].indexOf(this.shape) > -1)) ? '100%' : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.width);
        var height = ['Circle', 'Square'].indexOf(this.shape) > -1 ? width : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.height);
        this.element.style.width = width;
        this.element.style.height = height;
    };
    Skeleton.prototype.updateEffect = function () {
        var removeCss = this.element.classList.value.match(/(e-shimmer-[^\s]+)/g);
        if (removeCss)
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], removeCss);
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], [cssClassName[this.shimmerEffect.toUpperCase() + 'EFFECT']]);
    };
    Skeleton.prototype.updateVisibility = function () {
        this.visible ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], [cssClassName.VISIBLENONE]) : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], [cssClassName.VISIBLENONE]);
    };
    Skeleton.prototype.updateCssClass = function () {
        if (this.cssClass)
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], this.cssClass.split(' '));
    };
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], Skeleton.prototype, "width", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], Skeleton.prototype, "height", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)
    ], Skeleton.prototype, "visible", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Text')
    ], Skeleton.prototype, "shape", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Wave')
    ], Skeleton.prototype, "shimmerEffect", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Loading...')
    ], Skeleton.prototype, "label", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], Skeleton.prototype, "cssClass", void 0);
    Skeleton = __decorate$2([
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges
    ], Skeleton);
    return Skeleton;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));

/**
 * Shimmer modules that need to be exported.
 */

/**
 * Notification Components
 */




/***/ }),

/***/ 32610:
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-notifications/node_modules/@syncfusion/ej2-base/dist/es6/ej2-base.es5.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Ajax": () => (/* binding */ Ajax),
/* harmony export */   "Animation": () => (/* binding */ Animation),
/* harmony export */   "Base": () => (/* binding */ Base),
/* harmony export */   "Browser": () => (/* binding */ Browser),
/* harmony export */   "ChildProperty": () => (/* binding */ ChildProperty),
/* harmony export */   "Collection": () => (/* binding */ Collection),
/* harmony export */   "CollectionFactory": () => (/* binding */ CollectionFactory),
/* harmony export */   "Complex": () => (/* binding */ Complex),
/* harmony export */   "ComplexFactory": () => (/* binding */ ComplexFactory),
/* harmony export */   "Component": () => (/* binding */ Component),
/* harmony export */   "CreateBuilder": () => (/* binding */ CreateBuilder),
/* harmony export */   "Draggable": () => (/* binding */ Draggable),
/* harmony export */   "Droppable": () => (/* binding */ Droppable),
/* harmony export */   "Event": () => (/* binding */ Event$1),
/* harmony export */   "EventHandler": () => (/* binding */ EventHandler),
/* harmony export */   "HijriParser": () => (/* binding */ HijriParser),
/* harmony export */   "Internationalization": () => (/* binding */ Internationalization),
/* harmony export */   "IntlBase": () => (/* binding */ IntlBase),
/* harmony export */   "KeyboardEvents": () => (/* binding */ KeyboardEvents),
/* harmony export */   "L10n": () => (/* binding */ L10n),
/* harmony export */   "ModuleLoader": () => (/* binding */ ModuleLoader),
/* harmony export */   "NotifyPropertyChanges": () => (/* binding */ NotifyPropertyChanges),
/* harmony export */   "Observer": () => (/* binding */ Observer),
/* harmony export */   "Position": () => (/* binding */ Position),
/* harmony export */   "Property": () => (/* binding */ Property),
/* harmony export */   "SanitizeHtmlHelper": () => (/* binding */ SanitizeHtmlHelper),
/* harmony export */   "SwipeSettings": () => (/* binding */ SwipeSettings),
/* harmony export */   "Touch": () => (/* binding */ Touch),
/* harmony export */   "addClass": () => (/* binding */ addClass),
/* harmony export */   "addInstance": () => (/* binding */ addInstance),
/* harmony export */   "animationMode": () => (/* binding */ animationMode),
/* harmony export */   "append": () => (/* binding */ append),
/* harmony export */   "attributes": () => (/* binding */ attributes),
/* harmony export */   "blazorCultureFormats": () => (/* binding */ blazorCultureFormats),
/* harmony export */   "blazorTemplates": () => (/* binding */ blazorTemplates),
/* harmony export */   "classList": () => (/* binding */ classList),
/* harmony export */   "cldrData": () => (/* binding */ cldrData),
/* harmony export */   "cloneNode": () => (/* binding */ cloneNode),
/* harmony export */   "closest": () => (/* binding */ closest),
/* harmony export */   "compareElementParent": () => (/* binding */ compareElementParent),
/* harmony export */   "compile": () => (/* binding */ compile$$1),
/* harmony export */   "containerObject": () => (/* binding */ containerObject),
/* harmony export */   "containsClass": () => (/* binding */ containsClass),
/* harmony export */   "createElement": () => (/* binding */ createElement),
/* harmony export */   "createInstance": () => (/* binding */ createInstance),
/* harmony export */   "debounce": () => (/* binding */ debounce),
/* harmony export */   "defaultCulture": () => (/* binding */ defaultCulture),
/* harmony export */   "defaultCurrencyCode": () => (/* binding */ defaultCurrencyCode),
/* harmony export */   "deleteObject": () => (/* binding */ deleteObject),
/* harmony export */   "detach": () => (/* binding */ detach),
/* harmony export */   "disableBlazorMode": () => (/* binding */ disableBlazorMode),
/* harmony export */   "enableBlazorMode": () => (/* binding */ enableBlazorMode),
/* harmony export */   "enableRipple": () => (/* binding */ enableRipple),
/* harmony export */   "enableRtl": () => (/* binding */ enableRtl),
/* harmony export */   "enableVersionBasedPersistence": () => (/* binding */ enableVersionBasedPersistence),
/* harmony export */   "extend": () => (/* binding */ extend),
/* harmony export */   "formatUnit": () => (/* binding */ formatUnit),
/* harmony export */   "getAttributeOrDefault": () => (/* binding */ getAttributeOrDefault),
/* harmony export */   "getComponent": () => (/* binding */ getComponent),
/* harmony export */   "getDefaultDateObject": () => (/* binding */ getDefaultDateObject),
/* harmony export */   "getElement": () => (/* binding */ getElement),
/* harmony export */   "getEnumValue": () => (/* binding */ getEnumValue),
/* harmony export */   "getInstance": () => (/* binding */ getInstance),
/* harmony export */   "getNumberDependable": () => (/* binding */ getNumberDependable),
/* harmony export */   "getNumericObject": () => (/* binding */ getNumericObject),
/* harmony export */   "getRandomId": () => (/* binding */ getRandomId),
/* harmony export */   "getTemplateEngine": () => (/* binding */ getTemplateEngine),
/* harmony export */   "getUniqueID": () => (/* binding */ getUniqueID),
/* harmony export */   "getValue": () => (/* binding */ getValue),
/* harmony export */   "getVersion": () => (/* binding */ getVersion),
/* harmony export */   "includeInnerHTML": () => (/* binding */ includeInnerHTML),
/* harmony export */   "isBlazor": () => (/* binding */ isBlazor),
/* harmony export */   "isNullOrUndefined": () => (/* binding */ isNullOrUndefined),
/* harmony export */   "isObject": () => (/* binding */ isObject),
/* harmony export */   "isObjectArray": () => (/* binding */ isObjectArray),
/* harmony export */   "isRippleEnabled": () => (/* binding */ isRippleEnabled),
/* harmony export */   "isUndefined": () => (/* binding */ isUndefined),
/* harmony export */   "isVisible": () => (/* binding */ isVisible),
/* harmony export */   "loadCldr": () => (/* binding */ loadCldr),
/* harmony export */   "matches": () => (/* binding */ matches),
/* harmony export */   "merge": () => (/* binding */ merge),
/* harmony export */   "onIntlChange": () => (/* binding */ onIntlChange),
/* harmony export */   "prepend": () => (/* binding */ prepend),
/* harmony export */   "print": () => (/* binding */ print),
/* harmony export */   "queryParams": () => (/* binding */ queryParams),
/* harmony export */   "registerLicense": () => (/* binding */ registerLicense),
/* harmony export */   "remove": () => (/* binding */ remove),
/* harmony export */   "removeChildInstance": () => (/* binding */ removeChildInstance),
/* harmony export */   "removeClass": () => (/* binding */ removeClass),
/* harmony export */   "resetBlazorTemplate": () => (/* binding */ resetBlazorTemplate),
/* harmony export */   "rightToLeft": () => (/* binding */ rightToLeft),
/* harmony export */   "rippleEffect": () => (/* binding */ rippleEffect),
/* harmony export */   "select": () => (/* binding */ select),
/* harmony export */   "selectAll": () => (/* binding */ selectAll),
/* harmony export */   "setCulture": () => (/* binding */ setCulture),
/* harmony export */   "setCurrencyCode": () => (/* binding */ setCurrencyCode),
/* harmony export */   "setGlobalAnimation": () => (/* binding */ setGlobalAnimation),
/* harmony export */   "setImmediate": () => (/* binding */ setImmediate),
/* harmony export */   "setStyleAttribute": () => (/* binding */ setStyleAttribute),
/* harmony export */   "setTemplateEngine": () => (/* binding */ setTemplateEngine),
/* harmony export */   "setValue": () => (/* binding */ setValue),
/* harmony export */   "siblings": () => (/* binding */ siblings),
/* harmony export */   "throwError": () => (/* binding */ throwError),
/* harmony export */   "uniqueID": () => (/* binding */ uniqueID),
/* harmony export */   "updateBlazorTemplate": () => (/* binding */ updateBlazorTemplate),
/* harmony export */   "validateLicense": () => (/* binding */ validateLicense),
/* harmony export */   "versionBasedStatePersistence": () => (/* binding */ versionBasedStatePersistence)
/* harmony export */ });
var instances = 'ej2_instances';
var uid = 0;
var isBlazorPlatform = false;
/**
 * Function to check whether the platform is blazor or not.
 *
 * @returns {void} result
 * @private
 */

function disableBlazorMode() {
  isBlazorPlatform = false;
}
/**
 * Create Instance from constructor function with desired parameters.
 *
 * @param {Function} classFunction - Class function to which need to create instance
 * @param {any[]} params - Parameters need to passed while creating instance
 * @returns {any} ?
 * @private
 */
// eslint-disable-next-line


function createInstance(classFunction, params) {
  var arrayParam = params;
  arrayParam.unshift(undefined);
  return new (Function.prototype.bind.apply(classFunction, arrayParam))();
}
/**
 * To run a callback function immediately after the browser has completed other operations.
 *
 * @param {Function} handler - callback function to be triggered.
 * @returns {Function} ?
 * @private
 */


function setImmediate(handler) {
  var unbind; // eslint-disable-next-line

  var num = new Uint16Array(5);
  var intCrypto = window.msCrypto || window.crypto;
  intCrypto.getRandomValues(num);
  var secret = 'ej2' + combineArray(num); // eslint-disable-next-line

  var messageHandler = function (event) {
    if (event.source === window && typeof event.data === 'string' && event.data.length <= 32 && event.data === secret) {
      handler();
      unbind();
    }
  };

  window.addEventListener('message', messageHandler, false);
  window.postMessage(secret, '*');
  return unbind = function () {
    window.removeEventListener('message', messageHandler);
    handler = messageHandler = secret = undefined;
  };
}
/**
 * To get nameSpace value from the desired object.
 *
 * @param {string} nameSpace - String value to the get the inner object
 * @param {any} obj - Object to get the inner object value.
 * @returns {any} ?
 * @private
 */
// eslint-disable-next-line


function getValue(nameSpace, obj) {
  // eslint-disable-next-line
  var value = obj;
  var splits = nameSpace.replace(/\[/g, '.').replace(/\]/g, '').split('.');

  for (var i = 0; i < splits.length && !isUndefined(value); i++) {
    value = value[splits[i]];
  }

  return value;
}
/**
 * To set value for the nameSpace in desired object.
 *
 * @param {string} nameSpace - String value to the get the inner object
 * @param {any} value - Value that you need to set.
 * @param {any} obj - Object to get the inner object value.
 * @returns {any} ?
 * @private
 */
// eslint-disable-next-line


function setValue(nameSpace, value, obj) {
  var keys = nameSpace.replace(/\[/g, '.').replace(/\]/g, '').split('.'); // eslint-disable-next-line

  var start = obj || {}; // eslint-disable-next-line

  var fromObj = start;
  var i;
  var length = keys.length;
  var key;

  for (i = 0; i < length; i++) {
    key = keys[i];

    if (i + 1 === length) {
      fromObj[key] = value === undefined ? {} : value;
    } else if (isNullOrUndefined(fromObj[key])) {
      fromObj[key] = {};
    }

    fromObj = fromObj[key];
  }

  return start;
}
/**
 * Delete an item from Object
 *
 * @param {any} obj - Object in which we need to delete an item.
 * @param {string} key - String value to the get the inner object
 * @returns {void} ?
 * @private
 */
// eslint-disable-next-line


function deleteObject(obj, key) {
  delete obj[key];
}
/**
 *@private
 */


var containerObject = typeof window !== "undefined" ? window : {};
/**
 * Check weather the given argument is only object.
 *
 * @param {any} obj - Object which is need to check.
 * @returns {boolean} ?
 * @private
 */
// eslint-disable-next-line

function isObject(obj) {
  var objCon = {};
  return !isNullOrUndefined(obj) && obj.constructor === objCon.constructor;
}
/**
 * To get enum value by giving the string.
 *
 * @param {any} enumObject - Enum object.
 * @param {string} enumValue - Enum value to be searched
 * @returns {any} ?
 * @private
 */
// eslint-disable-next-line


function getEnumValue(enumObject, enumValue) {
  // eslint-disable-next-line
  return enumObject[enumValue];
}
/**
 * Merge the source object into destination object.
 *
 * @param {any} source - source object which is going to merge with destination object
 * @param {any} destination - object need to be merged
 * @returns {void} ?
 * @private
 */


function merge(source, destination) {
  if (!isNullOrUndefined(destination)) {
    var temrObj = source;
    var tempProp = destination;
    var keys = Object.keys(destination);
    var deepmerge = 'deepMerge';

    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
      var key = keys_1[_i];

      if (!isNullOrUndefined(temrObj[deepmerge]) && temrObj[deepmerge].indexOf(key) !== -1 && (isObject(tempProp[key]) || Array.isArray(tempProp[key]))) {
        extend(temrObj[key], temrObj[key], tempProp[key], true);
      } else {
        temrObj[key] = tempProp[key];
      }
    }
  }
}
/**
 * Extend the two object with newer one.
 *
 * @param {any} copied - Resultant object after merged
 * @param {Object} first - First object need to merge
 * @param {Object} second - Second object need to merge
 * @param {boolean} deep ?
 * @returns {Object} ?
 * @private
 */


function extend(copied, first, second, deep) {
  var result = copied && typeof copied === 'object' ? copied : {};
  var length = arguments.length;

  if (deep) {
    length = length - 1;
  }

  var _loop_1 = function (i) {
    // eslint-disable-next-line
    if (!arguments_1[i]) {
      return "continue";
    } // eslint-disable-next-line


    var obj1 = arguments_1[i];
    Object.keys(obj1).forEach(function (key) {
      var src = result[key];
      var copy = obj1[key];
      var clone;
      var isArrayChanged = Array.isArray(copy) && Array.isArray(src) && copy.length !== src.length; // eslint-disable-next-line

      var blazorEventExtend = isBlazor() ? !(src instanceof Event) && !isArrayChanged : true;

      if (deep && blazorEventExtend && (isObject(copy) || Array.isArray(copy))) {
        if (isObject(copy)) {
          clone = src ? src : {}; // eslint-disable-next-line

          if (Array.isArray(clone) && clone.hasOwnProperty('isComplexArray')) {
            extend(clone, {}, copy, deep);
          } else {
            result[key] = extend(clone, {}, copy, deep);
          }
        } else {
          /* istanbul ignore next */
          clone = isBlazor() ? src && Object.keys(copy).length : src ? src : [];
          result[key] = extend([], clone, copy, clone && clone.length || copy && copy.length);
        }
      } else {
        result[key] = copy;
      }
    });
  };

  var arguments_1 = arguments;

  for (var i = 1; i < length; i++) {
    _loop_1(i);
  }

  return result;
}
/**
 * To check whether the object is null or undefined.
 *
 * @param {Object} value - To check the object is null or undefined
 * @returns {boolean} ?
 * @private
 */


function isNullOrUndefined(value) {
  return value === undefined || value === null;
}
/**
 * To check whether the object is undefined.
 *
 * @param {Object} value - To check the object is undefined
 * @returns {boolean} ?
 * @private
 */


function isUndefined(value) {
  return 'undefined' === typeof value;
}
/**
 * To return the generated unique name
 *
 * @param {string} definedName - To concatenate the unique id to provided name
 * @returns {string} ?
 * @private
 */


function getUniqueID(definedName) {
  return definedName + '_' + uid++;
}
/**
 * It limits the rate at which a function can fire. The function will fire only once every provided second instead of as quickly.
 *
 * @param {Function} eventFunction - Specifies the function to run when the event occurs
 * @param {number} delay - A number that specifies the milliseconds for function delay call option
 * @returns {Function} ?
 * @private
 */


function debounce(eventFunction, delay) {
  // eslint-disable-next-line
  var out;
  return function () {
    var _this = this; // eslint-disable-next-line


    var args = arguments;

    var later = function () {
      out = null;
      return eventFunction.apply(_this, args);
    };

    clearTimeout(out);
    out = setTimeout(later, delay);
  };
}
/**
 * To convert the object to string for query url
 *
 * @param  {Object} data ?
 * @returns {string} ?
 * @private
 */
// eslint-disable-next-line


function queryParams(data) {
  var array = [];
  var keys = Object.keys(data);

  for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {
    var key = keys_2[_i];
    array.push(encodeURIComponent(key) + '=' + encodeURIComponent('' + data[key]));
  }

  return array.join('&');
}
/**
 * To check whether the given array contains object.
 *
 * @param {any} value - Specifies the T type array to be checked.
 * @returns {boolean} ?
 * @private
 */


function isObjectArray(value) {
  var parser = Object.prototype.toString;

  if (parser.call(value) === '[object Array]') {
    if (parser.call(value[0]) === '[object Object]') {
      return true;
    }
  }

  return false;
}
/**
 * To check whether the  child element is descendant to parent element or parent and child are same element.
 *
 * @param {Element} child - Specifies the child element to compare with parent.
 * @param {Element} parent - Specifies the parent element.
 * @returns {boolean} ?
 * @private
 */


function compareElementParent(child, parent) {
  var node = child;

  if (node === parent) {
    return true;
  } else if (node === document || !node) {
    return false;
  } else {
    return compareElementParent(node.parentNode, parent);
  }
}
/**
 * To throw custom error message.
 *
 * @param {string} message - Specifies the error message to be thrown.
 * @returns {void} ?
 * @private
 */


function throwError(message) {
  try {
    throw new Error(message);
  } catch (e) {
    // eslint-disable-next-line
    throw e.message + '\n' + e.stack;
  }
}
/**
 * This function is used to print given element
 *
 * @param {Element} element - Specifies the print content element.
 * @param {Window} printWindow - Specifies the print window.
 * @returns {Window} ?
 * @private
 */


function print(element, printWindow) {
  var div = document.createElement('div');
  var links = [].slice.call(document.getElementsByTagName('head')[0].querySelectorAll('base, link, style'));
  var blinks = [].slice.call(document.getElementsByTagName('body')[0].querySelectorAll('link, style'));

  if (blinks.length) {
    for (var l = 0, len = blinks.length; l < len; l++) {
      links.push(blinks[l]);
    }
  }

  var reference = '';

  if (isNullOrUndefined(printWindow)) {
    printWindow = window.open('', 'print', 'height=452,width=1024,tabbar=no');
  }

  div.appendChild(element.cloneNode(true));

  for (var i = 0, len = links.length; i < len; i++) {
    reference += links[i].outerHTML;
  }

  printWindow.document.write('<!DOCTYPE html> <html><head>' + reference + '</head><body>' + div.innerHTML + '<script> (function() { window.ready = true; })(); </script>' + '</body></html>');
  printWindow.document.close();
  printWindow.focus(); // eslint-disable-next-line

  var interval = setInterval(function () {
    if (printWindow.ready) {
      printWindow.print();
      printWindow.close();
      clearInterval(interval);
    }
  }, 500);
  return printWindow;
}
/**
 * Function to normalize the units applied to the element.
 *
 * @param {number|string} value ?
 * @returns {string} result
 * @private
 */


function formatUnit(value) {
  var result = value + '';

  if (result.match(/auto|cm|mm|in|px|pt|pc|%|em|ex|ch|rem|vw|vh|vmin|vmax/)) {
    return result;
  }

  return result + 'px';
}
/**
 * Function to check whether the platform is blazor or not.
 *
 * @returns {void} result
 * @private
 */


function enableBlazorMode() {
  isBlazorPlatform = true;
}
/**
 * Function to check whether the platform is blazor or not.
 *
 * @returns {boolean} result
 * @private
 */


function isBlazor() {
  return isBlazorPlatform;
}
/**
 * Function to convert xPath to DOM element in blazor platform
 *
 * @returns {HTMLElement} result
 * @param {HTMLElement | object} element ?
 * @private
 */


function getElement(element) {
  var xPath = 'xPath';

  if (!(element instanceof Node) && isBlazor() && !isNullOrUndefined(element[xPath])) {
    return document.evaluate(element[xPath], document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
  }

  return element;
}
/**
 * Function to fetch the Instances of a HTML element for the given component.
 *
 * @param {string | HTMLElement} element ?
 * @param {any} component ?
 * @returns {Object} ?
 * @private
 */
// eslint-disable-next-line


function getInstance(element, component) {
  // eslint-disable-next-line
  var elem = typeof element === 'string' ? document.querySelector(element) : element;

  if (elem[instances]) {
    for (var _i = 0, _a = elem[instances]; _i < _a.length; _i++) {
      var inst = _a[_i];

      if (inst instanceof component) {
        return inst;
      }
    }
  }

  return null;
}
/**
 * Function to add instances for the given element.
 *
 * @param {string | HTMLElement} element ?
 * @param {Object} instance ?
 * @returns {void} ?
 * @private
 */


function addInstance(element, instance) {
  // eslint-disable-next-line
  var elem = typeof element === 'string' ? document.querySelector(element) : element;

  if (elem[instances]) {
    elem[instances].push(instance);
  } else {
    elem[instances] = [instance];
  }
}
/**
 * Function to generate the unique id.
 *
 * @returns {any} ?
 * @private
 */
// eslint-disable-next-line


function uniqueID() {
  if (typeof window === 'undefined') {
    return;
  } // eslint-disable-next-line


  var num = new Uint16Array(5);
  var intCrypto = window.msCrypto || window.crypto;
  return intCrypto.getRandomValues(num);
}
/**
 *
 * @param {Int16Array} num ?
 * @returns {string} ?
 */


function combineArray(num) {
  var ret = '';

  for (var i = 0; i < 5; i++) {
    ret += (i ? ',' : '') + num[i];
  }

  return ret;
}
/**
 * Parser
 */


var defaultNumberingSystem = {
  'latn': {
    '_digits': '0123456789',
    '_type': 'numeric'
  }
};
var defaultNumberSymbols = {
  'decimal': '.',
  'group': ',',
  'percentSign': '%',
  'plusSign': '+',
  'minusSign': '-',
  'infinity': '∞',
  'nan': 'NaN',
  'exponential': 'E'
};
var latnNumberSystem = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
/**
 * Interface for parser base
 *
 * @private
 */

var ParserBase =
/** @__PURE__ @class */
function () {
  function ParserBase() {}
  /**
   * Returns the cldr object for the culture specifies
   *
   * @param {Object} obj - Specifies the object from which culture object to be acquired.
   * @param {string} cName - Specifies the culture name.
   * @returns {Object} ?
   */


  ParserBase.getMainObject = function (obj, cName) {
    var value = isBlazor() ? cName : 'main.' + cName;
    return getValue(value, obj);
  };
  /**
   * Returns the numbering system object from given cldr data.
   *
   * @param {Object} obj - Specifies the object from which number system is acquired.
   * @returns {Object} ?
   */


  ParserBase.getNumberingSystem = function (obj) {
    return getValue('supplemental.numberingSystems', obj) || this.numberingSystems;
  };
  /**
   * Returns the reverse of given object keys or keys specified.
   *
   * @param {Object} prop - Specifies the object to be reversed.
   * @param {number[]} keys - Optional parameter specifies the custom keyList for reversal.
   * @returns {Object} ?
   */


  ParserBase.reverseObject = function (prop, keys) {
    var propKeys = keys || Object.keys(prop);
    var res = {};

    for (var _i = 0, propKeys_1 = propKeys; _i < propKeys_1.length; _i++) {
      var key = propKeys_1[_i]; // eslint-disable-next-line

      if (!res.hasOwnProperty(prop[key])) {
        // eslint-disable-next-line
        res[prop[key]] = key;
      }
    }

    return res;
  };
  /**
   * Returns the symbol regex by skipping the escape sequence.
   *
   * @param {string[]} props - Specifies the array values to be skipped.
   * @returns {RegExp} ?
   */


  ParserBase.getSymbolRegex = function (props) {
    var regexStr = props.map(function (str) {
      return str.replace(/([.*+?^=!:${}()|[\]/\\])/g, '\\$1');
    }).join('|');
    return new RegExp(regexStr, 'g');
  };
  /**
   *
   * @param {Object} prop ?
   * @returns {Object} ?
   */


  ParserBase.getSymbolMatch = function (prop) {
    var matchKeys = Object.keys(defaultNumberSymbols);
    var ret = {};

    for (var _i = 0, matchKeys_1 = matchKeys; _i < matchKeys_1.length; _i++) {
      var key = matchKeys_1[_i]; // eslint-disable-next-line

      ret[prop[key]] = defaultNumberSymbols[key];
    }

    return ret;
  };
  /**
   * Returns regex string for provided value
   *
   * @param {string} val ?
   * @returns {string} ?
   */


  ParserBase.constructRegex = function (val) {
    var len = val.length;
    var ret = '';

    for (var i = 0; i < len; i++) {
      if (i !== len - 1) {
        ret += val[i] + '|';
      } else {
        ret += val[i];
      }
    }

    return ret;
  };
  /**
   * Returns the replaced value of matching regex and obj mapper.
   *
   * @param {string} value - Specifies the  values to be replaced.
   * @param {RegExp} regex - Specifies the  regex to search.
   * @param {Object} obj - Specifies the  object matcher to be replace value parts.
   * @returns {string} ?
   */


  ParserBase.convertValueParts = function (value, regex, obj) {
    return value.replace(regex, function (str) {
      // eslint-disable-next-line
      return obj[str];
    });
  };
  /**
   * Returns default numbering system object for formatting from cldr data
   *
   * @param {Object} obj ?
   * @returns {NumericObject} ?
   */


  ParserBase.getDefaultNumberingSystem = function (obj) {
    var ret = {};
    ret.obj = getValue('numbers', obj);
    ret.nSystem = getValue('defaultNumberingSystem', ret.obj);
    return ret;
  };
  /**
   * Returns the replaced value of matching regex and obj mapper.
   *
   * @param {Object} curObj ?
   * @param {Object} numberSystem ?
   * @param {boolean} needSymbols ?
   * @param {boolean} blazorMode ?
   * @returns {Object} ?
   */


  ParserBase.getCurrentNumericOptions = function (curObj, numberSystem, needSymbols, blazorMode) {
    var ret = {};
    var cur = this.getDefaultNumberingSystem(curObj);

    if (!isUndefined(cur.nSystem) || blazorMode) {
      var digits = blazorMode ? getValue('obj.mapperDigits', cur) : getValue(cur.nSystem + '._digits', numberSystem);

      if (!isUndefined(digits)) {
        ret.numericPair = this.reverseObject(digits, latnNumberSystem);
        ret.numberParseRegex = new RegExp(this.constructRegex(digits), 'g');
        ret.numericRegex = '[' + digits[0] + '-' + digits[9] + ']';

        if (needSymbols) {
          ret.numericRegex = digits[0] + '-' + digits[9];
          ret.symbolNumberSystem = getValue(blazorMode ? 'numberSymbols' : 'symbols-numberSystem-' + cur.nSystem, cur.obj);
          ret.symbolMatch = this.getSymbolMatch(ret.symbolNumberSystem);
          ret.numberSystem = cur.nSystem;
        }
      }
    }

    return ret;
  };
  /**
   * Returns number mapper object for the provided cldr data
   *
   * @param {Object} curObj ?
   * @param {Object} numberSystem ?
   * @param {boolean} isNumber ?
   * @returns {NumberMapper} ?
   */
  // eslint-disable-next-line


  ParserBase.getNumberMapper = function (curObj, numberSystem, isNumber) {
    var ret = {
      mapper: {}
    };
    var cur = this.getDefaultNumberingSystem(curObj);

    if (!isUndefined(cur.nSystem)) {
      ret.numberSystem = cur.nSystem;
      ret.numberSymbols = getValue('symbols-numberSystem-' + cur.nSystem, cur.obj);
      ret.timeSeparator = getValue('timeSeparator', ret.numberSymbols);
      var digits = getValue(cur.nSystem + '._digits', numberSystem);

      if (!isUndefined(digits)) {
        for (var _i = 0, latnNumberSystem_1 = latnNumberSystem; _i < latnNumberSystem_1.length; _i++) {
          var i = latnNumberSystem_1[_i]; // eslint-disable-next-line

          ret.mapper[i] = digits[i];
        }
      }
    }

    return ret;
  };

  ParserBase.nPair = 'numericPair';
  ParserBase.nRegex = 'numericRegex';
  ParserBase.numberingSystems = defaultNumberingSystem;
  return ParserBase;
}();
/**
 * @private
 */


var blazorCurrencyData = {
  'DJF': 'Fdj',
  'ERN': 'Nfk',
  'ETB': 'Br',
  'NAD': '$',
  'ZAR': 'R',
  'XAF': 'FCFA',
  'GHS': 'GH₵',
  'XDR': 'XDR',
  'AED': 'د.إ.‏',
  'BHD': 'د.ب.‏',
  'DZD': 'د.ج.‏',
  'EGP': 'ج.م.‏',
  'ILS': '₪',
  'IQD': 'د.ع.‏',
  'JOD': 'د.ا.‏',
  'KMF': 'CF',
  'KWD': 'د.ك.‏',
  'LBP': 'ل.ل.‏',
  'LYD': 'د.ل.‏',
  'MAD': 'د.م.‏',
  'MRU': 'أ.م.',
  'OMR': 'ر.ع.‏',
  'QAR': 'ر.ق.‏',
  'SAR': 'ر.س.‏',
  'SDG': 'ج.س.',
  'SOS': 'S',
  'SSP': '£',
  'SYP': 'ل.س.‏',
  'TND': 'د.ت.‏',
  'YER': 'ر.ي.‏',
  'CLP': '$',
  'INR': '₹',
  'TZS': 'TSh',
  'EUR': '€',
  'AZN': '₼',
  'RUB': '₽',
  'BYN': 'Br',
  'ZMW': 'K',
  'BGN': 'лв.',
  'NGN': '₦',
  'XOF': 'CFA',
  'BDT': '৳',
  'CNY': '¥',
  'BAM': 'КМ',
  'UGX': 'USh',
  'USD': '$',
  'CZK': 'Kč',
  'GBP': '£',
  'DKK': 'kr.',
  'KES': 'Ksh',
  'CHF': 'CHF',
  'MVR': 'ރ.',
  'BTN': 'Nu.',
  'XCD': 'EC$',
  'AUD': '$',
  'BBD': '$',
  'BIF': 'FBu',
  'BMD': '$',
  'BSD': '$',
  'BWP': 'P',
  'BZD': '$',
  'CAD': '$',
  'NZD': '$',
  'FJD': '$',
  'FKP': '£',
  'GIP': '£',
  'GMD': 'D',
  'GYD': '$',
  'HKD': '$',
  'IDR': 'Rp',
  'JMD': '$',
  'KYD': '$',
  'LRD': '$',
  'MGA': 'Ar',
  'MOP': 'MOP$',
  'MUR': 'Rs',
  'MWK': 'MK',
  'MYR': 'RM',
  'PGK': 'K',
  'PHP': '₱',
  'PKR': 'Rs',
  'RWF': 'RF',
  'SBD': '$',
  'SCR': 'SR',
  'SEK': 'kr',
  'SGD': '$',
  'SHP': '£',
  'SLL': 'Le',
  'ANG': 'NAf.',
  'SZL': 'E',
  'TOP': 'T$',
  'TTD': '$',
  'VUV': 'VT',
  'WST': 'WS$',
  'ARS': '$',
  'BOB': 'Bs',
  'BRL': 'R$',
  'COP': '$',
  'CRC': '₡',
  'CUP': '$',
  'DOP': '$',
  'GTQ': 'Q',
  'HNL': 'L',
  'MXN': '$',
  'NIO': 'C$',
  'PAB': 'B/.',
  'PEN': 'S/',
  'PYG': '₲',
  'UYU': '$',
  'VES': 'Bs.S',
  'IRR': 'ريال',
  'GNF': 'FG',
  'CDF': 'FC',
  'HTG': 'G',
  'XPF': 'FCFP',
  'HRK': 'kn',
  'HUF': 'Ft',
  'AMD': '֏',
  'ISK': 'kr',
  'JPY': '¥',
  'GEL': '₾',
  'CVE': '​',
  'KZT': '₸',
  'KHR': '៛',
  'KPW': '₩',
  'KRW': '₩',
  'KGS': 'сом',
  'AOA': 'Kz',
  'LAK': '₭',
  'MZN': 'MTn',
  'MKD': 'ден',
  'MNT': '₮',
  'BND': '$',
  'MMK': 'K',
  'NOK': 'kr',
  'NPR': 'रु',
  'AWG': 'Afl.',
  'SRD': '$',
  'PLN': 'zł',
  'AFN': '؋',
  'STN': 'Db',
  'MDL': 'L',
  'RON': 'lei',
  'UAH': '₴',
  'LKR': 'රු.',
  'ALL': 'Lekë',
  'RSD': 'дин.',
  'TJS': 'смн',
  'THB': '฿',
  'TMT': 'm.',
  'TRY': '₺',
  'UZS': 'сўм',
  'VND': '₫',
  'TWD': 'NT$'
};
/**
 *
 * @param {string} currencyCode ?
 * @returns {string} ?
 */

function getBlazorCurrencySymbol(currencyCode) {
  return getValue(currencyCode || '', blazorCurrencyData);
}
/***
 * Hijri parser
 */
// eslint-disable-next-line


var HijriParser;

(function (HijriParser) {
  var dateCorrection = [28607, 28636, 28665, 28695, 28724, 28754, 28783, 28813, 28843, 28872, 28901, 28931, 28960, 28990, 29019, 29049, 29078, 29108, 29137, 29167, 29196, 29226, 29255, 29285, 29315, 29345, 29375, 29404, 29434, 29463, 29492, 29522, 29551, 29580, 29610, 29640, 29669, 29699, 29729, 29759, 29788, 29818, 29847, 29876, 29906, 29935, 29964, 29994, 30023, 30053, 30082, 30112, 30141, 30171, 30200, 30230, 30259, 30289, 30318, 30348, 30378, 30408, 30437, 30467, 30496, 30526, 30555, 30585, 30614, 30644, 30673, 30703, 30732, 30762, 30791, 30821, 30850, 30880, 30909, 30939, 30968, 30998, 31027, 31057, 31086, 31116, 31145, 31175, 31204, 31234, 31263, 31293, 31322, 31352, 31381, 31411, 31441, 31471, 31500, 31530, 31559, 31589, 31618, 31648, 31676, 31706, 31736, 31766, 31795, 31825, 31854, 31884, 31913, 31943, 31972, 32002, 32031, 32061, 32090, 32120, 32150, 32180, 32209, 32239, 32268, 32298, 32327, 32357, 32386, 32416, 32445, 32475, 32504, 32534, 32563, 32593, 32622, 32652, 32681, 32711, 32740, 32770, 32799, 32829, 32858, 32888, 32917, 32947, 32976, 33006, 33035, 33065, 33094, 33124, 33153, 33183, 33213, 33243, 33272, 33302, 33331, 33361, 33390, 33420, 33450, 33479, 33509, 33539, 33568, 33598, 33627, 33657, 33686, 33716, 33745, 33775, 33804, 33834, 33863, 33893, 33922, 33952, 33981, 34011, 34040, 34069, 34099, 34128, 34158, 34187, 34217, 34247, 34277, 34306, 34336, 34365, 34395, 34424, 34454, 34483, 34512, 34542, 34571, 34601, 34631, 34660, 34690, 34719, 34749, 34778, 34808, 34837, 34867, 34896, 34926, 34955, 34985, 35015, 35044, 35074, 35103, 35133, 35162, 35192, 35222, 35251, 35280, 35310, 35340, 35370, 35399, 35429, 35458, 35488, 35517, 35547, 35576, 35605, 35635, 35665, 35694, 35723, 35753, 35782, 35811, 35841, 35871, 35901, 35930, 35960, 35989, 36019, 36048, 36078, 36107, 36136, 36166, 36195, 36225, 36254, 36284, 36314, 36343, 36373, 36403, 36433, 36462, 36492, 36521, 36551, 36580, 36610, 36639, 36669, 36698, 36728, 36757, 36786, 36816, 36845, 36875, 36904, 36934, 36963, 36993, 37022, 37052, 37081, 37111, 37141, 37170, 37200, 37229, 37259, 37288, 37318, 37347, 37377, 37406, 37436, 37465, 37495, 37524, 37554, 37584, 37613, 37643, 37672, 37701, 37731, 37760, 37790, 37819, 37849, 37878, 37908, 37938, 37967, 37997, 38027, 38056, 38085, 38115, 38144, 38174, 38203, 38233, 38262, 38292, 38322, 38351, 38381, 38410, 38440, 38469, 38499, 38528, 38558, 38587, 38617, 38646, 38676, 38705, 38735, 38764, 38794, 38823, 38853, 38882, 38912, 38941, 38971, 39001, 39030, 39059, 39089, 39118, 39148, 39178, 39208, 39237, 39267, 39297, 39326, 39355, 39385, 39414, 39444, 39473, 39503, 39532, 39562, 39592, 39621, 39650, 39680, 39709, 39739, 39768, 39798, 39827, 39857, 39886, 39916, 39946, 39975, 40005, 40035, 40064, 40094, 40123, 40153, 40182, 40212, 40241, 40271, 40300, 40330, 40359, 40389, 40418, 40448, 40477, 40507, 40536, 40566, 40595, 40625, 40655, 40685, 40714, 40744, 40773, 40803, 40832, 40862, 40892, 40921, 40951, 40980, 41009, 41039, 41068, 41098, 41127, 41157, 41186, 41216, 41245, 41275, 41304, 41334, 41364, 41393, 41422, 41452, 41481, 41511, 41540, 41570, 41599, 41629, 41658, 41688, 41718, 41748, 41777, 41807, 41836, 41865, 41894, 41924, 41953, 41983, 42012, 42042, 42072, 42102, 42131, 42161, 42190, 42220, 42249, 42279, 42308, 42337, 42367, 42397, 42426, 42456, 42485, 42515, 42545, 42574, 42604, 42633, 42662, 42692, 42721, 42751, 42780, 42810, 42839, 42869, 42899, 42929, 42958, 42988, 43017, 43046, 43076, 43105, 43135, 43164, 43194, 43223, 43253, 43283, 43312, 43342, 43371, 43401, 43430, 43460, 43489, 43519, 43548, 43578, 43607, 43637, 43666, 43696, 43726, 43755, 43785, 43814, 43844, 43873, 43903, 43932, 43962, 43991, 44021, 44050, 44080, 44109, 44139, 44169, 44198, 44228, 44258, 44287, 44317, 44346, 44375, 44405, 44434, 44464, 44493, 44523, 44553, 44582, 44612, 44641, 44671, 44700, 44730, 44759, 44788, 44818, 44847, 44877, 44906, 44936, 44966, 44996, 45025, 45055, 45084, 45114, 45143, 45172, 45202, 45231, 45261, 45290, 45320, 45350, 45380, 45409, 45439, 45468, 45498, 45527, 45556, 45586, 45615, 45644, 45674, 45704, 45733, 45763, 45793, 45823, 45852, 45882, 45911, 45940, 45970, 45999, 46028, 46058, 46088, 46117, 46147, 46177, 46206, 46236, 46265, 46295, 46324, 46354, 46383, 46413, 46442, 46472, 46501, 46531, 46560, 46590, 46620, 46649, 46679, 46708, 46738, 46767, 46797, 46826, 46856, 46885, 46915, 46944, 46974, 47003, 47033, 47063, 47092, 47122, 47151, 47181, 47210, 47240, 47269, 47298, 47328, 47357, 47387, 47417, 47446, 47476, 47506, 47535, 47565, 47594, 47624, 47653, 47682, 47712, 47741, 47771, 47800, 47830, 47860, 47890, 47919, 47949, 47978, 48008, 48037, 48066, 48096, 48125, 48155, 48184, 48214, 48244, 48273, 48303, 48333, 48362, 48392, 48421, 48450, 48480, 48509, 48538, 48568, 48598, 48627, 48657, 48687, 48717, 48746, 48776, 48805, 48834, 48864, 48893, 48922, 48952, 48982, 49011, 49041, 49071, 49100, 49130, 49160, 49189, 49218, 49248, 49277, 49306, 49336, 49365, 49395, 49425, 49455, 49484, 49514, 49543, 49573, 49602, 49632, 49661, 49690, 49720, 49749, 49779, 49809, 49838, 49868, 49898, 49927, 49957, 49986, 50016, 50045, 50075, 50104, 50133, 50163, 50192, 50222, 50252, 50281, 50311, 50340, 50370, 50400, 50429, 50459, 50488, 50518, 50547, 50576, 50606, 50635, 50665, 50694, 50724, 50754, 50784, 50813, 50843, 50872, 50902, 50931, 50960, 50990, 51019, 51049, 51078, 51108, 51138, 51167, 51197, 51227, 51256, 51286, 51315, 51345, 51374, 51403, 51433, 51462, 51492, 51522, 51552, 51582, 51611, 51641, 51670, 51699, 51729, 51758, 51787, 51816, 51846, 51876, 51906, 51936, 51965, 51995, 52025, 52054, 52083, 52113, 52142, 52171, 52200, 52230, 52260, 52290, 52319, 52349, 52379, 52408, 52438, 52467, 52497, 52526, 52555, 52585, 52614, 52644, 52673, 52703, 52733, 52762, 52792, 52822, 52851, 52881, 52910, 52939, 52969, 52998, 53028, 53057, 53087, 53116, 53146, 53176, 53205, 53235, 53264, 53294, 53324, 53353, 53383, 53412, 53441, 53471, 53500, 53530, 53559, 53589, 53619, 53648, 53678, 53708, 53737, 53767, 53796, 53825, 53855, 53884, 53913, 53943, 53973, 54003, 54032, 54062, 54092, 54121, 54151, 54180, 54209, 54239, 54268, 54297, 54327, 54357, 54387, 54416, 54446, 54476, 54505, 54535, 54564, 54593, 54623, 54652, 54681, 54711, 54741, 54770, 54800, 54830, 54859, 54889, 54919, 54948, 54977, 55007, 55036, 55066, 55095, 55125, 55154, 55184, 55213, 55243, 55273, 55302, 55332, 55361, 55391, 55420, 55450, 55479, 55508, 55538, 55567, 55597, 55627, 55657, 55686, 55716, 55745, 55775, 55804, 55834, 55863, 55892, 55922, 55951, 55981, 56011, 56040, 56070, 56100, 56129, 56159, 56188, 56218, 56247, 56276, 56306, 56335, 56365, 56394, 56424, 56454, 56483, 56513, 56543, 56572, 56601, 56631, 56660, 56690, 56719, 56749, 56778, 56808, 56837, 56867, 56897, 56926, 56956, 56985, 57015, 57044, 57074, 57103, 57133, 57162, 57192, 57221, 57251, 57280, 57310, 57340, 57369, 57399, 57429, 57458, 57487, 57517, 57546, 57576, 57605, 57634, 57664, 57694, 57723, 57753, 57783, 57813, 57842, 57871, 57901, 57930, 57959, 57989, 58018, 58048, 58077, 58107, 58137, 58167, 58196, 58226, 58255, 58285, 58314, 58343, 58373, 58402, 58432, 58461, 58491, 58521, 58551, 58580, 58610, 58639, 58669, 58698, 58727, 58757, 58786, 58816, 58845, 58875, 58905, 58934, 58964, 58994, 59023, 59053, 59082, 59111, 59141, 59170, 59200, 59229, 59259, 59288, 59318, 59348, 59377, 59407, 59436, 59466, 59495, 59525, 59554, 59584, 59613, 59643, 59672, 59702, 59731, 59761, 59791, 59820, 59850, 59879, 59909, 59939, 59968, 59997, 60027, 60056, 60086, 60115, 60145, 60174, 60204, 60234, 60264, 60293, 60323, 60352, 60381, 60411, 60440, 60469, 60499, 60528, 60558, 60588, 60618, 60648, 60677, 60707, 60736, 60765, 60795, 60824, 60853, 60883, 60912, 60942, 60972, 61002, 61031, 61061, 61090, 61120, 61149, 61179, 61208, 61237, 61267, 61296, 61326, 61356, 61385, 61415, 61445, 61474, 61504, 61533, 61563, 61592, 61621, 61651, 61680, 61710, 61739, 61769, 61799, 61828, 61858, 61888, 61917, 61947, 61976, 62006, 62035, 62064, 62094, 62123, 62153, 62182, 62212, 62242, 62271, 62301, 62331, 62360, 62390, 62419, 62448, 62478, 62507, 62537, 62566, 62596, 62625, 62655, 62685, 62715, 62744, 62774, 62803, 62832, 62862, 62891, 62921, 62950, 62980, 63009, 63039, 63069, 63099, 63128, 63157, 63187, 63216, 63246, 63275, 63305, 63334, 63363, 63393, 63423, 63453, 63482, 63512, 63541, 63571, 63600, 63630, 63659, 63689, 63718, 63747, 63777, 63807, 63836, 63866, 63895, 63925, 63955, 63984, 64014, 64043, 64073, 64102, 64131, 64161, 64190, 64220, 64249, 64279, 64309, 64339, 64368, 64398, 64427, 64457, 64486, 64515, 64545, 64574, 64603, 64633, 64663, 64692, 64722, 64752, 64782, 64811, 64841, 64870, 64899, 64929, 64958, 64987, 65017, 65047, 65076, 65106, 65136, 65166, 65195, 65225, 65254, 65283, 65313, 65342, 65371, 65401, 65431, 65460, 65490, 65520, 65549, 65579, 65608, 65638, 65667, 65697, 65726, 65755, 65785, 65815, 65844, 65874, 65903, 65933, 65963, 65992, 66022, 66051, 66081, 66110, 66140, 66169, 66199, 66228, 66258, 66287, 66317, 66346, 66376, 66405, 66435, 66465, 66494, 66524, 66553, 66583, 66612, 66641, 66671, 66700, 66730, 66760, 66789, 66819, 66849, 66878, 66908, 66937, 66967, 66996, 67025, 67055, 67084, 67114, 67143, 67173, 67203, 67233, 67262, 67292, 67321, 67351, 67380, 67409, 67439, 67468, 67497, 67527, 67557, 67587, 67617, 67646, 67676, 67705, 67735, 67764, 67793, 67823, 67852, 67882, 67911, 67941, 67971, 68000, 68030, 68060, 68089, 68119, 68148, 68177, 68207, 68236, 68266, 68295, 68325, 68354, 68384, 68414, 68443, 68473, 68502, 68532, 68561, 68591, 68620, 68650, 68679, 68708, 68738, 68768, 68797, 68827, 68857, 68886, 68916, 68946, 68975, 69004, 69034, 69063, 69092, 69122, 69152, 69181, 69211, 69240, 69270, 69300, 69330, 69359, 69388, 69418, 69447, 69476, 69506, 69535, 69565, 69595, 69624, 69654, 69684, 69713, 69743, 69772, 69802, 69831, 69861, 69890, 69919, 69949, 69978, 70008, 70038, 70067, 70097, 70126, 70156, 70186, 70215, 70245, 70274, 70303, 70333, 70362, 70392, 70421, 70451, 70481, 70510, 70540, 70570, 70599, 70629, 70658, 70687, 70717, 70746, 70776, 70805, 70835, 70864, 70894, 70924, 70954, 70983, 71013, 71042, 71071, 71101, 71130, 71159, 71189, 71218, 71248, 71278, 71308, 71337, 71367, 71397, 71426, 71455, 71485, 71514, 71543, 71573, 71602, 71632, 71662, 71691, 71721, 71751, 71781, 71810, 71839, 71869, 71898, 71927, 71957, 71986, 72016, 72046, 72075, 72105, 72135, 72164, 72194, 72223, 72253, 72282, 72311, 72341, 72370, 72400, 72429, 72459, 72489, 72518, 72548, 72577, 72607, 72637, 72666, 72695, 72725, 72754, 72784, 72813, 72843, 72872, 72902, 72931, 72961, 72991, 73020, 73050, 73080, 73109, 73139, 73168, 73197, 73227, 73256, 73286, 73315, 73345, 73375, 73404, 73434, 73464, 73493, 73523, 73552, 73581, 73611, 73640, 73669, 73699, 73729, 73758, 73788, 73818, 73848, 73877, 73907, 73936, 73965, 73995, 74024, 74053, 74083, 74113, 74142, 74172, 74202, 74231, 74261, 74291, 74320, 74349, 74379, 74408, 74437, 74467, 74497, 74526, 74556, 74586, 74615, 74645, 74675, 74704, 74733, 74763, 74792, 74822, 74851, 74881, 74910, 74940, 74969, 74999, 75029, 75058, 75088, 75117, 75147, 75176, 75206, 75235, 75264, 75294, 75323, 75353, 75383, 75412, 75442, 75472, 75501, 75531, 75560, 75590, 75619, 75648, 75678, 75707, 75737, 75766, 75796, 75826, 75856, 75885, 75915, 75944, 75974, 76003, 76032, 76062, 76091, 76121, 76150, 76180, 76210, 76239, 76269, 76299, 76328, 76358, 76387, 76416, 76446, 76475, 76505, 76534, 76564, 76593, 76623, 76653, 76682, 76712, 76741, 76771, 76801, 76830, 76859, 76889, 76918, 76948, 76977, 77007, 77036, 77066, 77096, 77125, 77155, 77185, 77214, 77243, 77273, 77302, 77332, 77361, 77390, 77420, 77450, 77479, 77509, 77539, 77569, 77598, 77627, 77657, 77686, 77715, 77745, 77774, 77804, 77833, 77863, 77893, 77923, 77952, 77982, 78011, 78041, 78070, 78099, 78129, 78158, 78188, 78217, 78247, 78277, 78307, 78336, 78366, 78395, 78425, 78454, 78483, 78513, 78542, 78572, 78601, 78631, 78661, 78690, 78720, 78750, 78779, 78808, 78838, 78867, 78897, 78926, 78956, 78985, 79015, 79044, 79074, 79104, 79133, 79163, 79192, 79222, 79251, 79281, 79310, 79340, 79369, 79399, 79428, 79458, 79487, 79517, 79546, 79576, 79606, 79635, 79665, 79695, 79724, 79753, 79783, 79812, 79841, 79871, 79900, 79930, 79960, 79990];
  /**
   *
   * @param {Date} gDate ?
   * @returns {Object} ?
   */

  function getHijriDate(gDate) {
    var day = gDate.getDate();
    var month = gDate.getMonth();
    var year = gDate.getFullYear();
    var tMonth = month + 1;
    var tYear = year;

    if (tMonth < 3) {
      tYear -= 1;
      tMonth += 12;
    }

    var yPrefix = Math.floor(tYear / 100.);
    var julilanOffset = yPrefix - Math.floor(yPrefix / 4.) - 2;
    var julianNumber = Math.floor(365.25 * (tYear + 4716)) + Math.floor(30.6001 * (tMonth + 1)) + day - julilanOffset - 1524;
    yPrefix = Math.floor((julianNumber - 1867216.25) / 36524.25);
    julilanOffset = yPrefix - Math.floor(yPrefix / 4.) + 1;
    var b = julianNumber + julilanOffset + 1524;
    var c = Math.floor((b - 122.1) / 365.25);
    var d = Math.floor(365.25 * c);
    var tempMonth = Math.floor((b - d) / 30.6001);
    day = b - d - Math.floor(30.6001 * tempMonth);
    month = Math.floor((b - d) / 20.6001);

    if (month > 13) {
      c += 1;
      month -= 12;
    }

    month -= 1;
    year = c - 4716;
    var modifiedJulianDate = julianNumber - 2400000; // date calculation for year after 2077

    var iyear = 10631. / 30.;
    var z = julianNumber - 1948084;
    var cyc = Math.floor(z / 10631.);
    z = z - 10631 * cyc;
    var j = Math.floor((z - 0.1335) / iyear);
    var iy = 30 * cyc + j;
    z = z - Math.floor(j * iyear + 0.1335);
    var im = Math.floor((z + 28.5001) / 29.5);
    /* istanbul ignore next */

    if (im === 13) {
      im = 12;
    }

    var tempDay = z - Math.floor(29.5001 * im - 29);
    var i = 0;

    for (; i < dateCorrection.length; i++) {
      if (dateCorrection[i] > modifiedJulianDate) {
        break;
      }
    }

    var iln = i + 16260;
    var ii = Math.floor((iln - 1) / 12);
    var hYear = ii + 1;
    var hmonth = iln - 12 * ii;
    var hDate = modifiedJulianDate - dateCorrection[i - 1] + 1;

    if ((hDate + '').length > 2) {
      hDate = tempDay;
      hmonth = im;
      hYear = iy;
    }

    return {
      year: hYear,
      month: hmonth,
      date: hDate
    };
  }

  HijriParser.getHijriDate = getHijriDate;
  /**
   *
   * @param {number} year ?
   * @param {number} month ?
   * @param {number} day ?
   * @returns {Date} ?
   */

  function toGregorian(year, month, day) {
    var iy = year;
    var im = month;
    var id = day;
    var ii = iy - 1;
    var iln = ii * 12 + 1 + (im - 1);
    var i = iln - 16260;
    var mcjdn = id + dateCorrection[i - 1] - 1;
    var julianDate = mcjdn + 2400000;
    var z = Math.floor(julianDate + 0.5);
    var a = Math.floor((z - 1867216.25) / 36524.25);
    a = z + 1 + a - Math.floor(a / 4);
    var b = a + 1524;
    var c = Math.floor((b - 122.1) / 365.25);
    var d = Math.floor(365.25 * c);
    var e = Math.floor((b - d) / 30.6001);
    var gDay = b - d - Math.floor(e * 30.6001);
    var gMonth = e - (e > 13.5 ? 13 : 1);
    var gYear = c - (gMonth > 2.5 ? 4716 : 4715);
    /* istanbul ignore next */

    if (gYear <= 0) {
      gMonth--;
    } // No year zero


    return new Date(gYear + '/' + gMonth + '/' + gDay);
  }

  HijriParser.toGregorian = toGregorian;
})(HijriParser || (HijriParser = {}));

var abbreviateRegexGlobal = /\/MMMMM|MMMM|MMM|a|LLLL|LLL|EEEEE|EEEE|E|K|cccc|ccc|WW|W|G+|z+/gi;
var standalone = 'stand-alone';
var weekdayKey = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];
var timeSetter = {
  m: 'getMinutes',
  h: 'getHours',
  H: 'getHours',
  s: 'getSeconds',
  d: 'getDate',
  f: 'getMilliseconds'
};
var datePartMatcher = {
  'M': 'month',
  'd': 'day',
  'E': 'weekday',
  'c': 'weekday',
  'y': 'year',
  'm': 'minute',
  'h': 'hour',
  'H': 'hour',
  's': 'second',
  'L': 'month',
  'a': 'designator',
  'z': 'timeZone',
  'Z': 'timeZone',
  'G': 'era',
  'f': 'milliseconds'
};
var timeSeparator = 'timeSeparator';
/* tslint:disable no-any */

/**
 * Date Format is a framework provides support for date formatting.
 *
 * @private
 */

var DateFormat =
/** @__PURE__ @class */
function () {
  function DateFormat() {}
  /**
   * Returns the formatter function for given skeleton.
   *
   * @param {string} culture -  Specifies the culture name to be which formatting.
   * @param {DateFormatOptions} option - Specific the format in which date  will format.
   * @param {Object} cldr - Specifies the global cldr data collection.
   * @returns {Function} ?
   */


  DateFormat.dateFormat = function (culture, option, cldr) {
    var _this = this;

    var dependable = IntlBase.getDependables(cldr, culture, option.calendar);
    var numObject = getValue('parserObject.numbers', dependable);
    var dateObject = dependable.dateObject;
    var formatOptions = {
      isIslamic: IntlBase.islamicRegex.test(option.calendar)
    };

    if (isBlazor() && option.isServerRendered) {
      option = IntlBase.compareBlazorDateFormats(option, culture);
    }

    var resPattern = option.format || IntlBase.getResultantPattern(option.skeleton, dependable.dateObject, option.type, false, isBlazor() ? culture : '');
    formatOptions.dateSeperator = isBlazor() ? getValue('dateSeperator', dateObject) : IntlBase.getDateSeparator(dependable.dateObject);

    if (isUndefined(resPattern)) {
      throwError('Format options or type given must be invalid');
    } else {
      resPattern = IntlBase.ConvertDateToWeekFormat(resPattern);

      if (isBlazor()) {
        resPattern = resPattern.replace(/tt/, 'a');
      }

      formatOptions.pattern = resPattern;
      formatOptions.numMapper = isBlazor() ? extend({}, numObject) : ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr));
      var patternMatch = resPattern.match(abbreviateRegexGlobal) || [];

      for (var _i = 0, patternMatch_1 = patternMatch; _i < patternMatch_1.length; _i++) {
        var str = patternMatch_1[_i];
        var len = str.length;
        var char = str[0];

        if (char === 'K') {
          char = 'h';
        }

        switch (char) {
          case 'E':
          case 'c':
            if (isBlazor()) {
              // eslint-disable-next-line
              formatOptions.weekday = getValue('days.' + IntlBase.monthIndex[len], dateObject);
            } else {
              // eslint-disable-next-line
              formatOptions.weekday = dependable.dateObject[IntlBase.days][standalone][IntlBase.monthIndex[len]];
            }

            break;

          case 'M':
          case 'L':
            if (isBlazor()) {
              // eslint-disable-next-line
              formatOptions.month = getValue('months.' + IntlBase.monthIndex[len], dateObject);
            } else {
              // eslint-disable-next-line
              formatOptions.month = dependable.dateObject[IntlBase.month][standalone][IntlBase.monthIndex[len]];
            }

            break;

          case 'a':
            formatOptions.designator = isBlazor() ? getValue('dayPeriods', dateObject) : getValue('dayPeriods.format.wide', dateObject);
            break;

          case 'G':
            // eslint-disable-next-line
            var eText = len <= 3 ? 'eraAbbr' : len === 4 ? 'eraNames' : 'eraNarrow';
            formatOptions.era = isBlazor() ? getValue('eras', dateObject) : getValue('eras.' + eText, dependable.dateObject);
            break;

          case 'z':
            formatOptions.timeZone = getValue('dates.timeZoneNames', dependable.parserObject);
            break;
        }
      }
    }

    return function (value) {
      if (isNaN(value.getDate())) {
        return null;
      }

      return _this.intDateFormatter(value, formatOptions);
    };
  };
  /**
   * Returns formatted date string based on options passed.
   *
   * @param {Date} value ?
   * @param {FormatOptions} options ?
   * @returns {string} ?
   */


  DateFormat.intDateFormatter = function (value, options) {
    var pattern = options.pattern;
    var ret = '';
    var matches = pattern.match(IntlBase.dateParseRegex);
    var dObject = this.getCurrentDateValue(value, options.isIslamic);

    for (var _i = 0, matches_1 = matches; _i < matches_1.length; _i++) {
      var match = matches_1[_i];
      var length_1 = match.length;
      var char = match[0];

      if (char === 'K') {
        char = 'h';
      }

      var curval = void 0;
      var curvalstr = '';
      var isNumber = void 0;
      var processNumber = void 0;
      var curstr = '';

      switch (char) {
        case 'M':
        case 'L':
          curval = dObject.month;

          if (length_1 > 2) {
            // eslint-disable-next-line
            ret += options.month[curval];
          } else {
            isNumber = true;
          }

          break;

        case 'E':
        case 'c':
          // eslint-disable-next-line
          ret += options.weekday[weekdayKey[value.getDay()]];
          break;

        case 'H':
        case 'h':
        case 'm':
        case 's':
        case 'd':
        case 'f':
          isNumber = true;

          if (char === 'd') {
            curval = dObject.date;
          } else if (char === 'f') {
            isNumber = false;
            processNumber = true; // eslint-disable-next-line

            curvalstr = value[timeSetter[char]]().toString();
            curvalstr = curvalstr.substring(0, length_1);
            var curlength = curvalstr.length;

            if (length_1 !== curlength) {
              if (length_1 > 3) {
                continue;
              }

              for (var i = 0; i < length_1 - curlength; i++) {
                curvalstr = '0' + curvalstr.toString();
              }
            }

            curstr += curvalstr;
          } else {
            // eslint-disable-next-line
            curval = value[timeSetter[char]]();
          }

          if (char === 'h') {
            curval = curval % 12 || 12;
          }

          break;

        case 'y':
          processNumber = true;
          curstr += dObject.year;

          if (length_1 === 2) {
            curstr = curstr.substr(curstr.length - 2);
          }

          break;

        case 'a':
          // eslint-disable-next-line
          var desig = value.getHours() < 12 ? 'am' : 'pm'; // eslint-disable-next-line

          ret += options.designator[desig];
          break;

        case 'G':
          // eslint-disable-next-line
          var dec = value.getFullYear() < 0 ? 0 : 1; // eslint-disable-next-line

          var retu = options.era[dec];

          if (isNullOrUndefined(retu)) {
            // eslint-disable-next-line
            retu = options.era[dec ? 0 : 1];
          }

          ret += retu || '';
          break;

        case '\'':
          ret += match === '\'\'' ? '\'' : match.replace(/'/g, '');
          break;

        case 'z':
          // eslint-disable-next-line
          var timezone = value.getTimezoneOffset(); // eslint-disable-next-line

          var pattern_1 = length_1 < 4 ? '+H;-H' : options.timeZone.hourFormat;
          pattern_1 = pattern_1.replace(/:/g, options.numMapper.timeSeparator);

          if (timezone === 0) {
            ret += options.timeZone.gmtZeroFormat;
          } else {
            processNumber = true;
            curstr = this.getTimeZoneValue(timezone, pattern_1);
          }

          curstr = options.timeZone.gmtFormat.replace(/\{0\}/, curstr);
          break;

        case ':':
          // eslint-disable-next-line
          ret += options.numMapper.numberSymbols[timeSeparator];
          break;

        case '/':
          ret += options.dateSeperator;
          break;

        case 'W':
          isNumber = true;
          curval = IntlBase.getWeekOfYear(value);
          break;

        default:
          ret += match;
      }

      if (isNumber) {
        processNumber = true;
        curstr = this.checkTwodigitNumber(curval, length_1);
      }

      if (processNumber) {
        ret += ParserBase.convertValueParts(curstr, IntlBase.latnParseRegex, options.numMapper.mapper);
      }
    }

    return ret;
  };

  DateFormat.getCurrentDateValue = function (value, isIslamic) {
    if (isIslamic) {
      return HijriParser.getHijriDate(value);
    }

    return {
      year: value.getFullYear(),
      month: value.getMonth() + 1,
      date: value.getDate()
    };
  };
  /**
   * Returns two digit numbers for given value and length
   *
   * @param {number} val ?
   * @param {number} len ?
   * @returns {string} ?
   */


  DateFormat.checkTwodigitNumber = function (val, len) {
    var ret = val + '';

    if (len === 2 && ret.length !== 2) {
      return '0' + ret;
    }

    return ret;
  };
  /**
   * Returns the value of the Time Zone.
   *
   * @param {number} tVal ?
   * @param {string} pattern ?
   * @returns {string} ?
   * @private
   */


  DateFormat.getTimeZoneValue = function (tVal, pattern) {
    var _this = this;

    var splt = pattern.split(';');
    var curPattern = splt[tVal > 0 ? 1 : 0];
    var no = Math.abs(tVal);
    return curPattern = curPattern.replace(/HH?|mm/g, function (str) {
      var len = str.length;
      var ishour = str.indexOf('H') !== -1;
      return _this.checkTwodigitNumber(Math.floor(ishour ? no / 60 : no % 60), len);
    });
  };

  return DateFormat;
}();

var errorText = {
  'ms': 'minimumSignificantDigits',
  'ls': 'maximumSignificantDigits',
  'mf': 'minimumFractionDigits',
  'lf': 'maximumFractionDigits'
};
var percentSign = 'percentSign';
var minusSign = 'minusSign';
var mapper$1 = ['infinity', 'nan', 'group', 'decimal', 'exponential'];
/**
 * Module for number formatting.
 *
 * @private
 */

var NumberFormat =
/** @__PURE__ @class */
function () {
  function NumberFormat() {}
  /**
   * Returns the formatter function for given skeleton.
   *
   * @param {string} culture -  Specifies the culture name to be which formatting.
   * @param {NumberFormatOptions} option - Specific the format in which number  will format.
   * @param {Object} cldr - Specifies the global cldr data collection.
   * @returns {Function} ?
   */


  NumberFormat.numberFormatter = function (culture, option, cldr) {
    var _this = this;

    var fOptions = extend({}, option);
    var cOptions = {};
    var dOptions = {};
    var symbolPattern;
    var dependable = IntlBase.getDependables(cldr, culture, '', true);
    var numObject = dependable.numericObject;
    dOptions.numberMapper = isBlazor() ? extend({}, numObject) : ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr), true);
    dOptions.currencySymbol = isBlazor() ? getValue('currencySymbol', numObject) : IntlBase.getCurrencySymbol(dependable.numericObject, fOptions.currency || defaultCurrencyCode, option.altSymbol);
    /* eslint-disable  @typescript-eslint/no-explicit-any */

    dOptions.percentSymbol = isBlazor() ? getValue('numberSymbols.percentSign', numObject) : dOptions.numberMapper.numberSymbols[percentSign];
    dOptions.minusSymbol = isBlazor() ? getValue('numberSymbols.minusSign', numObject) : dOptions.numberMapper.numberSymbols[minusSign];
    var symbols = dOptions.numberMapper.numberSymbols;

    if (option.format && !IntlBase.formatRegex.test(option.format)) {
      cOptions = IntlBase.customFormat(option.format, dOptions, dependable.numericObject);
    } else {
      extend(fOptions, IntlBase.getProperNumericSkeleton(option.format || 'N'));
      fOptions.isCurrency = fOptions.type === 'currency';
      fOptions.isPercent = fOptions.type === 'percent';

      if (!isBlazor()) {
        symbolPattern = IntlBase.getSymbolPattern(fOptions.type, dOptions.numberMapper.numberSystem, dependable.numericObject, fOptions.isAccount);
      }

      fOptions.groupOne = this.checkValueRange(fOptions.maximumSignificantDigits, fOptions.minimumSignificantDigits, true);
      this.checkValueRange(fOptions.maximumFractionDigits, fOptions.minimumFractionDigits, false, true);

      if (!isUndefined(fOptions.fractionDigits)) {
        fOptions.minimumFractionDigits = fOptions.maximumFractionDigits = fOptions.fractionDigits;
      }

      if (isUndefined(fOptions.useGrouping)) {
        fOptions.useGrouping = true;
      }

      if (fOptions.isCurrency && !isBlazor()) {
        symbolPattern = symbolPattern.replace(/\u00A4/g, IntlBase.defaultCurrency);
      }

      if (!isBlazor()) {
        var split = symbolPattern.split(';');
        cOptions.nData = IntlBase.getFormatData(split[1] || '-' + split[0], true, dOptions.currencySymbol);
        cOptions.pData = IntlBase.getFormatData(split[0], false, dOptions.currencySymbol);

        if (fOptions.useGrouping) {
          fOptions.groupSeparator = symbols[mapper$1[2]];
          fOptions.groupData = this.getGroupingDetails(split[0]);
        }
      } else {
        cOptions.nData = extend({}, {}, getValue(fOptions.type + 'nData', numObject));
        cOptions.pData = extend({}, {}, getValue(fOptions.type + 'pData', numObject));

        if (fOptions.type === 'currency' && option.currency) {
          IntlBase.replaceBlazorCurrency([cOptions.pData, cOptions.nData], dOptions.currencySymbol, option.currency);
        }
      }

      var minFrac = isUndefined(fOptions.minimumFractionDigits);

      if (minFrac) {
        fOptions.minimumFractionDigits = cOptions.nData.minimumFraction;
      }

      if (isUndefined(fOptions.maximumFractionDigits)) {
        var mval = cOptions.nData.maximumFraction;
        fOptions.maximumFractionDigits = isUndefined(mval) && fOptions.isPercent ? 0 : mval;
      }

      var mfrac = fOptions.minimumFractionDigits;
      var lfrac = fOptions.maximumFractionDigits;

      if (!isUndefined(mfrac) && !isUndefined(lfrac)) {
        if (mfrac > lfrac) {
          fOptions.maximumFractionDigits = mfrac;
        }
      }
    }

    extend(cOptions.nData, fOptions);
    extend(cOptions.pData, fOptions);
    return function (value) {
      if (isNaN(value)) {
        return symbols[mapper$1[1]];
      } else if (!isFinite(value)) {
        return symbols[mapper$1[0]];
      }

      return _this.intNumberFormatter(value, cOptions, dOptions);
    };
  };
  /**
   * Returns grouping details for the pattern provided
   *
   * @param {string} pattern ?
   * @returns {GroupDetails} ?
   */


  NumberFormat.getGroupingDetails = function (pattern) {
    var ret = {};
    var match = pattern.match(IntlBase.negativeDataRegex);

    if (match && match[4]) {
      var pattern_1 = match[4];
      var p = pattern_1.lastIndexOf(',');

      if (p !== -1) {
        var temp = pattern_1.split('.')[0];
        ret.primary = temp.length - p - 1;
        var s = pattern_1.lastIndexOf(',', p - 1);

        if (s !== -1) {
          ret.secondary = p - 1 - s;
        }
      }
    }

    return ret;
  };
  /**
   * Returns if the provided integer range is valid.
   *
   * @param {number} val1 ?
   * @param {number} val2 ?
   * @param {boolean} checkbothExist ?
   * @param {boolean} isFraction ?
   * @returns {boolean} ?
   */


  NumberFormat.checkValueRange = function (val1, val2, checkbothExist, isFraction) {
    var decide = isFraction ? 'f' : 's';
    var dint = 0;
    var str1 = errorText['l' + decide]; // eslint-disable-next-line

    var str2 = errorText['m' + decide];

    if (!isUndefined(val1)) {
      this.checkRange(val1, str1, isFraction);
      dint++;
    }

    if (!isUndefined(val2)) {
      this.checkRange(val2, str2, isFraction);
      dint++;
    }

    if (dint === 2) {
      if (val1 < val2) {
        throwError(str2 + 'specified must be less than the' + str1);
      } else {
        return true;
      }
    } else if (checkbothExist && dint === 1) {
      throwError('Both' + str2 + 'and' + str2 + 'must be present');
    }

    return false;
  };
  /**
   * Check if the provided fraction range is valid
   *
   * @param {number} val ?
   * @param {string} text ?
   * @param {boolean} isFraction ?
   * @returns {void} ?
   */


  NumberFormat.checkRange = function (val, text, isFraction) {
    var range = isFraction ? [0, 20] : [1, 21];

    if (val < range[0] || val > range[1]) {
      throwError(text + 'value must be within the range' + range[0] + 'to' + range[1]);
    }
  };
  /**
   * Returns formatted numeric string for provided formatting options
   *
   * @param {number} value ?
   * @param {base.GenericFormatOptions} fOptions ?
   * @param {CommonOptions} dOptions ?
   * @returns {string} ?
   */


  NumberFormat.intNumberFormatter = function (value, fOptions, dOptions) {
    var curData;

    if (isUndefined(fOptions.nData.type)) {
      return undefined;
    } else {
      if (value < 0) {
        value = value * -1;
        curData = fOptions.nData;
      } else if (value === 0) {
        curData = fOptions.zeroData || fOptions.pData;
      } else {
        curData = fOptions.pData;
      }

      var fValue = '';

      if (curData.isPercent) {
        value = value * 100;
      }

      if (curData.groupOne) {
        fValue = this.processSignificantDigits(value, curData.minimumSignificantDigits, curData.maximumSignificantDigits);
      } else {
        fValue = this.processFraction(value, curData.minimumFractionDigits, curData.maximumFractionDigits);

        if (curData.minimumIntegerDigits) {
          fValue = this.processMinimumIntegers(fValue, curData.minimumIntegerDigits);
        }
      }

      if (curData.type === 'scientific') {
        fValue = value.toExponential(curData.maximumFractionDigits);
        fValue = fValue.replace('e', dOptions.numberMapper.numberSymbols[mapper$1[4]]);
      }

      fValue = fValue.replace('.', dOptions.numberMapper.numberSymbols[mapper$1[3]]);

      if (curData.useGrouping) {
        /* eslint-disable  @typescript-eslint/no-explicit-any */
        fValue = this.groupNumbers(fValue, curData.groupData.primary, curData.groupSeparator || ',', dOptions.numberMapper.numberSymbols[mapper$1[3]] || '.', curData.groupData.secondary);
      }

      fValue = ParserBase.convertValueParts(fValue, IntlBase.latnParseRegex, dOptions.numberMapper.mapper);

      if (curData.nlead === 'N/A') {
        return curData.nlead;
      } else {
        return curData.nlead + fValue + curData.nend;
      }
    }
  };
  /**
   * Returns significant digits processed numeric string
   *
   * @param {number} value ?
   * @param {number} min ?
   * @param {number} max ?
   * @returns {string} ?
   */


  NumberFormat.processSignificantDigits = function (value, min, max) {
    var temp = value + '';
    var tn;
    var length = temp.length;

    if (length < min) {
      return value.toPrecision(min);
    } else {
      temp = value.toPrecision(max);
      tn = +temp;
      return tn + '';
    }
  };
  /**
   * Returns grouped numeric string
   *
   * @param {string} val ?
   * @param {number} level1 ?
   * @param {string} sep ?
   * @param {string} decimalSymbol ?
   * @param {number} level2 ?
   * @returns {string} ?
   */


  NumberFormat.groupNumbers = function (val, level1, sep, decimalSymbol, level2) {
    var flag = !isNullOrUndefined(level2) && level2 !== 0;
    var split = val.split(decimalSymbol);
    var prefix = split[0];
    var length = prefix.length;
    var str = '';

    while (length > level1) {
      str = prefix.slice(length - level1, length) + (str.length ? sep + str : '');
      length -= level1;

      if (flag) {
        level1 = level2;
        flag = false;
      }
    }

    split[0] = prefix.slice(0, length) + (str.length ? sep : '') + str;
    return split.join(decimalSymbol);
  };
  /**
   * Returns fraction processed numeric string
   *
   * @param {number} value ?
   * @param {number} min ?
   * @param {number} max ?
   * @returns {string} ?
   */


  NumberFormat.processFraction = function (value, min, max) {
    var temp = (value + '').split('.')[1];
    var length = temp ? temp.length : 0;

    if (min && length < min) {
      var ret = '';

      if (length === 0) {
        ret = value.toFixed(min);
      } else {
        ret += value;

        for (var j = 0; j < min - length; j++) {
          ret += '0';
        }

        return ret;
      }

      return value.toFixed(min);
    } else if (!isNullOrUndefined(max) && (length > max || max === 0)) {
      return value.toFixed(max);
    }

    return value + '';
  };
  /**
   * Returns integer processed numeric string
   *
   * @param {string} value ?
   * @param {number} min ?
   * @returns {string} ?
   */


  NumberFormat.processMinimumIntegers = function (value, min) {
    var temp = value.split('.');
    var lead = temp[0];
    var len = lead.length;

    if (len < min) {
      for (var i = 0; i < min - len; i++) {
        lead = '0' + lead;
      }

      temp[0] = lead;
    }

    return temp.join('.');
  };

  return NumberFormat;
}();

var standalone$1 = 'stand-alone';
var latnRegex = /^[0-9]*$/;
var timeSetter$1 = {
  minute: 'setMinutes',
  hour: 'setHours',
  second: 'setSeconds',
  day: 'setDate',
  month: 'setMonth',
  milliseconds: 'setMilliseconds'
};
var month = 'months';
/* tslint:disable no-any */

/**
 * Date Parser.
 *
 * @private
 */

var DateParser =
/** @__PURE__ @class */
function () {
  function DateParser() {}
  /**
   * Returns the parser function for given skeleton.
   *
   * @param {string} culture -  Specifies the culture name to be which formatting.
   * @param {DateFormatOptions} option - Specific the format in which string date  will be parsed.
   * @param {Object} cldr - Specifies the global cldr data collection.
   * @returns {Function} ?
   */


  DateParser.dateParser = function (culture, option, cldr) {
    var _this = this;

    var dependable = IntlBase.getDependables(cldr, culture, option.calendar);
    var numOptions = ParserBase.getCurrentNumericOptions(dependable.parserObject, ParserBase.getNumberingSystem(cldr), false, isBlazor());
    var parseOptions = {};

    if (isBlazor() && option.isServerRendered) {
      option = IntlBase.compareBlazorDateFormats(option, culture);
    }

    var resPattern = option.format || IntlBase.getResultantPattern(option.skeleton, dependable.dateObject, option.type, false, isBlazor() ? culture : '');
    var regexString = '';
    var hourOnly;

    if (isUndefined(resPattern)) {
      throwError('Format options or type given must be invalid');
    } else {
      resPattern = IntlBase.ConvertDateToWeekFormat(resPattern);
      parseOptions = {
        isIslamic: IntlBase.islamicRegex.test(option.calendar),
        pattern: resPattern,
        evalposition: {},
        culture: culture
      };
      var patternMatch = resPattern.match(IntlBase.dateParseRegex) || [];
      var length_1 = patternMatch.length;
      var gmtCorrection = 0;
      var zCorrectTemp = 0;
      var isgmtTraversed = false;
      var nRegx = numOptions.numericRegex; // eslint-disable-next-line

      var numMapper = isBlazor() ? dependable.parserObject.numbers : ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr));

      for (var i = 0; i < length_1; i++) {
        var str = patternMatch[i];
        var len = str.length;
        var char = str[0] === 'K' ? 'h' : str[0];
        var isNumber = void 0;
        var canUpdate = void 0; // eslint-disable-next-line

        var charKey = datePartMatcher[char];
        var optional = len === 2 ? '' : '?';

        if (isgmtTraversed) {
          gmtCorrection = zCorrectTemp;
          isgmtTraversed = false;
        }

        switch (char) {
          case 'E':
          case 'c':
            // eslint-disable-next-line
            var weekData = void 0;

            if (isBlazor()) {
              // eslint-disable-next-line
              weekData = getValue('days.' + IntlBase.monthIndex[len], dependable.dateObject);
            } else {
              // eslint-disable-next-line
              weekData = dependable.dateObject[IntlBase.days][standalone$1][IntlBase.monthIndex[len]];
            } // eslint-disable-next-line


            var weekObject = ParserBase.reverseObject(weekData); // tslint:enable

            regexString += '(' + Object.keys(weekObject).join('|') + ')';
            break;

          case 'M':
          case 'L':
          case 'd':
          case 'm':
          case 's':
          case 'h':
          case 'H':
          case 'f':
            canUpdate = true;

            if ((char === 'M' || char === 'L') && len > 2) {
              var monthData = void 0;

              if (isBlazor()) {
                // eslint-disable-next-line
                monthData = getValue('months.' + IntlBase.monthIndex[len], dependable.dateObject);
              } else {
                // eslint-disable-next-line
                monthData = dependable.dateObject[month][standalone$1][IntlBase.monthIndex[len]];
              } // eslint-disable-next-line


              parseOptions[charKey] = ParserBase.reverseObject(monthData); // eslint-disable-next-line

              regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + ')';
            } else if (char === 'f') {
              if (len > 3) {
                continue;
              }

              isNumber = true;
              regexString += '(' + nRegx + nRegx + '?' + nRegx + '?' + ')';
            } else {
              isNumber = true;
              regexString += '(' + nRegx + nRegx + optional + ')';
            }

            if (char === 'h') {
              parseOptions.hour12 = true;
            }

            break;

          case 'W':
            // eslint-disable-next-line
            var opt = len === 1 ? '?' : '';
            regexString += '(' + nRegx + opt + nRegx + ')';
            break;

          case 'y':
            canUpdate = isNumber = true;

            if (len === 2) {
              regexString += '(' + nRegx + nRegx + ')';
            } else {
              regexString += '(' + nRegx + '{' + len + ',})';
            }

            break;

          case 'a':
            canUpdate = true; // eslint-disable-next-line

            var periodValur = isBlazor() ? getValue('dayPeriods', dependable.dateObject) : getValue('dayPeriods.format.wide', dependable.dateObject); // eslint-disable-next-line

            parseOptions[charKey] = ParserBase.reverseObject(periodValur); // eslint-disable-next-line

            regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + ')';
            break;

          case 'G':
            canUpdate = true; // eslint-disable-next-line

            var eText = len <= 3 ? 'eraAbbr' : len === 4 ? 'eraNames' : 'eraNarrow'; // eslint-disable-next-line

            parseOptions[charKey] = ParserBase.reverseObject(isBlazor() ? getValue('eras', dependable.dateObject) : getValue('eras.' + eText, dependable.dateObject)); // eslint-disable-next-line

            regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + '?)';
            break;

          case 'z':
            // eslint-disable-next-line
            var tval = new Date().getTimezoneOffset();
            canUpdate = tval !== 0; // eslint-disable-next-line

            parseOptions[charKey] = getValue('dates.timeZoneNames', dependable.parserObject); // eslint-disable-next-line

            var tzone = parseOptions[charKey];
            hourOnly = len < 4; // eslint-disable-next-line

            var hpattern = hourOnly ? '+H;-H' : tzone.hourFormat;
            hpattern = hpattern.replace(/:/g, numMapper.timeSeparator);
            regexString += '(' + this.parseTimeZoneRegx(hpattern, tzone, nRegx) + ')?';
            isgmtTraversed = true;
            zCorrectTemp = hourOnly ? 6 : 12;
            break;

          case '\'':
            // eslint-disable-next-line
            var iString = str.replace(/'/g, '');
            regexString += '(' + iString + ')?';
            break;

          default:
            regexString += '([\\D])';
            break;
        }

        if (canUpdate) {
          parseOptions.evalposition[charKey] = {
            isNumber: isNumber,
            pos: i + 1 + gmtCorrection,
            hourOnly: hourOnly
          };
        }

        if (i === length_1 - 1 && !isNullOrUndefined(regexString)) {
          parseOptions.parserRegex = new RegExp('^' + regexString + '$', 'i');
        }
      }
    }

    return function (value) {
      var parsedDateParts = _this.internalDateParse(value, parseOptions, numOptions);

      if (isNullOrUndefined(parsedDateParts) || !Object.keys(parsedDateParts).length) {
        return null;
      }

      if (parseOptions.isIslamic) {
        var dobj = {};
        var tYear = parsedDateParts.year;
        var tDate = parsedDateParts.day;
        var tMonth = parsedDateParts.month;
        var ystrig = tYear ? tYear + '' : '';
        var is2DigitYear = ystrig.length === 2;

        if (!tYear || !tMonth || !tDate || is2DigitYear) {
          dobj = HijriParser.getHijriDate(new Date());
        }

        if (is2DigitYear) {
          tYear = parseInt((dobj.year + '').slice(0, 2) + ystrig, 10);
        } // tslint:disable-next-line


        var dateObject = HijriParser.toGregorian(tYear || dobj.year, tMonth || dobj.month, tDate || dobj.date);
        parsedDateParts.year = dateObject.getFullYear();
        parsedDateParts.month = dateObject.getMonth() + 1;
        parsedDateParts.day = dateObject.getDate();
      }

      return _this.getDateObject(parsedDateParts);
    };
  };
  /* tslint:disable */

  /**
   * Returns date object for provided date options
   *
   * @param {DateParts} options ?
   * @param {Date} value ?
   * @returns {Date} ?
   */


  DateParser.getDateObject = function (options, value) {
    var res = value || new Date();
    res.setMilliseconds(0);
    var tKeys = ['hour', 'minute', 'second', 'milliseconds', 'month', 'day'];
    var y = options.year;
    var desig = options.designator;
    var tzone = options.timeZone;

    if (!isUndefined(y)) {
      var len = (y + '').length;

      if (len <= 2) {
        var century = Math.floor(res.getFullYear() / 100) * 100;
        y += century;
      }

      res.setFullYear(y);
    }

    for (var _i = 0, tKeys_1 = tKeys; _i < tKeys_1.length; _i++) {
      var key = tKeys_1[_i]; // eslint-disable-next-line

      var tValue = options[key];

      if (isUndefined(tValue) && key === 'day') {
        res.setDate(1);
      }

      if (!isUndefined(tValue)) {
        if (key === 'month') {
          tValue -= 1;

          if (tValue < 0 || tValue > 11) {
            return new Date('invalid');
          }

          var pDate = res.getDate();
          res.setDate(1); // eslint-disable-next-line

          res[timeSetter$1[key]](tValue);
          var lDate = new Date(res.getFullYear(), tValue + 1, 0).getDate();
          res.setDate(pDate < lDate ? pDate : lDate);
        } else {
          if (key === 'day') {
            var lastDay = new Date(res.getFullYear(), res.getMonth() + 1, 0).getDate();

            if (tValue < 1 || tValue > lastDay) {
              return null;
            }
          } // eslint-disable-next-line


          res[timeSetter$1[key]](tValue);
        }
      }
    }

    if (!isUndefined(desig)) {
      var hour = res.getHours();

      if (desig === 'pm') {
        res.setHours(hour + (hour === 12 ? 0 : 12));
      } else if (hour === 12) {
        res.setHours(0);
      }
    }

    if (!isUndefined(tzone)) {
      var tzValue = tzone - res.getTimezoneOffset();

      if (tzValue !== 0) {
        res.setMinutes(res.getMinutes() + tzValue);
      }
    }

    return res;
  };
  /**
   * Returns date parsing options for provided value along with parse and numeric options
   *
   * @param {string} value ?
   * @param {ParseOptions} parseOptions ?
   * @param {NumericOptions} num ?
   * @returns {DateParts} ?
   */


  DateParser.internalDateParse = function (value, parseOptions, num) {
    var matches = value.match(parseOptions.parserRegex);
    var retOptions = {
      'hour': 0,
      'minute': 0,
      'second': 0
    };

    if (isNullOrUndefined(matches)) {
      return null;
    } else {
      var props = Object.keys(parseOptions.evalposition);

      for (var _i = 0, props_1 = props; _i < props_1.length; _i++) {
        var prop = props_1[_i];
        var curObject = parseOptions.evalposition[prop];
        var matchString = matches[curObject.pos];

        if (curObject.isNumber) {
          // eslint-disable-next-line
          retOptions[prop] = this.internalNumberParser(matchString, num);
        } else {
          if (prop === 'timeZone' && !isUndefined(matchString)) {
            var pos = curObject.pos;
            var val = void 0;
            var tmatch = matches[pos + 1];
            var flag = !isUndefined(tmatch);

            if (curObject.hourOnly) {
              val = this.getZoneValue(flag, tmatch, matches[pos + 4], num) * 60;
            } else {
              val = this.getZoneValue(flag, tmatch, matches[pos + 7], num) * 60;
              val += this.getZoneValue(flag, matches[pos + 4], matches[pos + 10], num);
            }

            if (!isNullOrUndefined(val)) {
              retOptions[prop] = val;
            }
          } else {
            // eslint-disable-next-line
            matchString = prop === 'month' && !parseOptions.isIslamic && (parseOptions.culture === 'en' || parseOptions.culture === 'en-GB' || parseOptions.culture === 'en-US') ? matchString[0].toUpperCase() + matchString.substring(1).toLowerCase() : matchString; // eslint-disable-next-line

            retOptions[prop] = parseOptions[prop][matchString];
          }
        }
      }

      if (parseOptions.hour12) {
        retOptions.hour12 = true;
      }
    }

    return retOptions;
  };
  /**
   * Returns parsed number for provided Numeric string and Numeric Options
   *
   * @param {string} value ?
   * @param {NumericOptions} option ?
   * @returns {number} ?
   */


  DateParser.internalNumberParser = function (value, option) {
    value = ParserBase.convertValueParts(value, option.numberParseRegex, option.numericPair);

    if (latnRegex.test(value)) {
      return +value;
    }

    return null;
  };
  /**
   * Returns parsed time zone RegExp for provided hour format and time zone
   *
   * @param {string} hourFormat ?
   * @param {base.TimeZoneOptions} tZone ?
   * @param {string} nRegex ?
   * @returns {string} ?
   */


  DateParser.parseTimeZoneRegx = function (hourFormat, tZone, nRegex) {
    var pattern = tZone.gmtFormat;
    var ret;
    var cRegex = '(' + nRegex + ')' + '(' + nRegex + ')';
    var splitStr;
    ret = hourFormat.replace('+', '\\+');

    if (hourFormat.indexOf('HH') !== -1) {
      ret = ret.replace(/HH|mm/g, '(' + cRegex + ')');
    } else {
      ret = ret.replace(/H|m/g, '(' + cRegex + '?)');
    } // eslint-disable-next-line


    splitStr = ret.split(';').map(function (str) {
      return pattern.replace('{0}', str);
    });
    ret = splitStr.join('|') + '|' + tZone.gmtZeroFormat;
    return ret;
  };
  /**
   * Returns zone based value.
   *
   * @param {boolean} flag ?
   * @param {string} val1 ?
   * @param {string} val2 ?
   * @param {NumericOptions} num ?
   * @returns {number} ?
   */


  DateParser.getZoneValue = function (flag, val1, val2, num) {
    var ival = flag ? val1 : val2;

    if (!ival) {
      return 0;
    }

    var value = this.internalNumberParser(ival, num);

    if (flag) {
      return -value;
    }

    return value;
  };

  return DateParser;
}();

var parseRegex = /^([^0-9]*)(([0-9,]*[0-9]+)(\.[0-9]+)?)([Ee][+-]?[0-9]+)?([^0-9]*)$/;
var groupRegex = /,/g;
var keys = ['minusSign', 'infinity'];
/**
 * Module for Number Parser.
 *
 * @private
 */

var NumberParser =
/** @__PURE__ @class */
function () {
  function NumberParser() {}
  /**
   * Returns the parser function for given skeleton.
   *
   * @param {string} culture -  Specifies the culture name to be which formatting.
   * @param {NumberFormatOptions} option - Specific the format in which number  will parsed.
   * @param {Object} cldr - Specifies the global cldr data collection.
   * @returns {Function} ?
   */


  NumberParser.numberParser = function (culture, option, cldr) {
    var _this = this;

    var dependable = IntlBase.getDependables(cldr, culture, '', true);
    var parseOptions = {
      custom: true
    };
    var numOptions;

    if (IntlBase.formatRegex.test(option.format) || !option.format) {
      extend(parseOptions, IntlBase.getProperNumericSkeleton(option.format || 'N'));
      parseOptions.custom = false;

      if (!parseOptions.fractionDigits) {
        if (option.maximumFractionDigits) {
          parseOptions.maximumFractionDigits = option.maximumFractionDigits;
        }
      }
    } else {
      extend(parseOptions, IntlBase.customFormat(option.format, null, null));
    }

    var numbers = getValue('numbers', dependable.parserObject); // eslint-disable-next-line

    numOptions = ParserBase.getCurrentNumericOptions(dependable.parserObject, ParserBase.getNumberingSystem(cldr), true, isBlazor());
    parseOptions.symbolRegex = ParserBase.getSymbolRegex(Object.keys(numOptions.symbolMatch)); // eslint-disable-next-line

    parseOptions.infinity = numOptions.symbolNumberSystem[keys[1]];
    var symbolpattern;

    if (!isBlazor()) {
      symbolpattern = IntlBase.getSymbolPattern(parseOptions.type, numOptions.numberSystem, dependable.numericObject, parseOptions.isAccount);

      if (symbolpattern) {
        symbolpattern = symbolpattern.replace(/\u00A4/g, IntlBase.defaultCurrency);
        var split = symbolpattern.split(';');
        parseOptions.nData = IntlBase.getFormatData(split[1] || '-' + split[0], true, '');
        parseOptions.pData = IntlBase.getFormatData(split[0], true, '');
      }
    } else {
      parseOptions.nData = extend({}, {}, getValue(parseOptions.type + 'nData', numbers));
      parseOptions.pData = extend({}, {}, getValue(parseOptions.type + 'pData', numbers));

      if (parseOptions.type === 'currency' && option.currency) {
        IntlBase.replaceBlazorCurrency([parseOptions.pData, parseOptions.nData], getValue('currencySymbol', numbers), option.currency);
      }
    }

    return function (value) {
      return _this.getParsedNumber(value, parseOptions, numOptions);
    };
  };
  /**
   * Returns parsed number for the provided formatting options
   *
   * @param {string} value ?
   * @param {NumericParts} options ?
   * @param {NumericOptions} numOptions ?
   * @returns {number} ?
   */


  NumberParser.getParsedNumber = function (value, options, numOptions) {
    var isNegative;
    var isPercent;
    var tempValue;
    var lead;
    var end;
    var ret;

    if (value.indexOf(options.infinity) !== -1) {
      return Infinity;
    } else {
      value = ParserBase.convertValueParts(value, options.symbolRegex, numOptions.symbolMatch);
      value = ParserBase.convertValueParts(value, numOptions.numberParseRegex, numOptions.numericPair);
      value = value.indexOf('-') !== -1 ? value.replace('-.', '-0.') : value;

      if (value.indexOf('.') === 0) {
        value = '0' + value;
      }

      var matches = value.match(parseRegex);

      if (isNullOrUndefined(matches)) {
        return NaN;
      }

      lead = matches[1];
      tempValue = matches[2];
      var exponent = matches[5];
      end = matches[6];
      isNegative = options.custom ? lead === options.nData.nlead && end === options.nData.nend : lead.indexOf(options.nData.nlead) !== -1 && end.indexOf(options.nData.nend) !== -1;
      isPercent = isNegative ? options.nData.isPercent : options.pData.isPercent;
      tempValue = tempValue.replace(groupRegex, '');

      if (exponent) {
        tempValue += exponent;
      }

      ret = +tempValue;

      if (options.type === 'percent' || isPercent) {
        ret = ret / 100;
      }

      if (options.custom || options.fractionDigits) {
        ret = parseFloat(ret.toFixed(options.custom ? isNegative ? options.nData.maximumFractionDigits : options.pData.maximumFractionDigits : options.fractionDigits));
      }

      if (options.maximumFractionDigits) {
        ret = this.convertMaxFracDigits(tempValue, options, ret, isNegative);
      }

      if (isNegative) {
        ret *= -1;
      }

      return ret;
    }
  };

  NumberParser.convertMaxFracDigits = function (value, options, ret, isNegative) {
    var decimalSplitValue = value.split('.');

    if (decimalSplitValue[1] && decimalSplitValue[1].length > options.maximumFractionDigits) {
      ret = +ret.toFixed(options.custom ? isNegative ? options.nData.maximumFractionDigits : options.pData.maximumFractionDigits : options.maximumFractionDigits);
    }

    return ret;
  };

  return NumberParser;
}();

var Observer =
/** @__PURE__ @class */
function () {
  function Observer(context) {
    this.ranArray = [];
    this.boundedEvents = {};

    if (isNullOrUndefined(context)) {
      return;
    }

    this.context = context;
  }
  /**
   * To attach handler for given property in current context.
   *
   * @param {string} property - specifies the name of the event.
   * @param {Function} handler - Specifies the handler function to be called while event notified.
   * @param {Object} context - Specifies the context binded to the handler.
   * @param {string} id - specifies the random generated id.
   * @returns {void}
   */


  Observer.prototype.on = function (property, handler, context, id) {
    if (isNullOrUndefined(handler)) {
      return;
    }

    var cntxt = context || this.context;

    if (this.notExist(property)) {
      this.boundedEvents[property] = [{
        handler: handler,
        context: cntxt
      }];
      return;
    }

    if (!isNullOrUndefined(id)) {
      if (this.ranArray.indexOf(id) === -1) {
        this.ranArray.push(id);
        this.boundedEvents[property].push({
          handler: handler,
          context: cntxt,
          id: id
        });
      }
    } else if (!this.isHandlerPresent(this.boundedEvents[property], handler)) {
      this.boundedEvents[property].push({
        handler: handler,
        context: cntxt
      });
    }
  };
  /**
   * To remove handlers from a event attached using on() function.
   *
   * @param {string} property - specifies the name of the event.
   * @param {Function} handler - Optional argument specifies the handler function to be called while event notified.
   * @param {string} id - specifies the random generated id.
   * @returns {void} ?
   */


  Observer.prototype.off = function (property, handler, id) {
    if (this.notExist(property)) {
      return;
    }

    var curObject = getValue(property, this.boundedEvents);

    if (handler) {
      for (var i = 0; i < curObject.length; i++) {
        if (id) {
          if (curObject[i].id === id) {
            curObject.splice(i, 1);
            var indexLocation = this.ranArray.indexOf(id);

            if (indexLocation !== -1) {
              this.ranArray.splice(indexLocation, 1);
            }

            break;
          }
        } else if (handler === curObject[i].handler) {
          curObject.splice(i, 1);
          break;
        }
      }
    } else {
      delete this.boundedEvents[property];
    }
  };
  /**
   * To notify the handlers in the specified event.
   *
   * @param {string} property - Specifies the event to be notify.
   * @param {Object} argument - Additional parameters to pass while calling the handler.
   * @param {Function} successHandler - this function will invoke after event successfully triggered
   * @param {Function} errorHandler - this function will invoke after event if it was failure to call.
   * @returns {void} ?
   */


  Observer.prototype.notify = function (property, argument, successHandler, errorHandler) {
    if (this.notExist(property)) {
      if (successHandler) {
        successHandler.call(this, argument);
      }

      return;
    }

    if (argument) {
      argument.name = property;
    }

    var blazor = 'Blazor';
    var curObject = getValue(property, this.boundedEvents).slice(0);

    if (window[blazor]) {
      return this.blazorCallback(curObject, argument, successHandler, errorHandler, 0);
    } else {
      for (var _i = 0, curObject_1 = curObject; _i < curObject_1.length; _i++) {
        var cur = curObject_1[_i];
        cur.handler.call(cur.context, argument);
      }

      if (successHandler) {
        successHandler.call(this, argument);
      }
    }
  };

  Observer.prototype.blazorCallback = function (objs, argument, successHandler, errorHandler, index) {
    var _this = this;

    var isTrigger = index === objs.length - 1;

    if (index < objs.length) {
      var obj_1 = objs[index];
      var promise = obj_1.handler.call(obj_1.context, argument);

      if (promise && typeof promise.then === 'function') {
        if (!successHandler) {
          return promise;
        }

        promise.then(function (data) {
          data = typeof data === 'string' && _this.isJson(data) ? JSON.parse(data, _this.dateReviver) : data;
          extend(argument, argument, data, true);

          if (successHandler && isTrigger) {
            successHandler.call(obj_1.context, argument);
          } else {
            return _this.blazorCallback(objs, argument, successHandler, errorHandler, index + 1);
          }
        }).catch(function (data) {
          if (errorHandler) {
            errorHandler.call(obj_1.context, typeof data === 'string' && _this.isJson(data) ? JSON.parse(data, _this.dateReviver) : data);
          }
        });
      } else if (successHandler && isTrigger) {
        successHandler.call(obj_1.context, argument);
      } else {
        return this.blazorCallback(objs, argument, successHandler, errorHandler, index + 1);
      }
    }
  }; // eslint-disable-next-line


  Observer.prototype.dateReviver = function (key, value) {
    var dPattern = /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}/;

    if (isBlazor && typeof value === 'string' && value.match(dPattern) !== null) {
      return new Date(value);
    }

    return value;
  };

  Observer.prototype.isJson = function (value) {
    try {
      JSON.parse(value);
    } catch (e) {
      return false;
    }

    return true;
  };
  /**
   * To destroy handlers in the event
   *
   * @returns {void} ?
   */


  Observer.prototype.destroy = function () {
    this.boundedEvents = this.context = undefined;
  };
  /**
   * Returns if the property exists.
   *
   * @param {string} prop ?
   * @returns {boolean} ?
   */


  Observer.prototype.notExist = function (prop) {
    // eslint-disable-next-line
    return this.boundedEvents.hasOwnProperty(prop) === false || this.boundedEvents[prop].length <= 0;
  };
  /**
   * Returns if the handler is present.
   *
   * @param {BoundOptions[]} boundedEvents ?
   * @param {Function} handler ?
   * @returns {boolean} ?
   */


  Observer.prototype.isHandlerPresent = function (boundedEvents, handler) {
    for (var _i = 0, boundedEvents_1 = boundedEvents; _i < boundedEvents_1.length; _i++) {
      var cur = boundedEvents_1[_i];

      if (cur.handler === handler) {
        return true;
      }
    }

    return false;
  };

  return Observer;
}();
/**
 * Specifies the observer used for external change detection.
 */


var onIntlChange = new Observer();
/**
 * Specifies the default rtl status for EJ2 components.
 */

var rightToLeft = false;
/**
 * Specifies the CLDR data loaded for internationalization functionalities.
 *
 * @private
 */

var cldrData = {};
/**
 * Specifies the default culture value to be considered.
 *
 * @private
 */

var defaultCulture = 'en-US';
/**
 * Specifies default currency code to be considered
 *
 * @private
 */

var defaultCurrencyCode = 'USD';
var mapper = ['numericObject', 'dateObject'];
/**
 * Internationalization class provides support to parse and format the number and date object to the desired format.
 * ```typescript
 * // To set the culture globally
 * setCulture('en-GB');
 *
 * // To set currency code globally
 * setCurrencyCode('EUR');
 *
 * //Load cldr data
 * loadCldr(gregorainData);
 * loadCldr(timeZoneData);
 * loadCldr(numbersData);
 * loadCldr(numberSystemData);
 *
 * // To use formatter in component side
 * let Intl:Internationalization = new Internationalization();
 *
 * // Date formatting
 * let dateFormatter: Function = Intl.getDateFormat({skeleton:'long',type:'dateTime'});
 * dateFormatter(new Date('11/2/2016'));
 * dateFormatter(new Date('25/2/2030'));
 * Intl.formatDate(new Date(),{skeleton:'E'});
 *
 * //Number formatting
 * let numberFormatter: Function = Intl.getNumberFormat({skeleton:'C5'})
 * numberFormatter(24563334);
 * Intl.formatNumber(123123,{skeleton:'p2'});
 *
 * // Date parser
 * let dateParser: Function = Intl.getDateParser({skeleton:'short',type:'time'});
 * dateParser('10:30 PM');
 * Intl.parseDate('10',{skeleton:'H'});
 * ```
 */

var Internationalization =
/** @__PURE__ @class */
function () {
  function Internationalization(cultureName) {
    if (cultureName) {
      this.culture = cultureName;
    }
  }
  /**
   * Returns the format function for given options.
   *
   * @param {DateFormatOptions} options - Specifies the format options in which the format function will return.
   * @returns {Function} ?
   */


  Internationalization.prototype.getDateFormat = function (options) {
    return DateFormat.dateFormat(this.getCulture(), options || {
      type: 'date',
      skeleton: 'short'
    }, cldrData);
  };
  /**
   * Returns the format function for given options.
   *
   * @param {NumberFormatOptions} options - Specifies the format options in which the format function will return.
   * @returns {Function} ?
   */


  Internationalization.prototype.getNumberFormat = function (options) {
    if (options && !options.currency) {
      options.currency = defaultCurrencyCode;
    }

    if (isBlazor() && options && !options.format) {
      options.minimumFractionDigits = 0;
    }

    return NumberFormat.numberFormatter(this.getCulture(), options || {}, cldrData);
  };
  /**
   * Returns the parser function for given options.
   *
   * @param {DateFormatOptions} options - Specifies the format options in which the parser function will return.
   * @returns {Function} ?
   */


  Internationalization.prototype.getDateParser = function (options) {
    return DateParser.dateParser(this.getCulture(), options || {
      skeleton: 'short',
      type: 'date'
    }, cldrData);
  };
  /**
   * Returns the parser function for given options.
   *
   * @param {NumberFormatOptions} options - Specifies the format options in which the parser function will return.
   * @returns {Function} ?
   */


  Internationalization.prototype.getNumberParser = function (options) {
    if (isBlazor() && options && !options.format) {
      options.minimumFractionDigits = 0;
    }

    return NumberParser.numberParser(this.getCulture(), options || {
      format: 'N'
    }, cldrData);
  };
  /**
   * Returns the formatted string based on format options.
   *
   * @param {number} value - Specifies the number to format.
   * @param {NumberFormatOptions} option - Specifies the format options in which the number will be formatted.
   * @returns {string} ?
   */


  Internationalization.prototype.formatNumber = function (value, option) {
    return this.getNumberFormat(option)(value);
  };
  /**
   * Returns the formatted date string based on format options.
   *
   * @param {Date} value - Specifies the number to format.
   * @param {DateFormatOptions} option - Specifies the format options in which the number will be formatted.
   * @returns {string} ?
   */


  Internationalization.prototype.formatDate = function (value, option) {
    return this.getDateFormat(option)(value);
  };
  /**
   * Returns the date object for given date string and options.
   *
   * @param {string} value - Specifies the string to parse.
   * @param {DateFormatOptions} option - Specifies the parse options in which the date string will be parsed.
   * @returns {Date} ?
   */


  Internationalization.prototype.parseDate = function (value, option) {
    return this.getDateParser(option)(value);
  };
  /**
   * Returns the number object from the given string value and options.
   *
   * @param {string} value - Specifies the string to parse.
   * @param {NumberFormatOptions} option - Specifies the parse options in which the  string number  will be parsed.
   * @returns {number} ?
   */


  Internationalization.prototype.parseNumber = function (value, option) {
    return this.getNumberParser(option)(value);
  };
  /**
   * Returns Native Date Time Pattern
   *
   * @param {DateFormatOptions} option - Specifies the parse options for resultant date time pattern.
   * @param {boolean} isExcelFormat - Specifies format value to be converted to excel pattern.
   * @returns {string} ?
   * @private
   */


  Internationalization.prototype.getDatePattern = function (option, isExcelFormat) {
    return IntlBase.getActualDateTimeFormat(this.getCulture(), option, cldrData, isExcelFormat);
  };
  /**
   * Returns Native Number Pattern
   *
   * @param {NumberFormatOptions} option - Specifies the parse options for resultant number pattern.
   * @param {boolean} isExcel ?
   * @returns {string} ?
   * @private
   */


  Internationalization.prototype.getNumberPattern = function (option, isExcel) {
    return IntlBase.getActualNumberFormat(this.getCulture(), option, cldrData, isExcel);
  };
  /**
   * Returns the First Day of the Week
   *
   * @returns {number} ?
   */


  Internationalization.prototype.getFirstDayOfWeek = function () {
    return IntlBase.getWeekData(this.getCulture(), cldrData);
  };
  /**
   * Returns the culture
   *
   * @returns {string} ?
   */


  Internationalization.prototype.getCulture = function () {
    return this.culture || defaultCulture;
  };

  return Internationalization;
}();
/**
 * Set the default culture to all EJ2 components
 *
 * @param {string} cultureName - Specifies the culture name to be set as default culture.
 * @returns {void} ?
 */


function setCulture(cultureName) {
  defaultCulture = cultureName;
  onIntlChange.notify('notifyExternalChange', {
    'locale': defaultCulture
  });
}
/**
 * Set the default currency code to all EJ2 components
 *
 * @param {string} currencyCode Specifies the culture name to be set as default culture.
 * @returns {void} ?
 */


function setCurrencyCode(currencyCode) {
  defaultCurrencyCode = currencyCode;
  onIntlChange.notify('notifyExternalChange', {
    'currencyCode': defaultCurrencyCode
  });
}
/**
 * Load the CLDR data into context
 *
 * @param {Object[]} data Specifies the CLDR data's to be used for formatting and parser.
 * @returns {void} ?
 */


function loadCldr() {
  var data = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    data[_i] = arguments[_i];
  }

  for (var _a = 0, data_1 = data; _a < data_1.length; _a++) {
    var obj = data_1[_a];
    extend(cldrData, obj, {}, true);
  }
}
/**
 * To enable or disable RTL functionality for all components globally.
 *
 * @param {boolean} status - Optional argument Specifies the status value to enable or disable rtl option.
 * @returns {void} ?
 */


function enableRtl(status) {
  if (status === void 0) {
    status = true;
  }

  rightToLeft = status;
  onIntlChange.notify('notifyExternalChange', {
    enableRtl: rightToLeft
  });
}
/**
 * To get the numeric CLDR object for given culture
 *
 * @param {string} locale - Specifies the locale for which numericObject to be returned.
 * @param {string} type ?
 * @returns {Object} ?
 * @ignore
 * @private
 */


function getNumericObject(locale, type) {
  // eslint-disable-next-line
  var numObject = IntlBase.getDependables(cldrData, locale, '', true)[mapper[0]]; // eslint-disable-next-line

  var dateObject = IntlBase.getDependables(cldrData, locale, '')[mapper[1]];
  var numSystem = getValue('defaultNumberingSystem', numObject);
  var symbPattern = isBlazor() ? getValue('numberSymbols', numObject) : getValue('symbols-numberSystem-' + numSystem, numObject);
  var pattern = IntlBase.getSymbolPattern(type || 'decimal', numSystem, numObject, false);
  return extend(symbPattern, IntlBase.getFormatData(pattern, true, '', true), {
    'dateSeparator': IntlBase.getDateSeparator(dateObject)
  });
}
/**
 * To get the numeric CLDR  number base object for given culture
 *
 * @param {string} locale - Specifies the locale for which numericObject to be returned.
 * @param {string} currency - Specifies the currency for which numericObject to be returned.
 * @returns {string} ?
 * @ignore
 * @private
 */


function getNumberDependable(locale, currency) {
  // eslint-disable-next-line
  var numObject = IntlBase.getDependables(cldrData, locale, '', true); // eslint-disable-next-line

  return IntlBase.getCurrencySymbol(numObject.numericObject, currency);
}
/**
 * To get the default date CLDR object.
 *
 * @param {string} mode ?
 * @returns {Object} ?
 * @ignore
 * @private
 */


function getDefaultDateObject(mode) {
  // eslint-disable-next-line
  return IntlBase.getDependables(cldrData, '', mode, false)[mapper[1]];
}

var blazorCultureFormats = {
  'en-US': {
    'd': 'M/d/y',
    'D': 'EEEE, MMMM d, y',
    'f': 'EEEE, MMMM d, y h:mm a',
    'F': 'EEEE, MMMM d, y h:mm:s a',
    'g': 'M/d/y h:mm a',
    'G': 'M/d/yyyy h:mm:ss tt',
    'm': 'MMMM d',
    'M': 'MMMM d',
    'r': 'ddd, dd MMM yyyy HH\':\'mm\':\'ss \'GMT\'',
    'R': 'ddd, dd MMM yyyy HH\':\'mm\':\'ss \'GMT\'',
    's': 'yyyy\'-\'MM\'-\'dd\'T\'HH\':\'mm\':\'ss',
    't': 'h:mm tt',
    'T': 'h:m:s tt',
    'u': 'yyyy\'-\'MM\'-\'dd HH\':\'mm\':\'ss\'Z\'',
    'U': 'dddd, MMMM d, yyyy h:mm:ss tt',
    'y': 'MMMM yyyy',
    'Y': 'MMMM yyyy'
  }
};
/**
 * Date base common constants and function for date parser and formatter.
 */
// eslint-disable-next-line

var IntlBase;

(function (IntlBase) {
  // tslint:disable-next-line:max-line-length
  IntlBase.negativeDataRegex = /^(('[^']+'|''|[^*#@0,.E])*)(\*.)?((([#,]*[0,]*0+)(\.0*[0-9]*#*)?)|([#,]*@+#*))(E\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;
  IntlBase.customRegex = /^(('[^']+'|''|[^*#@0,.])*)(\*.)?((([0#,]*[0,]*[0#]*[0#\ ]*)(\.[0#]*)?)|([#,]*@+#*))(E\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;
  IntlBase.latnParseRegex = /0|1|2|3|4|5|6|7|8|9/g;
  var fractionRegex = /[0-9]/g;
  IntlBase.defaultCurrency = '$';
  var mapper = ['infinity', 'nan', 'group', 'decimal'];
  var patternRegex = /G|M|L|H|c|'| a|yy|y|EEEE|E/g;
  var patternMatch = {
    'G': '',
    'M': 'm',
    'L': 'm',
    'H': 'h',
    'c': 'd',
    '\'': '"',
    ' a': ' AM/PM',
    'yy': 'yy',
    'y': 'yyyy',
    'EEEE': 'dddd',
    'E': 'ddd'
  };
  IntlBase.dateConverterMapper = /dddd|ddd/ig;
  var defaultFirstDay = 'sun';
  IntlBase.islamicRegex = /^islamic/;
  var firstDayMapper = {
    'sun': 0,
    'mon': 1,
    'tue': 2,
    'wed': 3,
    'thu': 4,
    'fri': 5,
    'sat': 6
  };
  IntlBase.formatRegex = /(^[ncpae]{1})([0-1]?[0-9]|20)?$/i;
  IntlBase.currencyFormatRegex = /(^[ca]{1})([0-1]?[0-9]|20)?$/i;
  IntlBase.curWithoutNumberRegex = /(c|a)$/ig;
  var typeMapper = {
    '$': 'isCurrency',
    '%': 'isPercent',
    '-': 'isNegative',
    0: 'nlead',
    1: 'nend'
  };
  IntlBase.dateParseRegex = /([a-z])\1*|'([^']|'')+'|''|./gi;
  IntlBase.basicPatterns = ['short', 'medium', 'long', 'full'];
  /* tslint:disable:quotemark */

  IntlBase.defaultObject = {
    'dates': {
      'calendars': {
        'gregorian': {
          'months': {
            'stand-alone': {
              'abbreviated': {
                '1': 'Jan',
                '2': 'Feb',
                '3': 'Mar',
                '4': 'Apr',
                '5': 'May',
                '6': 'Jun',
                '7': 'Jul',
                '8': 'Aug',
                '9': 'Sep',
                '10': 'Oct',
                '11': 'Nov',
                '12': 'Dec'
              },
              'narrow': {
                '1': 'J',
                '2': 'F',
                '3': 'M',
                '4': 'A',
                '5': 'M',
                '6': 'J',
                '7': 'J',
                '8': 'A',
                '9': 'S',
                '10': 'O',
                '11': 'N',
                '12': 'D'
              },
              'wide': {
                '1': 'January',
                '2': 'February',
                '3': 'March',
                '4': 'April',
                '5': 'May',
                '6': 'June',
                '7': 'July',
                '8': 'August',
                '9': 'September',
                '10': 'October',
                '11': 'November',
                '12': 'December'
              }
            }
          },
          'days': {
            'stand-alone': {
              'abbreviated': {
                'sun': 'Sun',
                'mon': 'Mon',
                'tue': 'Tue',
                'wed': 'Wed',
                'thu': 'Thu',
                'fri': 'Fri',
                'sat': 'Sat'
              },
              'narrow': {
                'sun': 'S',
                'mon': 'M',
                'tue': 'T',
                'wed': 'W',
                'thu': 'T',
                'fri': 'F',
                'sat': 'S'
              },
              'short': {
                'sun': 'Su',
                'mon': 'Mo',
                'tue': 'Tu',
                'wed': 'We',
                'thu': 'Th',
                'fri': 'Fr',
                'sat': 'Sa'
              },
              'wide': {
                'sun': 'Sunday',
                'mon': 'Monday',
                'tue': 'Tuesday',
                'wed': 'Wednesday',
                'thu': 'Thursday',
                'fri': 'Friday',
                'sat': 'Saturday'
              }
            }
          },
          'dayPeriods': {
            'format': {
              'wide': {
                'am': 'AM',
                'pm': 'PM'
              }
            }
          },
          'eras': {
            'eraNames': {
              '0': 'Before Christ',
              '0-alt-variant': 'Before Common Era',
              '1': 'Anno Domini',
              '1-alt-variant': 'Common Era'
            },
            'eraAbbr': {
              '0': 'BC',
              '0-alt-variant': 'BCE',
              '1': 'AD',
              '1-alt-variant': 'CE'
            },
            'eraNarrow': {
              '0': 'B',
              '0-alt-variant': 'BCE',
              '1': 'A',
              '1-alt-variant': 'CE'
            }
          },
          'dateFormats': {
            'full': 'EEEE, MMMM d, y',
            'long': 'MMMM d, y',
            'medium': 'MMM d, y',
            'short': 'M/d/yy'
          },
          'timeFormats': {
            'full': 'h:mm:ss a zzzz',
            'long': 'h:mm:ss a z',
            'medium': 'h:mm:ss a',
            'short': 'h:mm a'
          },
          'dateTimeFormats': {
            'full': '{1} \'at\' {0}',
            'long': '{1} \'at\' {0}',
            'medium': '{1}, {0}',
            'short': '{1}, {0}',
            'availableFormats': {
              'd': 'd',
              'E': 'ccc',
              'Ed': 'd E',
              'Ehm': 'E h:mm a',
              'EHm': 'E HH:mm',
              'Ehms': 'E h:mm:ss a',
              'EHms': 'E HH:mm:ss',
              'Gy': 'y G',
              'GyMMM': 'MMM y G',
              'GyMMMd': 'MMM d, y G',
              'GyMMMEd': 'E, MMM d, y G',
              'h': 'h a',
              'H': 'HH',
              'hm': 'h:mm a',
              'Hm': 'HH:mm',
              'hms': 'h:mm:ss a',
              'Hms': 'HH:mm:ss',
              'hmsv': 'h:mm:ss a v',
              'Hmsv': 'HH:mm:ss v',
              'hmv': 'h:mm a v',
              'Hmv': 'HH:mm v',
              'M': 'L',
              'Md': 'M/d',
              'MEd': 'E, M/d',
              'MMM': 'LLL',
              'MMMd': 'MMM d',
              'MMMEd': 'E, MMM d',
              'MMMMd': 'MMMM d',
              'ms': 'mm:ss',
              'y': 'y',
              'yM': 'M/y',
              'yMd': 'M/d/y',
              'yMEd': 'E, M/d/y',
              'yMMM': 'MMM y',
              'yMMMd': 'MMM d, y',
              'yMMMEd': 'E, MMM d, y',
              'yMMMM': 'MMMM y'
            }
          }
        },
        'islamic': {
          'months': {
            'stand-alone': {
              'abbreviated': {
                '1': 'Muh.',
                '2': 'Saf.',
                '3': 'Rab. I',
                '4': 'Rab. II',
                '5': 'Jum. I',
                '6': 'Jum. II',
                '7': 'Raj.',
                '8': 'Sha.',
                '9': 'Ram.',
                '10': 'Shaw.',
                '11': 'Dhuʻl-Q.',
                '12': 'Dhuʻl-H.'
              },
              'narrow': {
                '1': '1',
                '2': '2',
                '3': '3',
                '4': '4',
                '5': '5',
                '6': '6',
                '7': '7',
                '8': '8',
                '9': '9',
                '10': '10',
                '11': '11',
                '12': '12'
              },
              'wide': {
                '1': 'Muharram',
                '2': 'Safar',
                '3': 'Rabiʻ I',
                '4': 'Rabiʻ II',
                '5': 'Jumada I',
                '6': 'Jumada II',
                '7': 'Rajab',
                '8': 'Shaʻban',
                '9': 'Ramadan',
                '10': 'Shawwal',
                '11': 'Dhuʻl-Qiʻdah',
                '12': 'Dhuʻl-Hijjah'
              }
            }
          },
          'days': {
            'stand-alone': {
              'abbreviated': {
                'sun': 'Sun',
                'mon': 'Mon',
                'tue': 'Tue',
                'wed': 'Wed',
                'thu': 'Thu',
                'fri': 'Fri',
                'sat': 'Sat'
              },
              'narrow': {
                'sun': 'S',
                'mon': 'M',
                'tue': 'T',
                'wed': 'W',
                'thu': 'T',
                'fri': 'F',
                'sat': 'S'
              },
              'short': {
                'sun': 'Su',
                'mon': 'Mo',
                'tue': 'Tu',
                'wed': 'We',
                'thu': 'Th',
                'fri': 'Fr',
                'sat': 'Sa'
              },
              'wide': {
                'sun': 'Sunday',
                'mon': 'Monday',
                'tue': 'Tuesday',
                'wed': 'Wednesday',
                'thu': 'Thursday',
                'fri': 'Friday',
                'sat': 'Saturday'
              }
            }
          },
          'dayPeriods': {
            'format': {
              'wide': {
                'am': 'AM',
                'pm': 'PM'
              }
            }
          },
          'eras': {
            'eraNames': {
              '0': 'AH'
            },
            'eraAbbr': {
              '0': 'AH'
            },
            'eraNarrow': {
              '0': 'AH'
            }
          },
          'dateFormats': {
            'full': 'EEEE, MMMM d, y G',
            'long': 'MMMM d, y G',
            'medium': 'MMM d, y G',
            'short': 'M/d/y GGGGG'
          },
          'timeFormats': {
            'full': 'h:mm:ss a zzzz',
            'long': 'h:mm:ss a z',
            'medium': 'h:mm:ss a',
            'short': 'h:mm a'
          },
          'dateTimeFormats': {
            'full': '{1} \'at\' {0}',
            'long': '{1} \'at\' {0}',
            'medium': '{1}, {0}',
            'short': '{1}, {0}',
            'availableFormats': {
              'd': 'd',
              'E': 'ccc',
              'Ed': 'd E',
              'Ehm': 'E h:mm a',
              'EHm': 'E HH:mm',
              'Ehms': 'E h:mm:ss a',
              'EHms': 'E HH:mm:ss',
              'Gy': 'y G',
              'GyMMM': 'MMM y G',
              'GyMMMd': 'MMM d, y G',
              'GyMMMEd': 'E, MMM d, y G',
              'h': 'h a',
              'H': 'HH',
              'hm': 'h:mm a',
              'Hm': 'HH:mm',
              'hms': 'h:mm:ss a',
              'Hms': 'HH:mm:ss',
              'M': 'L',
              'Md': 'M/d',
              'MEd': 'E, M/d',
              'MMM': 'LLL',
              'MMMd': 'MMM d',
              'MMMEd': 'E, MMM d',
              'MMMMd': 'MMMM d',
              'ms': 'mm:ss',
              'y': 'y G',
              'yyyy': 'y G',
              'yyyyM': 'M/y GGGGG',
              'yyyyMd': 'M/d/y GGGGG',
              'yyyyMEd': 'E, M/d/y GGGGG',
              'yyyyMMM': 'MMM y G',
              'yyyyMMMd': 'MMM d, y G',
              'yyyyMMMEd': 'E, MMM d, y G',
              'yyyyMMMM': 'MMMM y G',
              'yyyyQQQ': 'QQQ y G',
              'yyyyQQQQ': 'QQQQ y G'
            }
          }
        }
      },
      'timeZoneNames': {
        'hourFormat': '+HH:mm;-HH:mm',
        'gmtFormat': 'GMT{0}',
        'gmtZeroFormat': 'GMT'
      }
    },
    'numbers': {
      'currencies': {
        'USD': {
          'displayName': 'US Dollar',
          'symbol': '$',
          'symbol-alt-narrow': '$'
        },
        'EUR': {
          'displayName': 'Euro',
          'symbol': '€',
          'symbol-alt-narrow': '€'
        },
        'GBP': {
          'displayName': 'British Pound',
          'symbol-alt-narrow': '£'
        }
      },
      'defaultNumberingSystem': 'latn',
      'minimumGroupingDigits': '1',
      'symbols-numberSystem-latn': {
        'decimal': '.',
        'group': ',',
        'list': ';',
        'percentSign': '%',
        'plusSign': '+',
        'minusSign': '-',
        'exponential': 'E',
        'superscriptingExponent': '×',
        'perMille': '‰',
        'infinity': '∞',
        'nan': 'NaN',
        'timeSeparator': ':'
      },
      'decimalFormats-numberSystem-latn': {
        'standard': '#,##0.###'
      },
      'percentFormats-numberSystem-latn': {
        'standard': '#,##0%'
      },
      'currencyFormats-numberSystem-latn': {
        'standard': '¤#,##0.00',
        'accounting': '¤#,##0.00;(¤#,##0.00)'
      },
      'scientificFormats-numberSystem-latn': {
        'standard': '#E0'
      }
    }
  };
  IntlBase.blazorDefaultObject = {
    'numbers': {
      'mapper': {
        '0': '0',
        '1': '1',
        '2': '2',
        '3': '3',
        '4': '4',
        '5': '5',
        '6': '6',
        '7': '7',
        '8': '8',
        '9': '9'
      },
      'mapperDigits': '0123456789',
      'numberSymbols': {
        'decimal': '.',
        'group': ',',
        'plusSign': '+',
        'minusSign': '-',
        'percentSign': '%',
        'nan': 'NaN',
        'timeSeparator': ':',
        'infinity': '∞'
      },
      'timeSeparator': ':',
      'currencySymbol': '$',
      'currencypData': {
        'nlead': '$',
        'nend': '',
        'groupSeparator': ',',
        'groupData': {
          'primary': 3
        },
        'maximumFraction': 2,
        'minimumFraction': 2
      },
      'percentpData': {
        'nlead': '',
        'nend': '%',
        'groupSeparator': ',',
        'groupData': {
          'primary': 3
        },
        'maximumFraction': 2,
        'minimumFraction': 2
      },
      'percentnData': {
        'nlead': '-',
        'nend': '%',
        'groupSeparator': ',',
        'groupData': {
          'primary': 3
        },
        'maximumFraction': 2,
        'minimumFraction': 2
      },
      'currencynData': {
        'nlead': '($',
        'nend': ')',
        'groupSeparator': ',',
        'groupData': {
          'primary': 3
        },
        'maximumFraction': 2,
        'minimumFraction': 2
      },
      'decimalnData': {
        'nlead': '-',
        'nend': '',
        'groupData': {
          'primary': 3
        },
        'maximumFraction': 2,
        'minimumFraction': 2
      },
      'decimalpData': {
        'nlead': '',
        'nend': '',
        'groupData': {
          'primary': 3
        },
        'maximumFraction': 2,
        'minimumFraction': 2
      }
    },
    'dates': {
      'dayPeriods': {
        'am': 'AM',
        'pm': 'PM'
      },
      'dateSeperator': '/',
      'days': {
        'abbreviated': {
          'sun': 'Sun',
          'mon': 'Mon',
          'tue': 'Tue',
          'wed': 'Wed',
          'thu': 'Thu',
          'fri': 'Fri',
          'sat': 'Sat'
        },
        'short': {
          'sun': 'Su',
          'mon': 'Mo',
          'tue': 'Tu',
          'wed': 'We',
          'thu': 'Th',
          'fri': 'Fr',
          'sat': 'Sa'
        },
        'wide': {
          'sun': 'Sunday',
          'mon': 'Monday',
          'tue': 'Tuesday',
          'wed': 'Wednesday',
          'thu': 'Thursday',
          'fri': 'Friday',
          'sat': 'Saturday'
        }
      },
      'months': {
        'abbreviated': {
          '1': 'Jan',
          '2': 'Feb',
          '3': 'Mar',
          '4': 'Apr',
          '5': 'May',
          '6': 'Jun',
          '7': 'Jul',
          '8': 'Aug',
          '9': 'Sep',
          '10': 'Oct',
          '11': 'Nov',
          '12': 'Dec'
        },
        'wide': {
          '1': 'January',
          '2': 'February',
          '3': 'March',
          '4': 'April',
          '5': 'May',
          '6': 'June',
          '7': 'July',
          '8': 'August',
          '9': 'September',
          '10': 'October',
          '11': 'November',
          '12': 'December'
        }
      },
      'eras': {
        '1': 'AD'
      }
    }
  };
  /* tslint:enable:quotemark */

  IntlBase.monthIndex = {
    3: 'abbreviated',
    4: 'wide',
    5: 'narrow',
    1: 'abbreviated'
  };
  /**
   *
   */

  IntlBase.month = 'months';
  IntlBase.days = 'days';
  /**
   * Default numerber Object
   */

  IntlBase.patternMatcher = {
    C: 'currency',
    P: 'percent',
    N: 'decimal',
    A: 'currency',
    E: 'scientific'
  };
  /**
   * Returns the resultant pattern based on the skeleton, dateObject and the type provided
   *
   * @private
   * @param {string} skeleton ?
   * @param {Object} dateObject ?
   * @param {string} type ?
   * @param {boolean} isIslamic ?
   * @param {string} blazorCulture ?
   * @returns {string} ?
   */

  function getResultantPattern(skeleton, dateObject, type, isIslamic, blazorCulture) {
    var resPattern;
    var iType = type || 'date';

    if (blazorCulture) {
      resPattern = compareBlazorDateFormats({
        skeleton: skeleton
      }, blazorCulture).format || compareBlazorDateFormats({
        skeleton: 'd'
      }, 'en-US').format;
    } else {
      if (IntlBase.basicPatterns.indexOf(skeleton) !== -1) {
        resPattern = getValue(iType + 'Formats.' + skeleton, dateObject);

        if (iType === 'dateTime') {
          var dPattern = getValue('dateFormats.' + skeleton, dateObject);
          var tPattern = getValue('timeFormats.' + skeleton, dateObject);
          resPattern = resPattern.replace('{1}', dPattern).replace('{0}', tPattern);
        }
      } else {
        resPattern = getValue('dateTimeFormats.availableFormats.' + skeleton, dateObject);
      }

      if (isUndefined(resPattern) && skeleton === 'yMd') {
        resPattern = 'M/d/y';
      }
    }

    return resPattern;
  }

  IntlBase.getResultantPattern = getResultantPattern;
  /**
   * Returns the dependable object for provided cldr data and culture
   *
   * @private
   * @param {Object} cldr ?
   * @param {string} culture ?
   * @param {string} mode ?
   * @param {boolean} isNumber ?
   * @returns {any} ?
   */

  function getDependables(cldr, culture, mode, isNumber) {
    var ret = {};
    var calendartype = mode || 'gregorian';
    ret.parserObject = ParserBase.getMainObject(cldr, culture) || (isBlazor() ? IntlBase.blazorDefaultObject : IntlBase.defaultObject);

    if (isNumber) {
      ret.numericObject = getValue('numbers', ret.parserObject);
    } else {
      var dateString = isBlazor() ? 'dates' : 'dates.calendars.' + calendartype;
      ret.dateObject = getValue(dateString, ret.parserObject);
    }

    return ret;
  }

  IntlBase.getDependables = getDependables;
  /**
   * Returns the symbol pattern for provided parameters
   *
   * @private
   * @param {string} type ?
   * @param {string} numSystem ?
   * @param {Object} obj ?
   * @param {boolean} isAccount ?
   * @returns {string} ?
   */

  function getSymbolPattern(type, numSystem, obj, isAccount) {
    return getValue(type + 'Formats-numberSystem-' + numSystem + (isAccount ? '.accounting' : '.standard'), obj) || (isAccount ? getValue(type + 'Formats-numberSystem-' + numSystem + '.standard', obj) : '');
  }

  IntlBase.getSymbolPattern = getSymbolPattern;
  /**
   *
   * @param {string} format ?
   * @returns {string} ?
   */

  function ConvertDateToWeekFormat(format) {
    var convertMapper = format.match(IntlBase.dateConverterMapper);

    if (convertMapper && isBlazor()) {
      var tempString = convertMapper[0].length === 3 ? 'EEE' : 'EEEE';
      return format.replace(IntlBase.dateConverterMapper, tempString);
    }

    return format;
  }

  IntlBase.ConvertDateToWeekFormat = ConvertDateToWeekFormat;
  /**
   *
   * @param {DateFormatOptions} formatOptions ?
   * @param {string} culture ?
   * @returns {DateFormatOptions} ?
   */

  function compareBlazorDateFormats(formatOptions, culture) {
    var format = formatOptions.format || formatOptions.skeleton;
    var curFormatMapper = getValue((culture || 'en-US') + '.' + format, blazorCultureFormats);

    if (!curFormatMapper) {
      curFormatMapper = getValue('en-US.' + format, blazorCultureFormats);
    }

    if (curFormatMapper) {
      curFormatMapper = ConvertDateToWeekFormat(curFormatMapper);
      formatOptions.format = curFormatMapper.replace(/tt/, 'a');
    }

    return formatOptions;
  }

  IntlBase.compareBlazorDateFormats = compareBlazorDateFormats;
  /**
   * Returns proper numeric skeleton
   *
   * @private
   * @param {string} skeleton ?
   * @returns {any} ?
   */

  function getProperNumericSkeleton(skeleton) {
    var matches = skeleton.match(IntlBase.formatRegex);
    var ret = {};
    var pattern = matches[1].toUpperCase();
    ret.isAccount = pattern === 'A'; // eslint-disable-next-line

    ret.type = IntlBase.patternMatcher[pattern];

    if (skeleton.length > 1) {
      ret.fractionDigits = parseInt(matches[2], 10);
    }

    return ret;
  }

  IntlBase.getProperNumericSkeleton = getProperNumericSkeleton;
  /**
   * Returns format data for number formatting like minimum fraction, maximum fraction, etc..,
   *
   * @private
   * @param {string} pattern ?
   * @param {boolean} needFraction ?
   * @param {string} cSymbol ?
   * @param {boolean} fractionOnly ?
   * @returns {any} ?
   */

  function getFormatData(pattern, needFraction, cSymbol, fractionOnly) {
    var nData = fractionOnly ? {} : {
      nlead: '',
      nend: ''
    };
    var match = pattern.match(IntlBase.customRegex);

    if (match) {
      if (!fractionOnly) {
        nData.nlead = changeCurrencySymbol(match[1], cSymbol);
        nData.nend = changeCurrencySymbol(match[10], cSymbol);
        nData.groupPattern = match[4];
      }

      var fraction = match[7];

      if (fraction && needFraction) {
        var fmatch = fraction.match(fractionRegex);

        if (!isNullOrUndefined(fmatch)) {
          nData.minimumFraction = fmatch.length;
        } else {
          nData.minimumFraction = 0;
        }

        nData.maximumFraction = fraction.length - 1;
      }
    }

    return nData;
  }

  IntlBase.getFormatData = getFormatData;
  /**
   * Changes currency symbol
   *
   * @private
   * @param {string} val ?
   * @param {string} sym ?
   * @returns {string} ?
   */

  function changeCurrencySymbol(val, sym) {
    if (val) {
      return val.replace(IntlBase.defaultCurrency, sym);
    }

    return '';
  }

  IntlBase.changeCurrencySymbol = changeCurrencySymbol;
  /**
   * Returns currency symbol based on currency code ?
   *
   * @private
   * @param {Object} numericObject ?
   * @param {string} currencyCode ?
   * @param {string} altSymbol ?
   * @returns {string} ?
   */

  function getCurrencySymbol(numericObject, currencyCode, altSymbol) {
    var symbol = altSymbol ? '.' + altSymbol : '.symbol';
    var getCurrency = getValue('currencies.' + currencyCode + symbol, numericObject) || getValue('currencies.' + currencyCode + '.symbol-alt-narrow', numericObject) || '$';
    return getCurrency;
  }

  IntlBase.getCurrencySymbol = getCurrencySymbol;
  /**
   * Returns formatting options for custom number format
   *
   * @private
   * @param {string} format ?
   * @param {CommonOptions} dOptions ?
   * @param {any} obj ?
   * @returns {any} ?
   */

  function customFormat(format, dOptions, obj) {
    var options = {};
    var formatSplit = format.split(';');
    var data = ['pData', 'nData', 'zeroData'];

    for (var i = 0; i < formatSplit.length; i++) {
      // eslint-disable-next-line
      options[data[i]] = customNumberFormat(formatSplit[i], dOptions, obj);
    }

    if (isNullOrUndefined(options.nData)) {
      options.nData = extend({}, options.pData);
      options.nData.nlead = isNullOrUndefined(dOptions) ? '-' + options.nData.nlead : dOptions.minusSymbol + options.nData.nlead;
    }

    return options;
  }

  IntlBase.customFormat = customFormat;
  /**
   * Returns custom formatting options
   *
   * @private
   * @param {string} format ?
   * @param {CommonOptions} dOptions ?
   * @param {Object} numObject ?
   * @returns {any} ?
   */

  function customNumberFormat(format, dOptions, numObject) {
    var cOptions = {
      type: 'decimal',
      minimumFractionDigits: 0,
      maximumFractionDigits: 0
    };
    var pattern = format.match(IntlBase.customRegex);

    if (isNullOrUndefined(pattern) || pattern[5] === '' && format !== 'N/A') {
      cOptions.type = undefined;
      return cOptions;
    }

    cOptions.nlead = pattern[1];
    cOptions.nend = pattern[10];
    var integerPart = pattern[6];
    var spaceCapture = integerPart.match(/\ $/g) ? true : false;
    var spaceGrouping = integerPart.replace(/\ $/g, '').indexOf(' ') !== -1;
    cOptions.useGrouping = integerPart.indexOf(',') !== -1 || spaceGrouping;
    integerPart = integerPart.replace(/,/g, '');
    var fractionPart = pattern[7];

    if (integerPart.indexOf('0') !== -1) {
      cOptions.minimumIntegerDigits = integerPart.length - integerPart.indexOf('0');
    }

    if (!isNullOrUndefined(fractionPart)) {
      cOptions.minimumFractionDigits = fractionPart.lastIndexOf('0');
      cOptions.maximumFractionDigits = fractionPart.lastIndexOf('#');

      if (cOptions.minimumFractionDigits === -1) {
        cOptions.minimumFractionDigits = 0;
      }

      if (cOptions.maximumFractionDigits === -1 || cOptions.maximumFractionDigits < cOptions.minimumFractionDigits) {
        cOptions.maximumFractionDigits = cOptions.minimumFractionDigits;
      }
    }

    if (!isNullOrUndefined(dOptions)) {
      extend(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '$', dOptions.currencySymbol));

      if (!cOptions.isCurrency) {
        extend(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '%', dOptions.percentSymbol));
      }
    } else {
      extend(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '%', '%'));
    }

    if (!isNullOrUndefined(numObject)) {
      var symbolPattern = getSymbolPattern(cOptions.type, dOptions.numberMapper.numberSystem, numObject, false);

      if (cOptions.useGrouping) {
        // eslint-disable-next-line
        cOptions.groupSeparator = spaceGrouping ? ' ' : dOptions.numberMapper.numberSymbols[mapper[2]];
        cOptions.groupData = NumberFormat.getGroupingDetails(symbolPattern.split(';')[0]);
      }

      cOptions.nlead = cOptions.nlead.replace(/'/g, '');
      cOptions.nend = spaceCapture ? ' ' + cOptions.nend.replace(/'/g, '') : cOptions.nend.replace(/'/g, '');
    }

    return cOptions;
  }

  IntlBase.customNumberFormat = customNumberFormat;
  /**
   * Returns formatting options for currency or percent type
   *
   * @private
   * @param {string[]} parts ?
   * @param {string} actual ?
   * @param {string} symbol ?
   * @returns {any} ?
   */

  function isCurrencyPercent(parts, actual, symbol) {
    var options = {
      nlead: parts[0],
      nend: parts[1]
    };

    for (var i = 0; i < 2; i++) {
      var part = parts[i];
      var loc = part.indexOf(actual);

      if (loc !== -1 && (loc < part.indexOf('\'') || loc > part.lastIndexOf('\''))) {
        // eslint-disable-next-line
        options[typeMapper[i]] = part.substr(0, loc) + symbol + part.substr(loc + 1); // eslint-disable-next-line

        options[typeMapper[actual]] = true;
        options.type = options.isCurrency ? 'currency' : 'percent';
        break;
      }
    }

    return options;
  }

  IntlBase.isCurrencyPercent = isCurrencyPercent;
  /**
   * Returns culture based date separator
   *
   * @private
   * @param {Object} dateObj ?
   * @returns {string} ?
   */

  function getDateSeparator(dateObj) {
    var value = (getValue('dateFormats.short', dateObj) || '').match(/[d‏M‏]([^d‏M])[d‏M‏]/i);
    return value ? value[1] : '/';
  }

  IntlBase.getDateSeparator = getDateSeparator;
  /**
   * Returns Native Date Time pattern
   *
   * @private
   * @param {string} culture ?
   * @param {DateFormatOptions} options ?
   * @param {Object} cldr ?
   * @param {boolean} isExcelFormat ?
   * @returns {string} ?
   */

  function getActualDateTimeFormat(culture, options, cldr, isExcelFormat) {
    var dependable = getDependables(cldr, culture, options.calendar);

    if (isBlazor()) {
      options = compareBlazorDateFormats(options, culture);
    }

    var actualPattern = options.format || getResultantPattern(options.skeleton, dependable.dateObject, options.type);

    if (isExcelFormat) {
      actualPattern = actualPattern.replace(patternRegex, function (pattern) {
        // eslint-disable-next-line
        return patternMatch[pattern];
      });

      if (actualPattern.indexOf('z') !== -1) {
        var tLength = actualPattern.match(/z/g).length;
        var timeZonePattern = void 0;
        var options_1 = {
          'timeZone': {}
        };
        options_1.numMapper = ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr));
        options_1.timeZone = getValue('dates.timeZoneNames', dependable.parserObject);
        var value = new Date();
        var timezone = value.getTimezoneOffset();
        var pattern = tLength < 4 ? '+H;-H' : options_1.timeZone.hourFormat;
        pattern = pattern.replace(/:/g, options_1.numMapper.timeSeparator);

        if (timezone === 0) {
          timeZonePattern = options_1.timeZone.gmtZeroFormat;
        } else {
          timeZonePattern = DateFormat.getTimeZoneValue(timezone, pattern);
          timeZonePattern = options_1.timeZone.gmtFormat.replace(/\{0\}/, timeZonePattern);
        }

        actualPattern = actualPattern.replace(/[z]+/, '"' + timeZonePattern + '"');
      }

      actualPattern = actualPattern.replace(/ $/, '');
    }

    return actualPattern;
  }

  IntlBase.getActualDateTimeFormat = getActualDateTimeFormat;
  /**
   *
   * @param {string} actual ?
   * @param {any} option ?
   * @returns {any} ?
   */
  // eslint-disable-next-line

  function processSymbol(actual, option) {
    if (actual.indexOf(',') !== -1) {
      // eslint-disable-next-line
      var split = actual.split(',');
      actual = split[0] + getValue('numberMapper.numberSymbols.group', option) + split[1].replace('.', getValue('numberMapper.numberSymbols.decimal', option));
    } else {
      actual = actual.replace('.', getValue('numberMapper.numberSymbols.decimal', option));
    }

    return actual;
  }
  /**
   * Returns Native Number pattern
   *
   * @private
   * @param {string} culture ?
   * @param {NumberFormatOptions} options ?
   * @param {Object} cldr ?
   * @param {boolean} isExcel ?
   * @returns {string} ?
   */


  function getActualNumberFormat(culture, options, cldr, isExcel) {
    var dependable = getDependables(cldr, culture, '', true);
    var parseOptions = {
      custom: true
    };
    var numrericObject = dependable.numericObject;
    var minFrac;
    var curObj = {};
    var curMatch = (options.format || '').match(IntlBase.currencyFormatRegex);
    var type = IntlBase.formatRegex.test(options.format) ? getProperNumericSkeleton(options.format || 'N') : {};
    var dOptions = {};

    if (curMatch) {
      dOptions.numberMapper = isBlazor() ? extend({}, dependable.numericObject) : ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr), true);
      var curCode = isBlazor() ? getValue('currencySymbol', dependable.numericObject) : getCurrencySymbol(dependable.numericObject, options.currency || defaultCurrencyCode, options.altSymbol);
      var symbolPattern = getSymbolPattern('currency', dOptions.numberMapper.numberSystem, dependable.numericObject, /a/i.test(options.format));
      symbolPattern = symbolPattern.replace(/\u00A4/g, curCode);
      var split = symbolPattern.split(';');
      curObj.hasNegativePattern = isBlazor() ? true : split.length > 1;
      curObj.nData = isBlazor() ? getValue(type.type + 'nData', numrericObject) : getFormatData(split[1] || '-' + split[0], true, curCode);
      curObj.pData = isBlazor() ? getValue(type.type + 'pData', numrericObject) : getFormatData(split[0], false, curCode);

      if (!curMatch[2] && !options.minimumFractionDigits && !options.maximumFractionDigits) {
        minFrac = getFormatData(symbolPattern.split(';')[0], true, '', true).minimumFraction;
      }
    }

    var actualPattern;

    if (IntlBase.formatRegex.test(options.format) || !options.format) {
      extend(parseOptions, getProperNumericSkeleton(options.format || 'N'));
      parseOptions.custom = false;
      actualPattern = '###0';

      if (parseOptions.fractionDigits || options.minimumFractionDigits || options.maximumFractionDigits || minFrac) {
        var defaultMinimum = 0;

        if (parseOptions.fractionDigits) {
          options.minimumFractionDigits = options.maximumFractionDigits = parseOptions.fractionDigits;
        }

        actualPattern = fractionDigitsPattern(actualPattern, minFrac || parseOptions.fractionDigits || options.minimumFractionDigits || defaultMinimum, options.maximumFractionDigits || defaultMinimum);
      }

      if (options.minimumIntegerDigits) {
        actualPattern = minimumIntegerPattern(actualPattern, options.minimumIntegerDigits);
      }

      if (options.useGrouping) {
        actualPattern = groupingPattern(actualPattern);
      }

      if (parseOptions.type === 'currency' || parseOptions.type && isBlazor()) {
        if (isBlazor() && parseOptions.type !== 'currency') {
          curObj.pData = getValue(parseOptions.type + 'pData', numrericObject);
          curObj.nData = getValue(parseOptions.type + 'nData', numrericObject);
        }

        var cPattern = actualPattern;
        actualPattern = curObj.pData.nlead + cPattern + curObj.pData.nend;

        if (curObj.hasNegativePattern || isBlazor()) {
          actualPattern += ';' + curObj.nData.nlead + cPattern + curObj.nData.nend;
        }
      }

      if (parseOptions.type === 'percent' && !isBlazor()) {
        actualPattern += ' %';
      }
    } else {
      actualPattern = options.format.replace(/'/g, '"');
    }

    if (Object.keys(dOptions).length > 0) {
      actualPattern = !isExcel ? processSymbol(actualPattern, dOptions) : actualPattern;
    }

    return actualPattern;
  }

  IntlBase.getActualNumberFormat = getActualNumberFormat;
  /**
   *
   * @param {string} pattern ?
   * @param {number} minDigits ?
   * @param {number} maxDigits ?
   * @returns {string} ?
   */

  function fractionDigitsPattern(pattern, minDigits, maxDigits) {
    pattern += '.';

    for (var a = 0; a < minDigits; a++) {
      pattern += '0';
    }

    if (minDigits < maxDigits) {
      var diff = maxDigits - minDigits;

      for (var b = 0; b < diff; b++) {
        pattern += '#';
      }
    }

    return pattern;
  }

  IntlBase.fractionDigitsPattern = fractionDigitsPattern;
  /**
   *
   * @param {string} pattern ?
   * @param {number} digits ?
   * @returns {string} ?
   */

  function minimumIntegerPattern(pattern, digits) {
    var temp = pattern.split('.');
    var integer = '';

    for (var x = 0; x < digits; x++) {
      integer += '0';
    }

    return temp[1] ? integer + '.' + temp[1] : integer;
  }

  IntlBase.minimumIntegerPattern = minimumIntegerPattern;
  /**
   *
   * @param {string} pattern ?
   * @returns {string} ?
   */

  function groupingPattern(pattern) {
    var temp = pattern.split('.');
    var integer = temp[0];
    var no = 3 - integer.length % 3;
    var hash = no && no === 1 ? '#' : no === 2 ? '##' : '';
    integer = hash + integer;
    pattern = '';

    for (var x = integer.length - 1; x > 0; x = x - 3) {
      pattern = ',' + integer[x - 2] + integer[x - 1] + integer[x] + pattern;
    }

    pattern = pattern.slice(1);
    return temp[1] ? pattern + '.' + temp[1] : pattern;
  }

  IntlBase.groupingPattern = groupingPattern;
  /**
   *
   * @param {string} culture ?
   * @param {Object} cldr ?
   * @returns {number} ?
   */

  function getWeekData(culture, cldr) {
    var firstDay = defaultFirstDay;
    var mapper = getValue('supplemental.weekData.firstDay', cldr);
    var iCulture = culture;

    if (/en-/.test(iCulture)) {
      iCulture = iCulture.slice(3);
    }

    iCulture = iCulture.slice(0, 2).toUpperCase() + iCulture.substr(2);

    if (mapper) {
      firstDay = mapper[iCulture] || mapper[iCulture.slice(0, 2)] || defaultFirstDay;
    }

    return firstDayMapper[firstDay];
  }

  IntlBase.getWeekData = getWeekData;
  /**
   * @private
   * @param {any} pData ?
   * @param {string} aCurrency ?
   * @param {string} rCurrency ?
   * @returns {void} ?
   */

  function replaceBlazorCurrency(pData, aCurrency, rCurrency) {
    var iCurrency = getBlazorCurrencySymbol(rCurrency);

    if (aCurrency !== iCurrency) {
      for (var _i = 0, pData_1 = pData; _i < pData_1.length; _i++) {
        var data = pData_1[_i];
        data.nend = data.nend.replace(aCurrency, iCurrency);
        data.nlead = data.nlead.replace(aCurrency, iCurrency);
      }
    }
  }

  IntlBase.replaceBlazorCurrency = replaceBlazorCurrency;
  /**
   * @private
   * @param {Date} date ?
   * @returns {number} ?
   */

  function getWeekOfYear(date) {
    var newYear = new Date(date.getFullYear(), 0, 1);
    var day = newYear.getDay();
    var weeknum;
    day = day >= 0 ? day : day + 7;
    var daynum = Math.floor((date.getTime() - newYear.getTime() - (date.getTimezoneOffset() - newYear.getTimezoneOffset()) * 60000) / 86400000) + 1;

    if (day < 4) {
      weeknum = Math.floor((daynum + day - 1) / 7) + 1;

      if (weeknum > 52) {
        var nYear = new Date(date.getFullYear() + 1, 0, 1);
        var nday = nYear.getDay();
        nday = nday >= 0 ? nday : nday + 7;
        weeknum = nday < 4 ? 1 : 53;
      }
    } else {
      weeknum = Math.floor((daynum + day - 1) / 7);
    }

    return weeknum;
  }

  IntlBase.getWeekOfYear = getWeekOfYear;
})(IntlBase || (IntlBase = {}));

var headerRegex = /^(.*?):[ \t]*([^\r\n]*)$/gm;
var defaultType = 'GET';
/**
 * Ajax class provides ability to make asynchronous HTTP request to the server
 * ```typescript
 *   var ajax = new Ajax("index.html", "GET", true);
 *   ajax.send().then(
 *               function (value) {
 *                   console.log(value);
 *               },
 *               function (reason) {
 *                   console.log(reason);
 *               });
 * ```
 */

var Ajax =
/** @__PURE__ @class */
function () {
  /**
   * Constructor for Ajax class
   *
   * @param  {string|Object} options ?
   * @param  {string} type ?
   * @param  {boolean} async ?
   * @returns defaultType any
   */
  function Ajax(options, type, async, contentType) {
    /**
     * A boolean value indicating whether the request should be sent asynchronous or not.
     *
     * @default true
     */
    this.mode = true;
    /**
     * A boolean value indicating whether to ignore the promise reject.
     *
     * @private
     * @default true
     */

    this.emitError = true;
    this.options = {};

    if (typeof options === 'string') {
      this.url = options;
      this.type = type ? type.toUpperCase() : defaultType;
      this.mode = !isNullOrUndefined(async) ? async : true;
    } else if (typeof options === 'object') {
      this.options = options;
      merge(this, this.options);
    }

    this.type = this.type ? this.type.toUpperCase() : defaultType;
    this.contentType = this.contentType !== undefined ? this.contentType : contentType;
  }
  /**
   *
   * Send the request to server.
   *
   * @param {any} data - To send the user data
   * @return {Promise} ?
   */


  Ajax.prototype.send = function (data) {
    var _this = this;

    this.data = isNullOrUndefined(data) ? this.data : data;
    var eventArgs = {
      cancel: false,
      httpRequest: null
    };
    var promise = new Promise(function (resolve, reject) {
      _this.httpRequest = new XMLHttpRequest();

      _this.httpRequest.onreadystatechange = function () {
        _this.stateChange(resolve, reject);
      };

      if (!isNullOrUndefined(_this.onLoad)) {
        _this.httpRequest.onload = _this.onLoad;
      }

      if (!isNullOrUndefined(_this.onProgress)) {
        _this.httpRequest.onprogress = _this.onProgress;
      }
      /* istanbul ignore next */


      if (!isNullOrUndefined(_this.onAbort)) {
        _this.httpRequest.onabort = _this.onAbort;
      }
      /* istanbul ignore next */


      if (!isNullOrUndefined(_this.onError)) {
        _this.httpRequest.onerror = _this.onError;
      } //** Upload Events **/

      /* istanbul ignore next */


      if (!isNullOrUndefined(_this.onUploadProgress)) {
        _this.httpRequest.upload.onprogress = _this.onUploadProgress;
      }

      _this.httpRequest.open(_this.type, _this.url, _this.mode); // Set default headers


      if (!isNullOrUndefined(_this.data) && _this.contentType !== null) {
        _this.httpRequest.setRequestHeader('Content-Type', _this.contentType || 'application/json; charset=utf-8');
      }

      if (_this.beforeSend) {
        eventArgs.httpRequest = _this.httpRequest;

        _this.beforeSend(eventArgs);
      }

      if (!eventArgs.cancel) {
        _this.httpRequest.send(!isNullOrUndefined(_this.data) ? _this.data : null);
      }
    });
    return promise;
  };

  Ajax.prototype.successHandler = function (data) {
    if (this.onSuccess) {
      this.onSuccess(data, this);
    }

    return data;
  };

  Ajax.prototype.failureHandler = function (reason) {
    if (this.onFailure) {
      this.onFailure(this.httpRequest);
    }

    return reason;
  };

  Ajax.prototype.stateChange = function (resolve, reject) {
    var data = this.httpRequest.responseText;

    if (this.dataType && this.dataType.toLowerCase() === 'json') {
      if (data === '') {
        data = undefined;
      } else {
        try {
          data = JSON.parse(data);
        } catch (error) {// no exception handle
        }
      }
    }

    if (this.httpRequest.readyState === 4) {
      //success range should be 200 to 299
      if (this.httpRequest.status >= 200 && this.httpRequest.status <= 299 || this.httpRequest.status === 304) {
        resolve(this.successHandler(data));
      } else {
        if (this.emitError) {
          reject(new Error(this.failureHandler(this.httpRequest.statusText)));
        } else {
          resolve();
        }
      }
    }
  };
  /**
   * To get the response header from XMLHttpRequest
   *
   * @param  {string} key Key to search in the response header
   * @returns {string} ?
   */


  Ajax.prototype.getResponseHeader = function (key) {
    var responseHeaders;
    var header; // eslint-disable-next-line

    responseHeaders = {};
    var headers = headerRegex.exec(this.httpRequest.getAllResponseHeaders());

    while (headers) {
      responseHeaders[headers[1].toLowerCase()] = headers[2];
      headers = headerRegex.exec(this.httpRequest.getAllResponseHeaders());
    } // eslint-disable-next-line


    header = responseHeaders[key.toLowerCase()];
    return isNullOrUndefined(header) ? null : header;
  };

  return Ajax;
}();

var REGX_MOBILE = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini|mobile/i;
var REGX_IE = /msie|trident/i;
var REGX_IE11 = /Trident\/7\./;
var REGX_IOS = /(ipad|iphone|ipod touch)/i;
var REGX_IOS7 = /(ipad|iphone|ipod touch);.*os 7_\d|(ipad|iphone|ipod touch);.*os 8_\d/i;
var REGX_ANDROID = /android/i;
var REGX_WINDOWS = /trident|windows phone|edge/i;
var REGX_VERSION = /(version)[ /]([\w.]+)/i;
var REGX_BROWSER = {
  OPERA: /(opera|opr)(?:.*version|)[ /]([\w.]+)/i,
  EDGE: /(edge)(?:.*version|)[ /]([\w.]+)/i,
  CHROME: /(chrome|crios)[ /]([\w.]+)/i,
  PANTHOMEJS: /(phantomjs)[ /]([\w.]+)/i,
  SAFARI: /(safari)[ /]([\w.]+)/i,
  WEBKIT: /(webkit)[ /]([\w.]+)/i,
  MSIE: /(msie|trident) ([\w.]+)/i,
  MOZILLA: /(mozilla)(?:.*? rv:([\w.]+)|)/i
};
/* istanbul ignore else  */

if (typeof window !== 'undefined') {
  window.browserDetails = window.browserDetails || {};
}
/**
 * Get configuration details for Browser
 *
 * @private
 */


var Browser =
/** @__PURE__ @class */
function () {
  function Browser() {}

  Browser.extractBrowserDetail = function () {
    var browserInfo = {
      culture: {}
    };
    var keys = Object.keys(REGX_BROWSER);
    var clientInfo = [];

    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
      var key = keys_1[_i];
      clientInfo = Browser.userAgent.match(REGX_BROWSER[key]);

      if (clientInfo) {
        browserInfo.name = clientInfo[1].toLowerCase() === 'opr' ? 'opera' : clientInfo[1].toLowerCase();
        browserInfo.name = clientInfo[1].toLowerCase() === 'crios' ? 'chrome' : browserInfo.name;
        browserInfo.version = clientInfo[2];
        browserInfo.culture.name = browserInfo.culture.language = navigator.language; // eslint-disable-next-line

        if (!!Browser.userAgent.match(REGX_IE11)) {
          browserInfo.name = 'msie';
          break;
        }

        var version = Browser.userAgent.match(REGX_VERSION);

        if (browserInfo.name === 'safari' && version) {
          browserInfo.version = version[2];
        }

        break;
      }
    }

    return browserInfo;
  };
  /**
   * To get events from the browser
   *
   * @param {string} event - type of event triggered.
   * @returns {boolean}
   */


  Browser.getEvent = function (event) {
    // eslint-disable-next-line
    var events = {
      start: {
        isPointer: 'pointerdown',
        isTouch: 'touchstart',
        isDevice: 'mousedown'
      },
      move: {
        isPointer: 'pointermove',
        isTouch: 'touchmove',
        isDevice: 'mousemove'
      },
      end: {
        isPointer: 'pointerup',
        isTouch: 'touchend',
        isDevice: 'mouseup'
      },
      cancel: {
        isPointer: 'pointercancel',
        isTouch: 'touchcancel',
        isDevice: 'mouseleave'
      }
    };
    return Browser.isPointer ? events[event].isPointer : Browser.isTouch ? events[event].isTouch + (!Browser.isDevice ? ' ' + events[event].isDevice : '') : events[event].isDevice;
  };
  /**
   * To get the Touch start event from browser
   *
   * @returns {string}
   */


  Browser.getTouchStartEvent = function () {
    return Browser.getEvent('start');
  };
  /**
   * To get the Touch end event from browser
   *
   * @returns {string}
   */


  Browser.getTouchEndEvent = function () {
    return Browser.getEvent('end');
  };
  /**
   * To get the Touch move event from browser
   *
   * @returns {string}
   */


  Browser.getTouchMoveEvent = function () {
    return Browser.getEvent('move');
  };
  /**
   * To cancel the touch event from browser
   *
   * @returns {string}
   */


  Browser.getTouchCancelEvent = function () {
    return Browser.getEvent('cancel');
  };
  /**
   * To get the value based on provided key and regX
   *
   * @param {string} key ?
   * @param {RegExp} regX ?
   * @returns {Object} ?
   */


  Browser.getValue = function (key, regX) {
    var browserDetails = window.browserDetails;

    if (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 && Browser.isTouch === true) {
      browserDetails['isIos'] = true;
      browserDetails['isDevice'] = true;
      browserDetails['isTouch'] = true;
      browserDetails['isPointer'] = true;
    }

    if ('undefined' === typeof browserDetails[key]) {
      return browserDetails[key] = regX.test(Browser.userAgent);
    }

    return browserDetails[key];
  };

  Object.defineProperty(Browser, "userAgent", {
    get: function () {
      return Browser.uA;
    },
    //Properties

    /**
     * Property specifies the userAgent of the browser. Default userAgent value is based on the browser.
     * Also we can set our own userAgent.
     *
     * @param {string} uA ?
     */
    set: function (uA) {
      Browser.uA = uA;
      window.browserDetails = {};
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Browser, "info", {
    //Read Only Properties

    /**
     * Property is to get the browser information like Name, Version and Language
     *
     * @returns {BrowserInfo} ?
     */
    get: function () {
      if (isUndefined(window.browserDetails.info)) {
        return window.browserDetails.info = Browser.extractBrowserDetail();
      }

      return window.browserDetails.info;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Browser, "isIE", {
    /**
     * Property is to get whether the userAgent is based IE.
     *
     * @returns {boolean} ?
     */
    get: function () {
      return Browser.getValue('isIE', REGX_IE);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Browser, "isTouch", {
    /**
     * Property is to get whether the browser has touch support.
     *
     * @returns {boolean} ?
     */
    get: function () {
      if (isUndefined(window.browserDetails.isTouch)) {
        return window.browserDetails.isTouch = 'ontouchstart' in window.navigator || window && window.navigator && window.navigator.maxTouchPoints > 0 || 'ontouchstart' in window;
      }

      return window.browserDetails.isTouch;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Browser, "isPointer", {
    /**
     * Property is to get whether the browser has Pointer support.
     *
     * @returns {boolean} ?
     */
    get: function () {
      if (isUndefined(window.browserDetails.isPointer)) {
        return window.browserDetails.isPointer = 'pointerEnabled' in window.navigator;
      }

      return window.browserDetails.isPointer;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Browser, "isMSPointer", {
    /**
     * Property is to get whether the browser has MSPointer support.
     *
     * @returns {boolean} ?
     */
    get: function () {
      if (isUndefined(window.browserDetails.isMSPointer)) {
        return window.browserDetails.isMSPointer = 'msPointerEnabled' in window.navigator;
      }

      return window.browserDetails.isMSPointer;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Browser, "isDevice", {
    /**
     * Property is to get whether the userAgent is device based.
     *
     * @returns {boolean} ?
     */
    get: function () {
      return Browser.getValue('isDevice', REGX_MOBILE);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Browser, "isIos", {
    /**
     * Property is to get whether the userAgent is IOS.
     *
     * @returns {boolean} ?
     */
    get: function () {
      return Browser.getValue('isIos', REGX_IOS);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Browser, "isIos7", {
    /**
     * Property is to get whether the userAgent is Ios7.
     *
     * @returns {boolean} ?
     */
    get: function () {
      return Browser.getValue('isIos7', REGX_IOS7);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Browser, "isAndroid", {
    /**
     * Property is to get whether the userAgent is Android.
     *
     * @returns {boolean} ?
     */
    get: function () {
      return Browser.getValue('isAndroid', REGX_ANDROID);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Browser, "isWebView", {
    /**
     * Property is to identify whether application ran in web view.
     *
     * @returns {boolean} ?
     */
    get: function () {
      if (isUndefined(window.browserDetails.isWebView)) {
        window.browserDetails.isWebView = !(isUndefined(window.cordova) && isUndefined(window.PhoneGap) && isUndefined(window.phonegap) && window.forge !== 'object');
        return window.browserDetails.isWebView;
      }

      return window.browserDetails.isWebView;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Browser, "isWindows", {
    /**
     * Property is to get whether the userAgent is Windows.
     *
     * @returns {boolean} ?
     */
    get: function () {
      return Browser.getValue('isWindows', REGX_WINDOWS);
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Browser, "touchStartEvent", {
    /**
     * Property is to get the touch start event. It returns event name based on browser.
     *
     * @returns {string} ?
     */
    get: function () {
      if (isUndefined(window.browserDetails.touchStartEvent)) {
        return window.browserDetails.touchStartEvent = Browser.getTouchStartEvent();
      }

      return window.browserDetails.touchStartEvent;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Browser, "touchMoveEvent", {
    /**
     * Property is to get the touch move event. It returns event name based on browser.
     *
     * @returns {string} ?
     */
    get: function () {
      if (isUndefined(window.browserDetails.touchMoveEvent)) {
        return window.browserDetails.touchMoveEvent = Browser.getTouchMoveEvent();
      }

      return window.browserDetails.touchMoveEvent;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Browser, "touchEndEvent", {
    /**
     * Property is to get the touch end event. It returns event name based on browser.
     *
     * @returns {string} ?
     */
    get: function () {
      if (isUndefined(window.browserDetails.touchEndEvent)) {
        return window.browserDetails.touchEndEvent = Browser.getTouchEndEvent();
      }

      return window.browserDetails.touchEndEvent;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Browser, "touchCancelEvent", {
    /**
     * Property is to cancel the touch end event.
     *
     * @returns {string} ?
     */
    get: function () {
      if (isUndefined(window.browserDetails.touchCancelEvent)) {
        return window.browserDetails.touchCancelEvent = Browser.getTouchCancelEvent();
      }

      return window.browserDetails.touchCancelEvent;
    },
    enumerable: true,
    configurable: true
  });
  /* istanbul ignore next */

  Browser.uA = typeof navigator !== 'undefined' ? navigator.userAgent : '';
  return Browser;
}();
/**
 * EventHandler class provides option to add, remove, clear and trigger events to a HTML DOM element
 * ```html
 * <div id="Eventdiv">  </div>
 * <script>
 *   let node: HTMLElement = document.querySelector("#Eventdiv");
 *   EventHandler.addEventListener(node, "click", function(){
 *       // click handler function code
 *   });
 *   EventHandler.addEventListener(node, "onmouseover", function(){
 *       // mouseover handler function code
 *   });
 *   EventHandler.removeEventListener(node, "click", function(){
 *       // click handler function code
 *   });
 *   eventObj.clearEvents();
 * </script>
 * ```
 */


var EventHandler =
/** @__PURE__ @class */
function () {
  function EventHandler() {} // to get the event data based on element


  EventHandler.addOrGetEventData = function (element) {
    if ('__eventList' in element) {
      return element.__eventList.events;
    } else {
      element.__eventList = {};
      return element.__eventList.events = [];
    }
  };
  /**
   * Add an event to the specified DOM element.
   *
   * @param {any} element - Target HTML DOM element
   * @param {string} eventName - A string that specifies the name of the event
   * @param {Function} listener - Specifies the function to run when the event occurs
   * @param {Object} bindTo - A object that binds 'this' variable in the event handler
   * @param {number} intDebounce - Specifies at what interval given event listener should be triggered.
   * @returns {Function} ?
   */


  EventHandler.add = function (element, eventName, listener, bindTo, intDebounce) {
    var eventData = EventHandler.addOrGetEventData(element);
    var debounceListener;

    if (intDebounce) {
      debounceListener = debounce(listener, intDebounce);
    } else {
      debounceListener = listener;
    }

    if (bindTo) {
      debounceListener = debounceListener.bind(bindTo);
    }

    var event = eventName.split(' ');

    for (var i = 0; i < event.length; i++) {
      eventData.push({
        name: event[i],
        listener: listener,
        debounce: debounceListener
      });

      if (Browser.isIE) {
        element.addEventListener(event[i], debounceListener);
      } else {
        element.addEventListener(event[i], debounceListener, {
          passive: false
        });
      }
    }

    return debounceListener;
  };
  /**
   * Remove an event listener that has been attached before.
   *
   * @param {any} element - Specifies the target html element to remove the event
   * @param {string} eventName - A string that specifies the name of the event to remove
   * @param {Function} listener - Specifies the function to remove
   * @returns {void} ?
   */


  EventHandler.remove = function (element, eventName, listener) {
    var eventData = EventHandler.addOrGetEventData(element);
    var event = eventName.split(' ');

    var _loop_1 = function (j) {
      var index = -1;
      var debounceListener;

      if (eventData && eventData.length !== 0) {
        eventData.some(function (x, i) {
          return x.name === event[j] && x.listener === listener ? (index = i, debounceListener = x.debounce, true) : false;
        });
      }

      if (index !== -1) {
        eventData.splice(index, 1);
      }

      if (debounceListener) {
        element.removeEventListener(event[j], debounceListener);
      }
    };

    for (var j = 0; j < event.length; j++) {
      _loop_1(j);
    }
  };
  /**
   * Clear all the event listeners that has been previously attached to the element.
   *
   * @param {any} element - Specifies the target html element to clear the events
   * @returns {void} ?
   */


  EventHandler.clearEvents = function (element) {
    var eventData;
    var copyData; // eslint-disable-next-line

    eventData = EventHandler.addOrGetEventData(element); // eslint-disable-next-line

    copyData = extend([], copyData, eventData);

    for (var i = 0; i < copyData.length; i++) {
      element.removeEventListener(copyData[i].name, copyData[i].debounce);
      eventData.shift();
    }
  };
  /**
   * Trigger particular event of the element.
   *
   * @param {any} element - Specifies the target html element to trigger the events
   * @param {string} eventName - Specifies the event to trigger for the specified element.
   * Can be a custom event, or any of the standard events.
   * @param {any} eventProp - Additional parameters to pass on to the event properties
   * @returns {void} ?
   */


  EventHandler.trigger = function (element, eventName, eventProp) {
    var eventData = EventHandler.addOrGetEventData(element);

    for (var _i = 0, eventData_1 = eventData; _i < eventData_1.length; _i++) {
      var event_1 = eventData_1[_i];

      if (event_1.name === eventName) {
        event_1.debounce.call(this, eventProp);
      }
    }
  };

  return EventHandler;
}();
/**
 * Functions related to dom operations.
 */


var SVG_REG = /^svg|^path|^g/;
/**
 * Function to create Html element.
 *
 * @param {string} tagName - Name of the tag, id and class names.
 * @param {ElementProperties} properties - Object to set properties in the element.
 * @param {ElementProperties} properties.id - To set the id to the created element.
 * @param {ElementProperties} properties.className - To add classes to the element.
 * @param {ElementProperties} properties.innerHTML - To set the innerHTML to element.
 * @param {ElementProperties} properties.styles - To set the some custom styles to element.
 * @param {ElementProperties} properties.attrs - To set the attributes to element.
 * @returns {any} ?
 * @private
 */

function createElement(tagName, properties) {
  var element = SVG_REG.test(tagName) ? document.createElementNS('http://www.w3.org/2000/svg', tagName) : document.createElement(tagName);

  if (typeof properties === 'undefined') {
    return element;
  }

  element.innerHTML = properties.innerHTML ? properties.innerHTML : '';

  if (properties.className !== undefined) {
    element.className = properties.className;
  }

  if (properties.id !== undefined) {
    element.id = properties.id;
  }

  if (properties.styles !== undefined) {
    element.setAttribute('style', properties.styles);
  }

  if (properties.attrs !== undefined) {
    attributes(element, properties.attrs);
  }

  return element;
}
/**
 * The function used to add the classes to array of elements
 *
 * @param  {Element[]|NodeList} elements - An array of elements that need to add a list of classes
 * @param  {string|string[]} classes - String or array of string that need to add an individual element as a class
 * @returns {any} .
 * @private
 */


function addClass(elements, classes) {
  var classList = getClassList(classes);

  for (var _i = 0, _a = elements; _i < _a.length; _i++) {
    var ele = _a[_i];

    for (var _b = 0, classList_1 = classList; _b < classList_1.length; _b++) {
      var className = classList_1[_b];

      if (isObject(ele)) {
        var curClass = getValue('attributes.className', ele);

        if (isNullOrUndefined(curClass)) {
          setValue('attributes.className', className, ele);
        } else if (!new RegExp('\\b' + className + '\\b', 'i').test(curClass)) {
          setValue('attributes.className', curClass + ' ' + className, ele);
        }
      } else {
        if (!ele.classList.contains(className)) {
          ele.classList.add(className);
        }
      }
    }
  }

  return elements;
}
/**
 * The function used to add the classes to array of elements
 *
 * @param  {Element[]|NodeList} elements - An array of elements that need to remove a list of classes
 * @param  {string|string[]} classes - String or array of string that need to add an individual element as a class
 * @returns {any} .
 * @private
 */


function removeClass(elements, classes) {
  var classList = getClassList(classes);

  for (var _i = 0, _a = elements; _i < _a.length; _i++) {
    var ele = _a[_i];
    var flag = isObject(ele);
    var canRemove = flag ? getValue('attributes.className', ele) : ele.className !== '';

    if (canRemove) {
      for (var _b = 0, classList_2 = classList; _b < classList_2.length; _b++) {
        var className = classList_2[_b];

        if (flag) {
          var classes_1 = getValue('attributes.className', ele);
          var classArr = classes_1.split(' ');
          var index = classArr.indexOf(className);

          if (index !== -1) {
            classArr.splice(index, 1);
          }

          setValue('attributes.className', classArr.join(' '), ele);
        } else {
          ele.classList.remove(className);
        }
      }
    }
  }

  return elements;
}
/**
 * The function used to get classlist.
 *
 * @param  {string | string[]} classes - An element the need to check visibility
 * @returns {string[]} ?
 * @private
 */


function getClassList(classes) {
  var classList = [];

  if (typeof classes === 'string') {
    classList.push(classes);
  } else {
    classList = classes;
  }

  return classList;
}
/**
 * The function used to check element is visible or not.
 *
 * @param  {Element|Node} element - An element the need to check visibility
 * @returns {boolean} ?
 * @private
 */


function isVisible(element) {
  var ele = element;
  return ele.style.visibility === '' && ele.offsetWidth > 0;
}
/**
 * The function used to insert an array of elements into a first of the element.
 *
 * @param  {Element[]|NodeList} fromElements - An array of elements that need to prepend.
 * @param  {Element} toElement - An element that is going to prepend.
 * @param {boolean} isEval - ?
 * @returns {Element[] | NodeList} ?
 * @private
 */


function prepend(fromElements, toElement, isEval) {
  var docFrag = document.createDocumentFragment();

  for (var _i = 0, _a = fromElements; _i < _a.length; _i++) {
    var ele = _a[_i];
    docFrag.appendChild(ele);
  }

  toElement.insertBefore(docFrag, toElement.firstElementChild);

  if (isEval) {
    executeScript(toElement);
  }

  return fromElements;
}
/**
 * The function used to insert an array of elements into last of the element.
 *
 * @param  {Element[]|NodeList} fromElements - An array of elements that need to append.
 * @param  {Element} toElement - An element that is going to prepend.
 * @param {boolean} isEval - ?
 * @returns {Element[] | NodeList} ?
 * @private
 */


function append(fromElements, toElement, isEval) {
  var docFrag = document.createDocumentFragment();

  for (var _i = 0, _a = fromElements; _i < _a.length; _i++) {
    var ele = _a[_i];
    docFrag.appendChild(ele);
  }

  toElement.appendChild(docFrag);

  if (isEval) {
    executeScript(toElement);
  }

  return fromElements;
}
/**
 * The function is used to evaluate script from Ajax request
 *
 * @param {Element} ele - An element is going to evaluate the script
 * @returns {void} ?
 */


function executeScript(ele) {
  var eleArray = ele.querySelectorAll('script');
  eleArray.forEach(function (element) {
    var script = document.createElement('script');
    script.text = element.innerHTML;
    document.head.appendChild(script);
    detach(script);
  });
}
/**
 * The function used to remove the element from parentnode
 *
 * @param  {Element|Node|HTMLElement} element - An element that is going to detach from the Dom
 * @returns {any} ?
 * @private
 */
// eslint-disable-next-line


function detach(element) {
  var parentNode = element.parentNode;

  if (parentNode) {
    return parentNode.removeChild(element);
  }
}
/**
 * The function used to remove the element from Dom also clear the bounded events
 *
 * @param  {Element|Node|HTMLElement} element - An element remove from the Dom
 * @returns {void} ?
 * @private
 */


function remove(element) {
  var parentNode = element.parentNode;
  EventHandler.clearEvents(element);
  parentNode.removeChild(element);
}
/**
 * The function helps to set multiple attributes to an element
 *
 * @param  {Element|Node} element - An element that need to set attributes.
 * @param  {string} attributes - JSON Object that is going to as attributes.
 * @returns {Element} ?
 * @private
 */
// eslint-disable-next-line


function attributes(element, attributes) {
  var keys = Object.keys(attributes);
  var ele = element;

  for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
    var key = keys_1[_i];

    if (isObject(ele)) {
      var iKey = key;

      if (key === 'tabindex') {
        iKey = 'tabIndex';
      }

      ele.attributes[iKey] = attributes[key];
    } else {
      ele.setAttribute(key, attributes[key]);
    }
  }

  return ele;
}
/**
 * The function selects the element from giving context.
 *
 * @param  {string} selector - Selector string need fetch element
 * @param  {Document|Element} context - It is an optional type, That specifies a Dom context.
 * @param {boolean} needsVDOM ?
 * @returns {any} ?
 * @private
 */
// eslint-disable-next-line


function select(selector, context, needsVDOM) {
  if (context === void 0) {
    context = document;
  }

  selector = querySelectId(selector);
  return context.querySelector(selector);
}
/**
 * The function selects an array of element from the given context.
 *
 * @param  {string} selector - Selector string need fetch element
 * @param  {Document|Element} context - It is an optional type, That specifies a Dom context.
 * @param {boolean} needsVDOM ?
 * @returns {HTMLElement[]} ?
 * @private
 */
// eslint-disable-next-line


function selectAll(selector, context, needsVDOM) {
  if (context === void 0) {
    context = document;
  }

  selector = querySelectId(selector);
  var nodeList = context.querySelectorAll(selector);
  return nodeList;
}
/**
 * The function selects an id of element from the given context.
 *
 * @param  {string} selector - Selector string need fetch element
 * @returns {string} ?
 * @private
 */


function querySelectId(selector) {
  var charRegex = /(!|"|\$|%|&|'|\(|\)|\*|\/|:|;|<|=|\?|@|\]|\^|`|{|}|\||\+|~)/g;

  if (selector.match(/#[0-9]/g) || selector.match(charRegex)) {
    var idList = selector.split(',');

    for (var i = 0; i < idList.length; i++) {
      var list = idList[i].split(' ');

      for (var j = 0; j < list.length; j++) {
        if (list[j].indexOf('#') > -1) {
          if (!list[j].match(/\[.*\]/)) {
            var splitId = list[j].split('#');

            if (splitId[1].match(/^\d/) || splitId[1].match(charRegex)) {
              var setId = list[j].split('.');
              setId[0] = setId[0].replace(/#/, '[id=\'') + '\']';
              list[j] = setId.join('.');
            }
          }
        }
      }

      idList[i] = list.join(' ');
    }

    return idList.join(',');
  }

  return selector;
}
/**
 * Returns single closest parent element based on class selector.
 *
 * @param  {Element} element - An element that need to find the closest element.
 * @param  {string} selector - A classSelector of closest element.
 * @returns {Element} ?
 * @private
 */


function closest(element, selector) {
  var el = element;

  if (typeof el.closest === 'function') {
    return el.closest(selector);
  }

  while (el && el.nodeType === 1) {
    if (matches(el, selector)) {
      return el;
    }

    el = el.parentNode;
  }

  return null;
}
/**
 * Returns all sibling elements of the given element.
 *
 * @param  {Element|Node} element - An element that need to get siblings.
 * @returns {Element[]} ?
 * @private
 */


function siblings(element) {
  var siblings = [];
  var childNodes = Array.prototype.slice.call(element.parentNode.childNodes);

  for (var _i = 0, childNodes_1 = childNodes; _i < childNodes_1.length; _i++) {
    var curNode = childNodes_1[_i];

    if (curNode.nodeType === Node.ELEMENT_NODE && element !== curNode) {
      siblings.push(curNode);
    }
  }

  return siblings;
}
/**
 * set the value if not exist. Otherwise set the existing value
 *
 * @param  {HTMLElement} element - An element to which we need to set value.
 * @param  {string} property - Property need to get or set.
 * @param  {string} value - value need to set.
 * @returns {string} ?
 * @private
 */


function getAttributeOrDefault(element, property, value) {
  var attrVal;
  var isObj = isObject(element);

  if (isObj) {
    attrVal = getValue('attributes.' + property, element);
  } else {
    attrVal = element.getAttribute(property);
  }

  if (isNullOrUndefined(attrVal) && value) {
    if (!isObj) {
      element.setAttribute(property, value.toString());
    } else {
      element.attributes[property] = value;
    }

    attrVal = value;
  }

  return attrVal;
}
/**
 * Set the style attributes to Html element.
 *
 * @param {HTMLElement} element - Element which we want to set attributes
 * @param {any} attrs - Set the given attributes to element
 * @returns {void} ?
 * @private
 */


function setStyleAttribute(element, attrs) {
  if (attrs !== undefined) {
    Object.keys(attrs).forEach(function (key) {
      // eslint-disable-next-line
      element.style[key] = attrs[key];
    });
  }
}
/**
 * Method for add and remove classes to a dom element.
 *
 * @param {Element} element - Element for add and remove classes
 * @param {string[]} addClasses - List of classes need to be add to the element
 * @param {string[]} removeClasses - List of classes need to be remove from the element
 * @returns {void} ?
 * @private
 */


function classList(element, addClasses, removeClasses) {
  addClass([element], addClasses);
  removeClass([element], removeClasses);
}
/**
 * Method to check whether the element matches the given selector.
 *
 * @param {Element} element - Element to compare with the selector.
 * @param {string} selector - String selector which element will satisfy.
 * @returns {void} ?
 * @private
 */


function matches(element, selector) {
  // eslint-disable-next-line
  var matches = element.matches || element.msMatchesSelector || element.webkitMatchesSelector;

  if (matches) {
    return matches.call(element, selector);
  } else {
    return [].indexOf.call(document.querySelectorAll(selector), element) !== -1;
  }
}
/**
 * Method to get the html text from DOM.
 *
 * @param {HTMLElement} ele - Element to compare with the selector.
 * @param {string} innerHTML - String selector which element will satisfy.
 * @returns {void} ?
 * @private
 */


function includeInnerHTML(ele, innerHTML) {
  ele.innerHTML = innerHTML;
}
/**
 * Method to get the containsclass.
 *
 * @param {HTMLElement} ele - Element to compare with the selector.
 * @param {string} className - String selector which element will satisfy.
 * @returns {any} ?
 * @private
 */
// eslint-disable-next-line


function containsClass(ele, className) {
  if (isObject(ele)) {
    // eslint-disable-next-line
    return new RegExp('\\b' + className + '\\b', 'i').test(ele.attributes.className);
  } else {
    return ele.classList.contains(className);
  }
}
/**
 * Method to check whether the element matches the given selector.
 *
 * @param {Object} element - Element to compare with the selector.
 * @param {boolean} deep ?
 * @returns {any} ?
 * @private
 */
// eslint-disable-next-line


function cloneNode(element, deep) {
  if (isObject(element)) {
    if (deep) {
      return extend({}, {}, element, true);
    }
  } else {
    return element.cloneNode(deep);
  }
}

var isColEName = new RegExp(']');
/* tslint:enable:no-any */

/**
 * Base library module is common module for Framework modules like touch,keyboard and etc.,
 *
 * @private
 */

var Base =
/** @__PURE__ @class */
function () {
  /**
   * Base constructor accept options and element
   *
   * @param {Object} options ?
   * @param {string} element ?
   */
  function Base(options, element) {
    this.isRendered = false;
    this.isComplexArraySetter = false;
    this.isServerRendered = false;
    this.allowServerDataBinding = true;
    this.isProtectedOnChange = true;
    this.properties = {};
    this.changedProperties = {};
    this.oldProperties = {};
    this.bulkChanges = {};
    this.refreshing = false;
    this.ignoreCollectionWatch = false; // eslint-disable-next-line

    this.finalUpdate = function () {};

    this.childChangedProperties = {};
    this.modelObserver = new Observer(this);

    if (!isUndefined(element)) {
      if ('string' === typeof element) {
        this.element = document.querySelector(element);
      } else {
        this.element = element;
      }

      if (!isNullOrUndefined(this.element)) {
        this.isProtectedOnChange = false;
        this.addInstance();
      }
    }

    if (!isUndefined(options)) {
      this.setProperties(options, true);
    }

    this.isDestroyed = false;
  }
  /** Property base section */

  /**
   * Function used to set bunch of property at a time.
   *
   * @private
   * @param  {Object} prop - JSON object which holds components properties.
   * @param  {boolean} muteOnChange ? - Specifies to true when we set properties.
   * @returns {void} ?
   */


  Base.prototype.setProperties = function (prop, muteOnChange) {
    var prevDetection = this.isProtectedOnChange;
    this.isProtectedOnChange = !!muteOnChange;
    merge(this, prop);

    if (muteOnChange !== true) {
      merge(this.changedProperties, prop);
      this.dataBind();
    } else if (isBlazor() && this.isRendered) {
      this.serverDataBind(prop);
    }

    this.finalUpdate();
    this.changedProperties = {};
    this.oldProperties = {};
    this.isProtectedOnChange = prevDetection;
  };
  /**
   * Calls for child element data bind
   *
   * @param {Object} obj ?
   * @param {Object} parent ?
   * @returns {void} ?
   */
  // tslint:disable-next-line:no-any


  Base.callChildDataBind = function (obj, parent) {
    var keys = Object.keys(obj);

    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
      var key = keys_1[_i];

      if (parent[key] instanceof Array) {
        for (var _a = 0, _b = parent[key]; _a < _b.length; _a++) {
          var obj_1 = _b[_a];

          if (obj_1.dataBind !== undefined) {
            obj_1.dataBind();
          }
        }
      } else {
        parent[key].dataBind();
      }
    }
  };

  Base.prototype.clearChanges = function () {
    this.finalUpdate();
    this.changedProperties = {};
    this.oldProperties = {};
    this.childChangedProperties = {};
  };
  /**
   * Bind property changes immediately to components
   *
   * @returns {void} ?
   */


  Base.prototype.dataBind = function () {
    Base.callChildDataBind(this.childChangedProperties, this);

    if (Object.getOwnPropertyNames(this.changedProperties).length) {
      var prevDetection = this.isProtectedOnChange;
      var newChanges = this.changedProperties;
      var oldChanges = this.oldProperties;
      this.clearChanges();
      this.isProtectedOnChange = true;
      this.onPropertyChanged(newChanges, oldChanges);
      this.isProtectedOnChange = prevDetection;
    }
  };
  /* tslint:disable:no-any */


  Base.prototype.serverDataBind = function (newChanges) {
    if (!isBlazor()) {
      return;
    }

    newChanges = newChanges ? newChanges : {};
    extend(this.bulkChanges, {}, newChanges, true);
    var sfBlazor = 'sfBlazor';

    if (this.allowServerDataBinding && window[sfBlazor].updateModel) {
      window[sfBlazor].updateModel(this);
      this.bulkChanges = {};
    }
  };
  /* tslint:enable:no-any */


  Base.prototype.saveChanges = function (key, newValue, oldValue) {
    if (isBlazor()) {
      // tslint:disable-next-line:no-any
      var newChanges = {};
      newChanges[key] = newValue;
      this.serverDataBind(newChanges);
    }

    if (this.isProtectedOnChange) {
      return;
    }

    this.oldProperties[key] = oldValue;
    this.changedProperties[key] = newValue;
    this.finalUpdate();
    this.finalUpdate = setImmediate(this.dataBind.bind(this));
  };
  /** Event Base Section */

  /**
   * Adds the handler to the given event listener.
   *
   * @param {string} eventName - A String that specifies the name of the event
   * @param {Function} handler - Specifies the call to run when the event occurs.
   * @returns {void} ?
   */


  Base.prototype.addEventListener = function (eventName, handler) {
    this.modelObserver.on(eventName, handler);
  };
  /**
   * Removes the handler from the given event listener.
   *
   * @param {string} eventName - A String that specifies the name of the event to remove
   * @param {Function} handler - Specifies the function to remove
   * @returns {void} ?
   */


  Base.prototype.removeEventListener = function (eventName, handler) {
    this.modelObserver.off(eventName, handler);
  };
  /**
   * Triggers the handlers in the specified event.
   *
   * @private
   * @param {string} eventName - Specifies the event to trigger for the specified component properties.
   * Can be a custom event, or any of the standard events.
   * @param {Event} eventProp - Additional parameters to pass on to the event properties
   * @param {Function} successHandler - this function will invoke after event successfully triggered
   * @param {Function} errorHandler - this function will invoke after event if it failured to call.
   * @returns {void} ?
   */


  Base.prototype.trigger = function (eventName, eventProp, successHandler, errorHandler) {
    var _this = this;

    if (this.isDestroyed !== true) {
      var prevDetection = this.isProtectedOnChange;
      this.isProtectedOnChange = false;
      var data = this.modelObserver.notify(eventName, eventProp, successHandler, errorHandler);

      if (isColEName.test(eventName)) {
        var handler = getValue(eventName, this);

        if (handler) {
          var blazor = 'Blazor';

          if (window[blazor]) {
            var promise = handler.call(this, eventProp);

            if (promise && typeof promise.then === 'function') {
              if (!successHandler) {
                data = promise;
              } else {
                promise.then(function (data) {
                  if (successHandler) {
                    data = typeof data === 'string' && _this.modelObserver.isJson(data) ? JSON.parse(data) : data;
                    successHandler.call(_this, data);
                  }
                }).catch(function (data) {
                  if (errorHandler) {
                    data = typeof data === 'string' && _this.modelObserver.isJson(data) ? JSON.parse(data) : data;
                    errorHandler.call(_this, data);
                  }
                });
              }
            } else if (successHandler) {
              successHandler.call(this, eventProp);
            }
          } else {
            handler.call(this, eventProp);

            if (successHandler) {
              successHandler.call(this, eventProp);
            }
          }
        } else if (successHandler) {
          successHandler.call(this, eventProp);
        }
      }

      this.isProtectedOnChange = prevDetection;
      return data;
    }
  };
  /**
   * To maintain instance in base class
   *
   * @returns {void} ?
   */


  Base.prototype.addInstance = function () {
    // Add module class to the root element
    var moduleClass = 'e-' + this.getModuleName().toLowerCase();
    addClass([this.element], ['e-lib', moduleClass]);

    if (!isNullOrUndefined(this.element.ej2_instances)) {
      this.element.ej2_instances.push(this);
    } else {
      setValue('ej2_instances', [this], this.element);
    }
  };
  /**
   * To remove the instance from the element
   *
   * @returns {void} ?
   */


  Base.prototype.destroy = function () {
    var _this = this; // eslint-disable-next-line


    this.element.ej2_instances = this.element.ej2_instances.filter(function (i) {
      return i !== _this;
    });
    removeClass([this.element], ['e-' + this.getModuleName()]);

    if (this.element.ej2_instances.length === 0) {
      // Remove module class from the root element
      removeClass([this.element], ['e-lib']);
    }

    this.clearChanges();
    this.modelObserver.destroy();
    this.isDestroyed = true;
  };

  return Base;
}();
/**
 * Global function to get the component instance from the rendered element.
 *
 * @param {HTMLElement} elem Specifies the HTMLElement or element id string.
 * @param {string} comp Specifies the component module name or Component.
 * @returns {any} ?
 */
// tslint:disable-next-line:no-any


function getComponent(elem, comp) {
  var instance;
  var i;
  var ele = typeof elem === 'string' ? document.getElementById(elem) : elem;

  for (i = 0; i < ele.ej2_instances.length; i++) {
    instance = ele.ej2_instances[i];

    if (typeof comp === 'string') {
      var compName = instance.getModuleName();

      if (comp === compName) {
        return instance;
      }
    } else {
      // tslint:disable-next-line:no-any
      if (instance instanceof comp) {
        return instance;
      }
    }
  }

  return undefined;
}
/**
 * Function to remove the child instances.
 *
 * @param {HTMLElement} element ?
 * @return {void}
 * @private
 */
// tslint:disable-next-line:no-any


function removeChildInstance(element) {
  // tslint:disable-next-line:no-any
  var childEle = [].slice.call(element.getElementsByClassName('e-control'));

  for (var i = 0; i < childEle.length; i++) {
    var compName = childEle[i].classList[1].split('e-')[1]; // tslint:disable-next-line:no-any

    var compInstance = getComponent(childEle[i], compName);

    if (!isUndefined(compInstance)) {
      compInstance.destroy();
    }
  }
}
/**
 * Returns the Class Object
 *
 * @param {ClassObject} instance - instance of ClassObject
 * @param {string} curKey - key of the current instance
 * @param {Object} defaultValue - default Value
 * @param {Object[]} type ?
 * @returns {ClassObject} ?
 */
// eslint-disable-next-line


function getObject(instance, curKey, defaultValue, type) {
  // eslint-disable-next-line
  if (!instance.properties.hasOwnProperty(curKey) || !(instance.properties[curKey] instanceof type)) {
    instance.properties[curKey] = createInstance(type, [instance, curKey, defaultValue]);
  }

  return instance.properties[curKey];
}
/**
 * Returns object array
 *
 * @param {ClassObject} instance ?
 * @param {string} curKey ?
 * @param {Object[]} defaultValue ?
 * @param {Object} type ?
 * @param {boolean} isSetter ?
 * @param {boolean} isFactory ?
 * @returns {Object[]} ?
 */
// eslint-disable-next-line


function getObjectArray(instance, curKey, defaultValue, type, isSetter, isFactory) {
  var result = [];
  var len = defaultValue ? defaultValue.length : 0;

  for (var i = 0; i < len; i++) {
    var curType = type;

    if (isFactory) {
      curType = type(defaultValue[i], instance);
    }

    if (isSetter) {
      var inst = createInstance(curType, [instance, curKey, {}, true]);
      inst.setProperties(defaultValue[i], true);
      result.push(inst);
    } else {
      result.push(createInstance(curType, [instance, curKey, defaultValue[i], false]));
    }
  }

  return result;
}
/**
 * Returns the properties of the object
 *
 * @param {Object} defaultValue ?
 * @param {string} curKey ?
 * @returns {void} ?
 */


function propertyGetter(defaultValue, curKey) {
  return function () {
    // eslint-disable-next-line
    if (!this.properties.hasOwnProperty(curKey)) {
      this.properties[curKey] = defaultValue;
    }

    return this.properties[curKey];
  };
}
/**
 * Set the properties for the object
 *
 * @param {Object} defaultValue ?
 * @param {string} curKey ?
 * @returns {void} ?
 */


function propertySetter(defaultValue, curKey) {
  return function (newValue) {
    if (this.properties[curKey] !== newValue) {
      // eslint-disable-next-line
      var oldVal = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;
      this.saveChanges(curKey, newValue, oldVal);
      this.properties[curKey] = newValue;
    }
  };
}
/**
 * Returns complex objects
 *
 * @param {Object} defaultValue ?
 * @param {string} curKey ?
 * @param {Object[]} type ?
 * @returns {void} ?
 */
// eslint-disable-next-line


function complexGetter(defaultValue, curKey, type) {
  return function () {
    return getObject(this, curKey, defaultValue, type);
  };
}
/**
 * Sets complex objects
 *
 * @param {Object} defaultValue ?
 * @param {string} curKey ?
 * @param {Object[]} type ?
 * @returns {void} ?
 */


function complexSetter(defaultValue, curKey, type) {
  return function (newValue) {
    getObject(this, curKey, defaultValue, type).setProperties(newValue);
  };
}
/**
 *
 * @param {Object} defaultValue ?
 * @param {string} curKey ?
 * @param {FunctionConstructor} type ?
 * @returns {void} ?
 */
// eslint-disable-next-line


function complexFactoryGetter(defaultValue, curKey, type) {
  return function () {
    var curType = type({}); // eslint-disable-next-line

    if (this.properties.hasOwnProperty(curKey)) {
      return this.properties[curKey];
    } else {
      return getObject(this, curKey, defaultValue, curType);
    }
  };
}
/**
 *
 * @param {Object} defaultValue ?
 * @param {string} curKey ?
 * @param {Object[]} type ?
 * @returns {void} ?
 */


function complexFactorySetter(defaultValue, curKey, type) {
  return function (newValue) {
    var curType = type(newValue, this);
    getObject(this, curKey, defaultValue, curType).setProperties(newValue);
  };
}
/**
 *
 * @param {Object[]} defaultValue ?
 * @param {string} curKey ?
 * @param {Object[]} type ?
 * @returns {void} ?
 */


function complexArrayGetter(defaultValue, curKey, type) {
  return function () {
    var _this = this; // eslint-disable-next-line


    if (!this.properties.hasOwnProperty(curKey)) {
      var defCollection = getObjectArray(this, curKey, defaultValue, type, false);
      this.properties[curKey] = defCollection;
    }

    var ignore = this.controlParent !== undefined && this.controlParent.ignoreCollectionWatch || this.ignoreCollectionWatch; // eslint-disable-next-line

    if (!this.properties[curKey].hasOwnProperty('push') && !ignore) {
      ['push', 'pop'].forEach(function (extendFunc) {
        var descriptor = {
          value: complexArrayDefinedCallback(extendFunc, curKey, type, _this.properties[curKey]).bind(_this),
          configurable: true
        };
        Object.defineProperty(_this.properties[curKey], extendFunc, descriptor);
      });
    } // eslint-disable-next-line


    if (!this.properties[curKey].hasOwnProperty('isComplexArray')) {
      Object.defineProperty(this.properties[curKey], 'isComplexArray', {
        value: true
      });
    }

    return this.properties[curKey];
  };
}
/**
 *
 * @param {Object[]} defaultValue ?
 * @param {string} curKey ?
 * @param {Object[]} type ?
 * @returns {void} ?
 */


function complexArraySetter(defaultValue, curKey, type) {
  return function (newValue) {
    this.isComplexArraySetter = true;
    var oldValueCollection = getObjectArray(this, curKey, defaultValue, type, false);
    var newValCollection = getObjectArray(this, curKey, newValue, type, true);
    this.isComplexArraySetter = false;
    this.saveChanges(curKey, newValCollection, oldValueCollection);
    this.properties[curKey] = newValCollection;
  };
}
/**
 *
 * @param {Object[]} defaultValue ?
 * @param {string} curKey ?
 * @param {Object[]} type ?
 * @returns {void} ?
 */


function complexArrayFactorySetter(defaultValue, curKey, type) {
  return function (newValue) {
    // eslint-disable-next-line
    var oldValueCollection = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;
    var newValCollection = getObjectArray(this, curKey, newValue, type, true, true);
    this.saveChanges(curKey, newValCollection, oldValueCollection);
    this.properties[curKey] = newValCollection;
  };
}
/**
 *
 * @param {Object[]} defaultValue ?
 * @param {string} curKey ?
 * @param {FunctionConstructor} type ?
 * @returns {void} ?
 */


function complexArrayFactoryGetter(defaultValue, curKey, type) {
  return function () {
    var curType = type({}); // eslint-disable-next-line

    if (!this.properties.hasOwnProperty(curKey)) {
      var defCollection = getObjectArray(this, curKey, defaultValue, curType, false);
      this.properties[curKey] = defCollection;
    }

    return this.properties[curKey];
  };
}
/**
 *
 * @param {string} dFunc ?
 * @param {string} curKey ?
 * @param {Object} type ?
 * @param {Object} prop ?
 * @returns {Object} ?
 */


function complexArrayDefinedCallback(dFunc, curKey, type, prop) {
  /* tslint:disable no-function-expression */
  return function () {
    var newValue = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      newValue[_i] = arguments[_i];
    }

    var keyString = this.propName ? this.getParentKey() + '.' + curKey + '-' : curKey + '-';

    switch (dFunc) {
      case 'push':
        for (var i = 0; i < newValue.length; i++) {
          Array.prototype[dFunc].apply(prop, [newValue[i]]);
          var model_1 = getArrayModel(keyString + (prop.length - 1), newValue[i], !this.controlParent, dFunc);
          this.serverDataBind(model_1, newValue[i], false, dFunc);
        }

        break;

      case 'pop':
        Array.prototype[dFunc].apply(prop); // eslint-disable-next-line

        var model = getArrayModel(keyString + prop.length, null, !this.controlParent, dFunc);
        this.serverDataBind(model, {
          ejsAction: 'pop'
        }, false, dFunc);
        break;
    }

    return prop;
  };
}
/**
 *
 * @param {string} keyString ?
 * @param {Object} value ?
 * @param {boolean} isControlParent ?
 * @param {string} arrayFunction ?
 * @returns {Object} ?
 */


function getArrayModel(keyString, value, isControlParent, arrayFunction) {
  var modelObject = keyString;

  if (isControlParent) {
    modelObject = {};
    modelObject[keyString] = value;

    if (value && typeof value === 'object') {
      var action = 'ejsAction';
      modelObject[keyString][action] = arrayFunction;
    }
  }

  return modelObject;
} // eslint-disable-next-line

/**
 * Method used to create property. General syntax below.
 *
 * @param {Object} defaultValue - Specifies the default value of property.
 * @returns {PropertyDecorator} ?
 * ```
 * @Property('TypeScript')
 * propertyName: Type;
 * ```
 * @private
 */


function Property(defaultValue) {
  return function (target, key) {
    var propertyDescriptor = {
      set: propertySetter(defaultValue, key),
      get: propertyGetter(defaultValue, key),
      enumerable: true,
      configurable: true
    }; //new property creation

    Object.defineProperty(target, key, propertyDescriptor);
    addPropertyCollection(target, key, 'prop', defaultValue);
  };
}
/**
 * Method used to create complex property. General syntax below.
 *
 * @param  {any} defaultValue - Specifies the default value of property.
 * @param  {Function} type - Specifies the class type of complex object.
 * @returns {PropertyDecorator} ?
 * ```
 * @Complex<Type>({},Type)
 * propertyName: Type;
 * ```
 * @private
 */


function Complex(defaultValue, type) {
  return function (target, key) {
    var propertyDescriptor = {
      set: complexSetter(defaultValue, key, type),
      get: complexGetter(defaultValue, key, type),
      enumerable: true,
      configurable: true
    }; //new property creation

    Object.defineProperty(target, key, propertyDescriptor);
    addPropertyCollection(target, key, 'complexProp', defaultValue, type);
  };
}
/**
 * Method used to create complex Factory property. General syntax below.
 *
 * @param  {Function} type - Specifies the class factory type of complex object.
 * @returns {PropertyDecorator} ?
 * ```
 * @ComplexFactory(defaultType, factoryFunction)
 * propertyName: Type1 | Type2;
 * ```
 * @private
 */


function ComplexFactory(type) {
  return function (target, key) {
    var propertyDescriptor = {
      set: complexFactorySetter({}, key, type),
      get: complexFactoryGetter({}, key, type),
      enumerable: true,
      configurable: true
    }; //new property creation

    Object.defineProperty(target, key, propertyDescriptor);
    addPropertyCollection(target, key, 'complexProp', {}, type);
  };
}
/**
 * Method used to create complex array property. General syntax below.
 *
 * @param  {any} defaultValue - Specifies the default value of property.
 * @param  {Function} type - Specifies the class type of complex object.
 * @returns {PropertyDecorator} ?
 * ```
 * @Collection([], Type);
 * propertyName: Type;
 * ```
 * @private
 */


function Collection(defaultValue, type) {
  return function (target, key) {
    var propertyDescriptor = {
      set: complexArraySetter(defaultValue, key, type),
      get: complexArrayGetter(defaultValue, key, type),
      enumerable: true,
      configurable: true
    }; //new property creation

    Object.defineProperty(target, key, propertyDescriptor);
    addPropertyCollection(target, key, 'colProp', defaultValue, type);
  };
}
/**
 * Method used to create complex factory array property. General syntax below.
 *
 * @param  {Function} type - Specifies the class type of complex object.
 * @returns {PropertyCollectionInfo} ?
 * ```
 * @Collection([], Type);
 * propertyName: Type;
 * ```
 * @private
 */


function CollectionFactory(type) {
  return function (target, key) {
    var propertyDescriptor = {
      set: complexArrayFactorySetter([], key, type),
      get: complexArrayFactoryGetter([], key, type),
      enumerable: true,
      configurable: true
    }; //new property creation

    Object.defineProperty(target, key, propertyDescriptor);
    addPropertyCollection(target, key, 'colProp', {}, type);
  };
}
/**
 * Method used to create event property. General syntax below.
 *
 * @returns {PropertyDecorator} ?
 * ```
 * @Event(()=>{return true;})
 * ```
 * @private
 */


function Event$1() {
  return function (target, key) {
    var eventDescriptor = {
      set: function (newValue) {
        var oldValue = this.properties[key];

        if (oldValue !== newValue) {
          var finalContext = getParentContext(this, key);

          if (isUndefined(oldValue) === false) {
            finalContext.context.removeEventListener(finalContext.prefix, oldValue);
          }

          finalContext.context.addEventListener(finalContext.prefix, newValue);
          this.properties[key] = newValue;
        }
      },
      get: propertyGetter(undefined, key),
      enumerable: true,
      configurable: true
    };
    Object.defineProperty(target, key, eventDescriptor);
    addPropertyCollection(target, key, 'event');
  };
}
/**
 * NotifyPropertyChanges is triggers the call back when the property has been changed.
 *
 * @param {Function} classConstructor ?
 * @returns {void} ?
 * ```
 *  @NotifyPropertyChanges
 * class DemoClass implements INotifyPropertyChanged {
 *
 *     @Property()
 *     property1: string;
 *
 *     dataBind: () => void;
 *
 *     constructor() { }
 *
 *     onPropertyChanged(newProp: any, oldProp: any) {
 *         // Called when property changed
 *     }
 * }
 * ```
 * @private
 */
// eslint-disable-next-line


function NotifyPropertyChanges(classConstructor) {
  /** Need to code */
}
/**
 * Method  used to create the builderObject for the target component.
 *
 * @param {BuildInfo} target ?
 * @param {string} key ?
 * @param {string} propertyType ?
 * @param {Object} defaultValue ?
 * @param {Function} type ?
 * @returns {void} ?
 * @private
 */


function addPropertyCollection(target, key, propertyType, defaultValue, type) {
  if (isUndefined(target.propList)) {
    target.propList = {
      props: [],
      complexProps: [],
      colProps: [],
      events: [],
      propNames: [],
      complexPropNames: [],
      colPropNames: [],
      eventNames: []
    };
  } // eslint-disable-next-line


  target.propList[propertyType + 's'].push({
    propertyName: key,
    defaultValue: defaultValue,
    type: type
  }); // eslint-disable-next-line

  target.propList[propertyType + 'Names'].push(key);
}
/**
 * Returns an object containing the builder properties
 *
 * @param {Function} component ?
 * @returns {Object} ?
 * @private
 */


function getBuilderProperties(component) {
  if (isUndefined(component.prototype.builderObject)) {
    component.prototype.builderObject = {
      properties: {},
      propCollections: [],
      add: function () {
        this.isPropertyArray = true;
        this.propCollections.push(extend({}, this.properties, {}));
      }
    };
    var rex = /complex/;

    for (var _i = 0, _a = Object.keys(component.prototype.propList); _i < _a.length; _i++) {
      var key = _a[_i];

      var _loop_1 = function (prop) {
        if (rex.test(key)) {
          component.prototype.builderObject[prop.propertyName] = function (value) {
            var childType = {};
            merge(childType, getBuilderProperties(prop.type));
            value(childType);
            var tempValue;

            if (!childType.isPropertyArray) {
              tempValue = extend({}, childType.properties, {});
            } else {
              tempValue = childType.propCollections;
            }

            this.properties[prop.propertyName] = tempValue;
            childType.properties = {};
            childType.propCollections = [];
            childType.isPropertyArray = false;
            return this;
          };
        } else {
          component.prototype.builderObject[prop.propertyName] = function (value) {
            this.properties[prop.propertyName] = value;
            return this;
          };
        }
      };

      for (var _b = 0, _c = component.prototype.propList[key]; _b < _c.length; _b++) {
        var prop = _c[_b];

        _loop_1(prop);
      }
    }
  }

  return component.prototype.builderObject;
}
/**
 * Method used to create builder for the components
 *
 * @param {any} component -specifies the target component for which builder to be created.
 * @returns {Object} ?
 * @private
 */


function CreateBuilder(component) {
  var builderFunction = function (element) {
    this.element = element;
    return this;
  };

  var instanceFunction = function (element) {
    // eslint-disable-next-line
    if (!builderFunction.prototype.hasOwnProperty('create')) {
      builderFunction.prototype = getBuilderProperties(component);

      builderFunction.prototype.create = function () {
        var temp = extend({}, {}, this.properties);
        this.properties = {};
        return new component(temp, this.element);
      };
    }

    return new builderFunction(element);
  };

  return instanceFunction;
}
/**
 * Returns parent options for the object
 *
 * @param {Object} context ?
 * @param {string} prefix ?
 * @returns {ParentOption} ?
 * @private
 */


function getParentContext(context, prefix) {
  // eslint-disable-next-line
  if (context.hasOwnProperty('parentObj') === false) {
    return {
      context: context,
      prefix: prefix
    };
  } else {
    var curText = getValue('propName', context);

    if (curText) {
      prefix = curText + '-' + prefix;
    }

    return getParentContext(getValue('parentObj', context), prefix);
  }
}

var __extends =  false || function () {
  var extendStatics = function (d, b) {
    extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    };

    return extendStatics(d, b);
  };

  return function (d, b) {
    extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __decorate =  false || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
/**
 * The Animation framework provide options to animate the html DOM elements
 * ```typescript
 *   let animeObject = new Animation({
 *      name: 'SlideLeftIn',
 *      duration: 1000
 *   });
 *   animeObject.animate('#anime1');
 *   animeObject.animate('#anime2', { duration: 500 });
 * ```
 */


var Animation =
/** @__PURE__ @class */
function (_super) {
  __extends(Animation, _super);

  function Animation(options) {
    var _this = _super.call(this, options, undefined) || this;
    /**
     * @private
     */


    _this.easing = {
      ease: 'cubic-bezier(0.250, 0.100, 0.250, 1.000)',
      linear: 'cubic-bezier(0.250, 0.250, 0.750, 0.750)',
      easeIn: 'cubic-bezier(0.420, 0.000, 1.000, 1.000)',
      easeOut: 'cubic-bezier(0.000, 0.000, 0.580, 1.000)',
      easeInOut: 'cubic-bezier(0.420, 0.000, 0.580, 1.000)',
      elasticInOut: 'cubic-bezier(0.5,-0.58,0.38,1.81)',
      elasticIn: 'cubic-bezier(0.17,0.67,0.59,1.81)',
      elasticOut: 'cubic-bezier(0.7,-0.75,0.99,1.01)'
    };
    return _this;
  }

  Animation_1 = Animation;
  /**
   * Applies animation to the current element.
   *
   * @param {string | HTMLElement} element - Element which needs to be animated.
   * @param {AnimationModel} options - Overriding default animation settings.
   * @returns {void} ?
   */

  Animation.prototype.animate = function (element, options) {
    options = !options ? {} : options;
    var model = this.getModel(options);

    if (typeof element === 'string') {
      var elements = Array.prototype.slice.call(selectAll(element, document));

      for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {
        var element_1 = elements_1[_i];
        model.element = element_1;
        Animation_1.delayAnimation(model);
      }
    } else {
      model.element = element;
      Animation_1.delayAnimation(model);
    }
  };
  /**
   * Stop the animation effect on animated element.
   *
   * @param {HTMLElement} element - Element which needs to be stop the animation.
   * @param {AnimationOptions} model - Handling the animation model at stop function.
   * @return {void}
   */


  Animation.stop = function (element, model) {
    element.style.animation = '';
    element.removeAttribute('e-animate');
    var animationId = element.getAttribute('e-animation-id');

    if (animationId) {
      var frameId = parseInt(animationId, 10);
      cancelAnimationFrame(frameId);
      element.removeAttribute('e-animation-id');
    }

    if (model && model.end) {
      model.end.call(this, model);
    }
  };
  /**
   * Set delay to animation element
   *
   * @param {AnimationModel} model ?
   * @returns {void}
   */


  Animation.delayAnimation = function (model) {
    if (animationMode === 'Disable') {
      if (model.begin) {
        model.begin.call(this, model);
      }

      if (model.end) {
        model.end.call(this, model);
      }
    } else {
      if (model.delay) {
        setTimeout(function () {
          Animation_1.applyAnimation(model);
        }, model.delay);
      } else {
        Animation_1.applyAnimation(model);
      }
    }
  };
  /**
   * Triggers animation
   *
   * @param {AnimationModel} model ?
   * @returns {void}
   */


  Animation.applyAnimation = function (model) {
    var _this = this;

    model.timeStamp = 0;
    var step = 0;
    var timerId = 0;
    var prevTimeStamp = 0;
    var duration = model.duration;
    model.element.setAttribute('e-animate', 'true');

    var startAnimation = function (timeStamp) {
      try {
        if (timeStamp) {
          // let step: number = model.timeStamp = timeStamp - startTime;

          /** phantomjs workaround for timestamp fix */
          prevTimeStamp = prevTimeStamp === 0 ? timeStamp : prevTimeStamp;
          model.timeStamp = timeStamp + model.timeStamp - prevTimeStamp;
          prevTimeStamp = timeStamp;
          /** phantomjs workaround end */
          // trigger animation begin event

          if (!step && model.begin) {
            model.begin.call(_this, model);
          }

          step = step + 1;
          var avg = model.timeStamp / step;

          if (model.timeStamp < duration && model.timeStamp + avg < duration && model.element.getAttribute('e-animate')) {
            // apply animation effect to the current element
            model.element.style.animation = model.name + ' ' + model.duration + 'ms ' + model.timingFunction;

            if (model.progress) {
              model.progress.call(_this, model);
            } // repeat requestAnimationFrame


            requestAnimationFrame(startAnimation);
          } else {
            // clear requestAnimationFrame
            cancelAnimationFrame(timerId);
            model.element.removeAttribute('e-animation-id');
            model.element.removeAttribute('e-animate');
            model.element.style.animation = '';

            if (model.end) {
              model.end.call(_this, model);
            }
          }
        } else {
          //startTime = performance.now();
          // set initial requestAnimationFrame
          timerId = requestAnimationFrame(startAnimation);
          model.element.setAttribute('e-animation-id', timerId.toString());
        }
      } catch (e) {
        cancelAnimationFrame(timerId);
        model.element.removeAttribute('e-animation-id');

        if (model.fail) {
          model.fail.call(_this, e);
        }
      }
    };

    startAnimation();
  };
  /**
   * Returns Animation Model
   *
   * @param {AnimationModel} options ?
   * @returns {AnimationModel} ?
   */


  Animation.prototype.getModel = function (options) {
    return {
      name: options.name || this.name,
      delay: options.delay || this.delay,
      duration: options.duration !== undefined ? options.duration : this.duration,
      begin: options.begin || this.begin,
      end: options.end || this.end,
      fail: options.fail || this.fail,
      progress: options.progress || this.progress,
      timingFunction: this.easing[options.timingFunction] ? this.easing[options.timingFunction] : options.timingFunction || this.easing[this.timingFunction]
    };
  };
  /**
   * @private
   * @param {AnimationModel} newProp ?
   * @param {AnimationModel} oldProp ?
   * @returns {void} ?
   */
  // eslint-disable-next-line


  Animation.prototype.onPropertyChanged = function (newProp, oldProp) {// no code needed
  };
  /**
   * Returns module name as animation
   *
   * @private
   * @returns {void} ?
   */


  Animation.prototype.getModuleName = function () {
    return 'animation';
  };
  /**
   *
   * @private
   * @returns {void} ?
   */


  Animation.prototype.destroy = function () {//Override base destroy;
  };

  var Animation_1;

  __decorate([Property('FadeIn')], Animation.prototype, "name", void 0);

  __decorate([Property(400)], Animation.prototype, "duration", void 0);

  __decorate([Property('ease')], Animation.prototype, "timingFunction", void 0);

  __decorate([Property(0)], Animation.prototype, "delay", void 0);

  __decorate([Event$1()], Animation.prototype, "progress", void 0);

  __decorate([Event$1()], Animation.prototype, "begin", void 0);

  __decorate([Event$1()], Animation.prototype, "end", void 0);

  __decorate([Event$1()], Animation.prototype, "fail", void 0);

  Animation = Animation_1 = __decorate([NotifyPropertyChanges], Animation);
  return Animation;
}(Base);
/**
 * Ripple provides material theme's wave effect when an element is clicked
 * ```html
 * <div id='ripple'></div>
 * <script>
 *   rippleEffect(document.getElementById('ripple'));
 * </script>
 * ```
 *
 * @private
 * @param {HTMLElement} element - Target element
 * @param {RippleOptions} rippleOptions - Ripple options .
 * @param {Function} done .
 * @returns {void} .
 */


function rippleEffect(element, rippleOptions, done) {
  var rippleModel = getRippleModel(rippleOptions);

  if (rippleModel.rippleFlag === false || rippleModel.rippleFlag === undefined && !isRippleEnabled) {
    return function () {};
  }

  element.setAttribute('data-ripple', 'true');
  EventHandler.add(element, 'mousedown', rippleHandler, {
    parent: element,
    rippleOptions: rippleModel
  });
  EventHandler.add(element, 'mouseup', rippleUpHandler, {
    parent: element,
    rippleOptions: rippleModel,
    done: done
  });
  EventHandler.add(element, 'mouseleave', rippleLeaveHandler, {
    parent: element,
    rippleOptions: rippleModel
  });

  if (Browser.isPointer) {
    EventHandler.add(element, 'transitionend', rippleLeaveHandler, {
      parent: element,
      rippleOptions: rippleModel
    });
  }

  return function () {
    element.removeAttribute('data-ripple');
    EventHandler.remove(element, 'mousedown', rippleHandler);
    EventHandler.remove(element, 'mouseup', rippleUpHandler);
    EventHandler.remove(element, 'mouseleave', rippleLeaveHandler);
    EventHandler.remove(element, 'transitionend', rippleLeaveHandler);
  };
}
/**
 * Handler for ripple model
 *
 * @param {RippleOptions} rippleOptions ?
 * @returns {RippleOptions} ?
 */


function getRippleModel(rippleOptions) {
  var rippleModel = {
    selector: rippleOptions && rippleOptions.selector ? rippleOptions.selector : null,
    ignore: rippleOptions && rippleOptions.ignore ? rippleOptions.ignore : null,
    rippleFlag: rippleOptions && rippleOptions.rippleFlag,
    isCenterRipple: rippleOptions && rippleOptions.isCenterRipple,
    duration: rippleOptions && rippleOptions.duration ? rippleOptions.duration : 350
  };
  return rippleModel;
}
/**
 * Handler for ripple event
 *
 * @param {MouseEvent} e ?
 * @returns {void} ?
 * @private
 */


function rippleHandler(e) {
  var target = e.target;
  var selector = this.rippleOptions.selector;
  var element = selector ? closest(target, selector) : target;

  if (!element || this.rippleOptions && closest(target, this.rippleOptions.ignore)) {
    return;
  }

  var offset = element.getBoundingClientRect();
  var offsetX = e.pageX - document.body.scrollLeft;
  var offsetY = e.pageY - (!document.body.scrollTop && document.documentElement ? document.documentElement.scrollTop : document.body.scrollTop);
  var pageX = Math.max(Math.abs(offsetX - offset.left), Math.abs(offsetX - offset.right));
  var pageY = Math.max(Math.abs(offsetY - offset.top), Math.abs(offsetY - offset.bottom));
  var radius = Math.sqrt(pageX * pageX + pageY * pageY);
  var diameter = radius * 2 + 'px';
  var x = offsetX - offset.left - radius;
  var y = offsetY - offset.top - radius;

  if (this.rippleOptions && this.rippleOptions.isCenterRipple) {
    x = 0;
    y = 0;
    diameter = '100%';
  }

  element.classList.add('e-ripple');
  var duration = this.rippleOptions.duration.toString();
  var styles = 'width: ' + diameter + ';height: ' + diameter + ';left: ' + x + 'px;top: ' + y + 'px;' + 'transition-duration: ' + duration + 'ms;';
  var rippleElement = createElement('div', {
    className: 'e-ripple-element',
    styles: styles
  });
  element.appendChild(rippleElement);
  window.getComputedStyle(rippleElement).getPropertyValue('opacity');
  rippleElement.style.transform = 'scale(1)';

  if (element !== this.parent) {
    EventHandler.add(element, 'mouseleave', rippleLeaveHandler, {
      parent: this.parent,
      rippleOptions: this.rippleOptions
    });
  }
}
/**
 * Handler for ripple element mouse up event
 *
 * @param {MouseEvent} e ?
 * @returns {void} ?
 * @private
 */


function rippleUpHandler(e) {
  removeRipple(e, this);
}
/**
 * Handler for ripple element mouse move event
 *
 * @param {MouseEvent} e ?
 * @returns {void} ?
 * @private
 */


function rippleLeaveHandler(e) {
  removeRipple(e, this);
}
/**
 * Handler for removing ripple element
 *
 * @param {MouseEvent} e ?
 * @param {RippleArgs} eventArgs ?
 * @returns {void} ?
 * @private
 */


function removeRipple(e, eventArgs) {
  var duration = eventArgs.rippleOptions.duration;
  var target = e.target;
  var selector = eventArgs.rippleOptions.selector;
  var element = selector ? closest(target, selector) : target;

  if (!element || element && element.className.indexOf('e-ripple') === -1) {
    return;
  }

  var rippleElements = selectAll('.e-ripple-element', element);
  var rippleElement = rippleElements[rippleElements.length - 1];

  if (rippleElement) {
    rippleElement.style.opacity = '0.5';
  }

  if (eventArgs.parent !== element) {
    EventHandler.remove(element, 'mouseleave', rippleLeaveHandler);
  }
  /* tslint:disable:align */


  setTimeout(function () {
    if (rippleElement && rippleElement.parentNode) {
      rippleElement.parentNode.removeChild(rippleElement);
    }

    if (!element.getElementsByClassName('e-ripple-element').length) {
      element.classList.remove('e-ripple');
    }

    if (eventArgs.done) {
      eventArgs.done(e);
    }
  }, duration);
}

var isRippleEnabled = false;
/**
 * Animation Module provides support to enable ripple effect functionality to Essential JS 2 components.
 *
 * @param {boolean} isRipple Specifies the boolean value to enable or disable ripple effect.
 * @returns {boolean} ?
 */

function enableRipple(isRipple) {
  isRippleEnabled = isRipple;
  return isRippleEnabled;
}
/**
 * Defines the Modes of Global animation.
 * @private
 */


var animationMode = '';
/**
 * Method for set the Global animation modes for Syncfusion Blazor components.
 */

function setGlobalAnimation(value) {
  animationMode = value;
}
/**
 * Module loading operations
 */


var MODULE_SUFFIX = 'Module';

var ModuleLoader =
/** @__PURE__ @class */
function () {
  function ModuleLoader(parent) {
    this.loadedModules = [];
    this.parent = parent;
  }
  /**
   * Inject required modules in component library
   *
   * @returns {void} ?
   * @param {ModuleDeclaration[]} requiredModules - Array of modules to be required
   * @param {Function[]} moduleList - Array of modules to be injected from sample side
   */


  ModuleLoader.prototype.inject = function (requiredModules, moduleList) {
    var reqLength = requiredModules.length;

    if (reqLength === 0) {
      this.clean();
      return;
    }

    if (this.loadedModules.length) {
      this.clearUnusedModule(requiredModules);
    }

    for (var i = 0; i < reqLength; i++) {
      var modl = requiredModules[i];

      for (var _i = 0, moduleList_1 = moduleList; _i < moduleList_1.length; _i++) {
        var module = moduleList_1[_i];
        var modName = modl.member;

        if (module.prototype.getModuleName() === modl.member && !this.isModuleLoaded(modName)) {
          var moduleObject = createInstance(module, modl.args);
          var memberName = this.getMemberName(modName);

          if (modl.isProperty) {
            setValue(memberName, module, this.parent);
          } else {
            setValue(memberName, moduleObject, this.parent);
          }

          var loadedModule = modl;
          loadedModule.member = memberName;
          this.loadedModules.push(loadedModule);
        }
      }
    }
  };
  /**
   * To remove the created object while destroying the control
   *
   * @returns {void}
   */


  ModuleLoader.prototype.clean = function () {
    for (var _i = 0, _a = this.loadedModules; _i < _a.length; _i++) {
      var modules = _a[_i];

      if (!modules.isProperty) {
        getValue(modules.member, this.parent).destroy();
      }
    }

    this.loadedModules = [];
  };
  /**
   * Removes all unused modules
   *
   * @param {ModuleDeclaration[]} moduleList ?
   * @returns {void} ?
   */


  ModuleLoader.prototype.clearUnusedModule = function (moduleList) {
    var _this = this;

    var usedModules = moduleList.map(function (arg) {
      return _this.getMemberName(arg.member);
    });
    var removableModule = this.loadedModules.filter(function (module) {
      return usedModules.indexOf(module.member) === -1;
    });

    for (var _i = 0, removableModule_1 = removableModule; _i < removableModule_1.length; _i++) {
      var mod = removableModule_1[_i];

      if (!mod.isProperty) {
        getValue(mod.member, this.parent).destroy();
      }

      this.loadedModules.splice(this.loadedModules.indexOf(mod), 1);
      deleteObject(this.parent, mod.member);
    }
  };
  /**
   * To get the name of the member.
   *
   * @param {string} name ?
   * @returns {string} ?
   */


  ModuleLoader.prototype.getMemberName = function (name) {
    return name[0].toLowerCase() + name.substring(1) + MODULE_SUFFIX;
  };
  /**
   * Returns boolean based on whether the module specified is loaded or not
   *
   * @param {string} modName ?
   * @returns {boolean} ?
   */


  ModuleLoader.prototype.isModuleLoaded = function (modName) {
    for (var _i = 0, _a = this.loadedModules; _i < _a.length; _i++) {
      var mod = _a[_i];

      if (mod.member === this.getMemberName(modName)) {
        return true;
      }
    }

    return false;
  };

  return ModuleLoader;
}();
/**
 * To detect the changes for inner properties.
 *
 * @private
 */


var ChildProperty =
/** @__PURE__ @class */
function () {
  function ChildProperty(parent, propName, defaultValue, isArray) {
    this.isComplexArraySetter = false;
    this.properties = {};
    this.changedProperties = {};
    this.childChangedProperties = {};
    this.oldProperties = {}; // eslint-disable-next-line

    this.finalUpdate = function () {};

    this.callChildDataBind = getValue('callChildDataBind', Base);
    this.parentObj = parent;
    this.controlParent = this.parentObj.controlParent || this.parentObj;
    this.propName = propName;
    this.isParentArray = isArray;
    this.setProperties(defaultValue, true);
  }
  /**
   * Updates the property changes
   *
   * @param {boolean} val ?
   * @param {string} propName ?
   * @returns {void} ?
   */


  ChildProperty.prototype.updateChange = function (val, propName) {
    if (val === true) {
      this.parentObj.childChangedProperties[propName] = val;
    } else {
      delete this.parentObj.childChangedProperties[propName];
    }

    if (this.parentObj.updateChange) {
      this.parentObj.updateChange(val, this.parentObj.propName);
    }
  };
  /**
   * Updates time out duration
   *
   * @returns {void} ?
   */


  ChildProperty.prototype.updateTimeOut = function () {
    if (this.parentObj.updateTimeOut) {
      this.parentObj.finalUpdate();
      this.parentObj.updateTimeOut();
    } else {
      var changeTime_1 = setTimeout(this.parentObj.dataBind.bind(this.parentObj));

      var clearUpdate = function () {
        clearTimeout(changeTime_1);
      };

      this.finalUpdate = clearUpdate;
    }
  };
  /**
   * Clears changed properties
   *
   * @returns {void} ?
   */


  ChildProperty.prototype.clearChanges = function () {
    this.finalUpdate();
    this.updateChange(false, this.propName);
    this.oldProperties = {};
    this.changedProperties = {};
  };
  /**
   * Set property changes
   *
   * @param {Object} prop ?
   * @param {boolean} muteOnChange ?
   * @returns {void} ?
   */


  ChildProperty.prototype.setProperties = function (prop, muteOnChange) {
    if (muteOnChange === true) {
      merge(this, prop);
      this.updateChange(false, this.propName);
      this.clearChanges();
    } else {
      merge(this, prop);
    }
  };
  /**
   * Binds data
   *
   * @returns {void} ?
   */


  ChildProperty.prototype.dataBind = function () {
    this.callChildDataBind(this.childChangedProperties, this);

    if (this.isParentArray) {
      var curIndex = this.parentObj[this.propName].indexOf(this);

      if (Object.keys(this.changedProperties).length) {
        setValue(this.propName + '.' + curIndex, this.changedProperties, this.parentObj.changedProperties);
        setValue(this.propName + '.' + curIndex, this.oldProperties, this.parentObj.oldProperties);
      }
    } else {
      this.parentObj.changedProperties[this.propName] = this.changedProperties;
      this.parentObj.oldProperties[this.propName] = this.oldProperties;
    }

    this.clearChanges();
  };
  /**
   * Saves changes to newer values
   *
   * @param {string} key ?
   * @param {Object} newValue ?
   * @param {Object} oldValue ?
   * @param {boolean} restrictServerDataBind ?
   * @returns {void} ?
   */


  ChildProperty.prototype.saveChanges = function (key, newValue, oldValue, restrictServerDataBind) {
    if (this.controlParent.isProtectedOnChange) {
      return;
    }

    if (!restrictServerDataBind) {
      this.serverDataBind(key, newValue, true);
    }

    this.oldProperties[key] = oldValue;
    this.changedProperties[key] = newValue;
    this.updateChange(true, this.propName);
    this.finalUpdate();
    this.updateTimeOut();
  };

  ChildProperty.prototype.serverDataBind = function (key, value, isSaveChanges, action) {
    if (isBlazor() && !this.parentObj.isComplexArraySetter) {
      var parent_1;
      var newChanges = {};
      var parentKey = isSaveChanges ? this.getParentKey(true) + '.' + key : key;
      /* istanbul ignore else  */

      if (parentKey.indexOf('.') !== -1) {
        var complexKeys = parentKey.split('.');
        parent_1 = newChanges;

        for (var i = 0; i < complexKeys.length; i++) {
          var isFinal = i === complexKeys.length - 1;
          parent_1[complexKeys[i]] = isFinal ? value : {};
          parent_1 = isFinal ? parent_1 : parent_1[complexKeys[i]];
        }
      } else {
        newChanges[parentKey] = {};
        parent_1 = newChanges[parentKey];
        newChanges[parentKey][key] = value;
      }
      /* istanbul ignore next */


      if (this.isParentArray) {
        var actionProperty = 'ejsAction';
        parent_1[actionProperty] = action ? action : 'none';
      }

      this.controlParent.serverDataBind(newChanges);
    }
  };

  ChildProperty.prototype.getParentKey = function (isSaveChanges) {
    // eslint-disable-next-line
    var index = '';
    var propName = this.propName;
    /* istanbul ignore next */

    if (this.isParentArray) {
      index = this.parentObj[this.propName].indexOf(this);
      var valueLength = this.parentObj[this.propName].length;
      valueLength = isSaveChanges ? valueLength : valueLength > 0 ? valueLength - 1 : 0;
      index = index !== -1 ? '-' + index : '-' + valueLength;
      propName = propName + index;
    }

    if (this.controlParent !== this.parentObj) {
      propName = this.parentObj.getParentKey() + '.' + this.propName + index;
    }

    return propName;
  };

  return ChildProperty;
}();

var bypassKey = [115, 121, 110, 99, 102, 117, 115, 105, 111, 110, 46, 105, 115, 76, 105, 99, 86, 97, 108, 105, 100, 97, 116, 101, 100];
/**
 * License validation module
 * @private
 */

var LicenseValidator =
/** @__PURE__ @class */
function () {
  function LicenseValidator(key) {
    this.isValidated = false;
    this.version = '20.3';
    this.platform = /JavaScript|ASPNET|ASPNETCORE|ASPNETMVC|FileFormats/i;
    this.errors = {
      noLicense: 'This application was built using a trial version of Syncfusion Essential Studio.' + ' Please include a valid license to permanently remove this license validation message.' + ' You can also obtain a free 30 day evaluation license to temporarily remove this message ' + 'during the evaluation period. Please refer to this <a class="e-license"' + 'href="https://help.syncfusion.com/common/essential-studio/licensing">help topic</a> for more information.',
      trailExpired: 'Your Syncfusion trial license has expired. Please refer to this ' + '<a class="e-license"' + 'href="https://help.syncfusion.com/common/essential-studio/licensing/licensing-errors#trial-expired">help topic</a> for more information.',
      versionMismatched: 'The included Syncfusion license (v##LicenseVersion) is invalid for version ' + '##Requireversion. Please refer to this <a class="e-license" ' + 'href="https://help.syncfusion.com/es/licensing/version-mismatch/">help topic</a> for more information.',
      platformMismatched: 'The included Syncfusion license is invalid (Platform mismatch). Please refer' + ' to this <a class="e-license" ' + 'href="https://help.syncfusion.com/common/essential-studio/licensing/licensing-errors#platform-mismatch">help topic</a> for more information.',
      invalidKey: 'The included Syncfusion license is invalid. Please refer to this ' + '<a class="e-license" ' + 'href="https://help.syncfusion.com/common/essential-studio/licensing/licensing-errors#invalid-key">help topic</a> for more information.'
    };
    /**
     * To manage licensing operation.
     */

    this.manager = function () {
      var licKey = null;

      function set(key) {
        licKey = key;
      }

      function get() {
        return licKey;
      }

      return {
        setKey: set,
        getKey: get
      };
    }();
    /**
     * To manage npx licensing operation.
     */


    this.npxManager = function () {
      var npxLicKey = 'npxKeyReplace';

      function get() {
        return npxLicKey;
      }

      return {
        getKey: get
      };
    }();

    this.manager.setKey(key);
  }
  /**
   * To validate the provided license key.
  */


  LicenseValidator.prototype.validate = function () {
    if (!this.isValidated && containerObject && !getValue(convertToChar(bypassKey), containerObject) && !getValue('Blazor', containerObject)) {
      var validateMsg = void 0;

      if (this.manager && this.manager.getKey() || this.npxManager && this.npxManager.getKey() !== 'npxKeyReplace') {
        var result = this.getInfoFromKey();

        if (result && result.length) {
          for (var _i = 0, result_1 = result; _i < result_1.length; _i++) {
            var res = result_1[_i];

            if (!this.platform.test(res.platform) || res.invalidPlatform) {
              validateMsg = this.errors.platformMismatched;
            } else if (res.version.indexOf(this.version) === -1) {
              validateMsg = this.errors.versionMismatched;
              validateMsg = validateMsg.replace('##LicenseVersion', res.version);
              validateMsg = validateMsg.replace('##Requireversion', this.version + '.x');
            } else if (res.expiryDate) {
              var expDate = new Date(res.expiryDate);
              var currDate = new Date();

              if (expDate !== currDate && expDate < currDate) {
                validateMsg = this.errors.trailExpired;
              } else {
                break;
              }
            }
          }
        } else {
          validateMsg = this.errors.invalidKey;
        }
      } else {
        validateMsg = this.errors.noLicense;
      }

      if (validateMsg && typeof document !== 'undefined' && !isNullOrUndefined(document)) {
        var errorDiv = createElement('div', {
          innerHTML: validateMsg + '<span id="license-banner-event" class="e-license-banner" >' + '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20">' + '<line x1="5" y1="5" x2="15" y2="15" stroke="yellow" stroke-width="2.5" ' + 'stroke-miterlimit="10" stroke-linecap="round"></line><line x1="15" y1="5" ' + 'x2="5" y2="15" stroke="yellow" stroke-width="2.5" stroke-linecap="round" ' + 'stroke-miterlimit="10"></line></svg></span>',
          styles: 'position:fixed;top:0;left:0;right:0;font-family:"Segoe UI";font-size:16px;' + 'background:repeating-linear-gradient(45deg,#d70f0f,#d70f0f 10px,#e12121 10px,#e12121 17px);' + 'color:#ffffff;z-index:999999999;text-align:center;padding:10px 50px 10px 25px;'
        });
        errorDiv.setAttribute('id', 'js-licensing');
        document.body.appendChild(errorDiv);
        document.getElementById('license-banner-event').addEventListener('click', function () {
          document.getElementById('js-licensing').remove();
        });
      }

      this.isValidated = true;
      setValue(convertToChar(bypassKey), this.isValidated, containerObject);
    }
  };

  LicenseValidator.prototype.getDecryptedData = function (key) {
    try {
      return atob(key);
    } catch (error) {
      return '';
    }
  };
  /**
   * Get license information from key.
   */


  LicenseValidator.prototype.getInfoFromKey = function () {
    try {
      var licKey = '';
      var pkey = [5439488, 7929856, 5111808, 6488064, 4587520, 7667712, 5439488, 6881280, 5177344, 7208960, 4194304, 4456448, 6619136, 7733248, 5242880, 7077888, 6356992, 7602176, 4587520, 7274496, 7471104, 7143424];
      var decryptedStr = [];
      var resultArray = [];
      var invalidPlatform = false;
      var isNpxKey = false;

      if (this.manager.getKey()) {
        licKey = this.manager.getKey();
      } else {
        isNpxKey = true;
        licKey = this.npxManager.getKey().split('npxKeyReplace')[1];
      }

      var licKeySplit = licKey.split(';');

      for (var _i = 0, licKeySplit_1 = licKeySplit; _i < licKeySplit_1.length; _i++) {
        var lKey = licKeySplit_1[_i];
        var decodeStr = this.getDecryptedData(lKey);

        if (!decodeStr) {
          continue;
        }

        var k = 0;
        var buffr = '';

        if (!isNpxKey) {
          for (var i = 0; i < decodeStr.length; i++, k++) {
            if (k === pkey.length) {
              k = 0;
            }

            var c = decodeStr.charCodeAt(i);
            buffr += String.fromCharCode(c ^ pkey[k] >> 16);
          }
        } else {
          var charKey = decodeStr[decodeStr.length - 1];
          var decryptedKey = [];

          for (var i = 0; i < decodeStr.length; i++) {
            decryptedKey[i] = decodeStr[i].charCodeAt(0) - charKey.charCodeAt(0);
          }

          for (var i = 0; i < decryptedKey.length; i++) {
            buffr += String.fromCharCode(decryptedKey[i]);
          }
        }

        if (this.platform.test(buffr)) {
          decryptedStr = buffr.split(';');
          invalidPlatform = false; // checked the length to verify the key in proper strucutre

          if (decryptedStr.length > 3) {
            resultArray.push({
              platform: decryptedStr[0],
              version: decryptedStr[1],
              expiryDate: decryptedStr[2]
            });
          }
        } else if (buffr && buffr.split(';').length > 3) {
          invalidPlatform = true;
        }
      }

      if (invalidPlatform && !resultArray.length) {
        return [{
          invalidPlatform: invalidPlatform
        }];
      } else {
        return resultArray.length ? resultArray : null;
      }
    } catch (error) {
      return null;
    }
  };

  return LicenseValidator;
}();

var licenseValidator = new LicenseValidator();

function convertToChar(cArr) {
  var ret = '';

  for (var _i = 0, cArr_1 = cArr; _i < cArr_1.length; _i++) {
    var arr = cArr_1[_i];
    ret += String.fromCharCode(arr);
  }

  return ret;
}
/**
 * To set license key.
 *
 * @param {string} key - license key
 */


function registerLicense(key) {
  licenseValidator = new LicenseValidator(key);
}

var validateLicense = function (key) {
  if (key) {
    registerLicense(key);
  }

  licenseValidator.validate();
};

var getVersion = function () {
  return licenseValidator.version;
};

var __extends$1 =  false || function () {
  var extendStatics = function (d, b) {
    extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    };

    return extendStatics(d, b);
  };

  return function (d, b) {
    extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __decorate$1 =  false || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var componentCount = 0;
var lastPageID;
var lastHistoryLen = 0;
var versionBasedStatePersistence = false;
/**
 * To enable or disable version based statePersistence functionality for all components globally.
 *
 * @param {boolean} status - Optional argument Specifies the status value to enable or disable versionBasedStatePersistence option.
 * @returns {void}
 */

function enableVersionBasedPersistence(status) {
  versionBasedStatePersistence = status;
}
/**
 * Base class for all Essential JavaScript components
 */


var Component =
/** @__PURE__ @class */
function (_super) {
  __extends$1(Component, _super);
  /**
   * Initialize the constructor for component base
   *
   * @param {Object} options ?
   * @param {string} selector ?
   */


  function Component(options, selector) {
    var _this = _super.call(this, options, selector) || this;

    _this.randomId = uniqueID();
    /**
     * string template option for Blazor template rendering
     *
     * @private
     */

    _this.isStringTemplate = false;
    _this.needsID = false;
    _this.isReactHybrid = false;

    if (isNullOrUndefined(_this.enableRtl)) {
      _this.setProperties({
        'enableRtl': rightToLeft
      }, true);
    }

    if (isNullOrUndefined(_this.locale)) {
      _this.setProperties({
        'locale': defaultCulture
      }, true);
    }

    _this.moduleLoader = new ModuleLoader(_this);
    _this.localObserver = new Observer(_this); // tslint:disable-next-line:no-function-constructor-with-string-args

    onIntlChange.on('notifyExternalChange', _this.detectFunction, _this, _this.randomId);
    validateLicense();

    if (!isUndefined(selector)) {
      _this.appendTo();
    }

    return _this;
  }

  Component.prototype.requiredModules = function () {
    return [];
  };
  /**
   * Destroys the sub modules while destroying the widget
   *
   * @returns {void} ?
   */


  Component.prototype.destroy = function () {
    if (this.isDestroyed) {
      return;
    }

    if (this.enablePersistence) {
      this.setPersistData();
    }

    this.localObserver.destroy();

    if (this.refreshing) {
      return;
    }

    removeClass([this.element], ['e-control']);
    this.trigger('destroyed', {
      cancel: false
    });

    _super.prototype.destroy.call(this);

    this.moduleLoader.clean();
    onIntlChange.off('notifyExternalChange', this.detectFunction, this.randomId);
  };
  /**
   * Applies all the pending property changes and render the component again.
   *
   * @returns {void} ?
   */


  Component.prototype.refresh = function () {
    this.refreshing = true;
    this.moduleLoader.clean();
    this.destroy();
    this.clearChanges();
    this.localObserver = new Observer(this);
    this.preRender();
    this.injectModules();
    this.render();
    this.refreshing = false;
  };

  Component.prototype.accessMount = function () {
    if (this.mount && !this.isReactHybrid) {
      this.mount();
    }
  };
  /**
   * Returns the route element of the component
   *
   * @returns {HTMLElement} ?
   */


  Component.prototype.getRootElement = function () {
    if (this.isReactHybrid) {
      // eslint-disable-next-line
      return this.actualElement;
    } else {
      return this.element;
    }
  };
  /**
   * Returns the persistence data for component
   *
   * @returns {any} ?
   */
  // eslint-disable-next-line


  Component.prototype.getLocalData = function () {
    var eleId = this.getModuleName() + this.element.id;

    if (versionBasedStatePersistence) {
      return window.localStorage.getItem(eleId + this.ej2StatePersistenceVersion);
    } else {
      return window.localStorage.getItem(eleId);
    }
  };
  /**
   * Appends the control within the given HTML element
   *
   * @param {string | HTMLElement} selector - Target element where control needs to be appended
   * @returns {void} ?
   */


  Component.prototype.appendTo = function (selector) {
    if (!isNullOrUndefined(selector) && typeof selector === 'string') {
      this.element = select(selector, document);
    } else if (!isNullOrUndefined(selector)) {
      this.element = selector;
    }

    if (!isNullOrUndefined(this.element)) {
      var moduleClass = 'e-' + this.getModuleName().toLowerCase();
      addClass([this.element], ['e-control', moduleClass]);
      this.isProtectedOnChange = false;

      if (this.needsID && !this.element.id) {
        this.element.id = this.getUniqueID(this.getModuleName());
      }

      if (this.enablePersistence) {
        this.mergePersistData();
        window.addEventListener('unload', this.setPersistData.bind(this));
      }

      var inst = getValue('ej2_instances', this.element);

      if (!inst || inst.indexOf(this) === -1) {
        _super.prototype.addInstance.call(this);
      }

      this.preRender();
      this.injectModules();
      this.render();

      if (!this.mount) {
        this.trigger('created');
      } else {
        this.accessMount();
      }
    }
  };
  /**
   * It is used to process the post rendering functionalities to a component.
   *
   * @param {Node} wrapperElement ?
   * @returns {void} ?
   */


  Component.prototype.renderComplete = function (wrapperElement) {
    if (isBlazor()) {
      var sfBlazor = 'sfBlazor'; // eslint-disable-next-line

      window[sfBlazor].renderComplete(this.element, wrapperElement);
    }

    this.isRendered = true;
  };
  /**
   * When invoked, applies the pending property changes immediately to the component.
   *
   * @returns {void} ?
   */


  Component.prototype.dataBind = function () {
    this.injectModules();

    _super.prototype.dataBind.call(this);
  };
  /**
   * Attach one or more  event handler to the current component context.
   * It is used for internal handling event internally within the component only.
   *
   * @param {BoundOptions[]| string} event - It is  optional type either to  Set the collection of event list or the eventName.
   * @param {Function} handler - optional parameter Specifies the handler to run when the event occurs
   * @param {Object} context - optional parameter Specifies the context to be bind in the handler.
   * @returns {void} ?
   * @private
   */


  Component.prototype.on = function (event, handler, context) {
    if (typeof event === 'string') {
      this.localObserver.on(event, handler, context);
    } else {
      for (var _i = 0, event_1 = event; _i < event_1.length; _i++) {
        var arg = event_1[_i];
        this.localObserver.on(arg.event, arg.handler, arg.context);
      }
    }
  };
  /**
   * To remove one or more event handler that has been attached with the on() method.
   *
   * @param {BoundOptions[]| string} event - It is  optional type either to  Set the collection of event list or the eventName.
   * @param {Function} handler - optional parameter Specifies the function to run when the event occurs
   * @returns {void} ?
   * @private
   */


  Component.prototype.off = function (event, handler) {
    if (typeof event === 'string') {
      this.localObserver.off(event, handler);
    } else {
      for (var _i = 0, event_2 = event; _i < event_2.length; _i++) {
        var arg = event_2[_i];
        this.localObserver.off(arg.event, arg.handler);
      }
    }
  };
  /**
   * To notify the handlers in the specified event.
   *
   * @param {string} property - Specifies the event to be notify.
   * @param {Object} argument - Additional parameters to pass while calling the handler.
   * @returns {void} ?
   * @private
   */


  Component.prototype.notify = function (property, argument) {
    if (this.isDestroyed !== true) {
      this.localObserver.notify(property, argument);
    }
  };
  /**
   * Get injected modules
   *
   * @returns {Function} ?
   * @private
   */


  Component.prototype.getInjectedModules = function () {
    return this.injectedModules;
  };
  /**
   * Dynamically injects the required modules to the component.
   *
   * @param {Function} moduleList ?
   * @returns {void} ?
   */


  Component.Inject = function () {
    var moduleList = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      moduleList[_i] = arguments[_i];
    }

    if (!this.prototype.injectedModules) {
      this.prototype.injectedModules = [];
    }

    for (var i = 0; i < moduleList.length; i++) {
      if (this.prototype.injectedModules.indexOf(moduleList[i]) === -1) {
        this.prototype.injectedModules.push(moduleList[i]);
      }
    }
  };
  /**
   * This is a instance method to create an element.
   *
   * @param {string} tagName ?
   * @param {ElementProperties} prop ?
   * @param {boolean} isVDOM ?
   * @returns {any} ?
   * @private
   */
  // eslint-disable-next-line


  Component.prototype.createElement = function (tagName, prop, isVDOM) {
    return createElement(tagName, prop);
  };
  /**
   *
   * @param {Function} handler - handler to be triggered after state Updated.
   * @param {any} argument - Arguments to be passed to caller.
   * @returns {void} .
   * @private
   */
  // eslint-disable-next-line


  Component.prototype.triggerStateChange = function (handler, argument) {
    if (this.isReactHybrid) {
      // eslint-disable-next-line
      this.setState();
      this.currentContext = {
        calls: handler,
        args: argument
      };
    }
  }; // tslint: enable: no-any


  Component.prototype.injectModules = function () {
    if (this.injectedModules && this.injectedModules.length) {
      this.moduleLoader.inject(this.requiredModules(), this.injectedModules);
    }
  };

  Component.prototype.detectFunction = function (args) {
    var prop = Object.keys(args);

    if (prop.length) {
      this[prop[0]] = args[prop[0]];
    }
  };

  Component.prototype.mergePersistData = function () {
    var data;

    if (versionBasedStatePersistence) {
      data = window.localStorage.getItem(this.getModuleName() + this.element.id + this.ej2StatePersistenceVersion);
    } else {
      data = window.localStorage.getItem(this.getModuleName() + this.element.id);
    }

    if (!(isNullOrUndefined(data) || data === '')) {
      this.setProperties(JSON.parse(data), true);
    }
  };

  Component.prototype.setPersistData = function () {
    if (!this.isDestroyed) {
      if (versionBasedStatePersistence) {
        window.localStorage.setItem(this.getModuleName() + this.element.id + this.ej2StatePersistenceVersion, this.getPersistData());
      } else {
        window.localStorage.setItem(this.getModuleName() + this.element.id, this.getPersistData());
      }
    }
  }; //tslint:disable-next-line


  Component.prototype.renderReactTemplates = function () {//No Code
  }; // eslint-disable-next-line


  Component.prototype.clearTemplate = function (templateName, index) {//No Code
  };

  Component.prototype.getUniqueID = function (definedName) {
    if (this.isHistoryChanged()) {
      componentCount = 0;
    }

    lastPageID = this.pageID(location.href);
    lastHistoryLen = history.length;
    return definedName + '_' + lastPageID + '_' + componentCount++;
  };

  Component.prototype.pageID = function (url) {
    var hash = 0;

    if (url.length === 0) {
      return hash;
    }

    for (var i = 0; i < url.length; i++) {
      var char = url.charCodeAt(i);
      hash = (hash << 5) - hash + char;
      hash = hash & hash; // Convert to 32bit integer
    }

    return Math.abs(hash);
  };

  Component.prototype.isHistoryChanged = function () {
    return lastPageID !== this.pageID(location.href) || lastHistoryLen !== history.length;
  };

  Component.prototype.addOnPersist = function (options) {
    var _this = this;

    var persistObj = {};

    for (var _i = 0, options_1 = options; _i < options_1.length; _i++) {
      var key = options_1[_i];
      var objValue = void 0; // eslint-disable-next-line

      objValue = getValue(key, this);

      if (!isUndefined(objValue)) {
        setValue(key, this.getActualProperties(objValue), persistObj);
      }
    }

    return JSON.stringify(persistObj, function (key, value) {
      return _this.getActualProperties(value);
    });
  };

  Component.prototype.getActualProperties = function (obj) {
    if (obj instanceof ChildProperty) {
      return getValue('properties', obj);
    } else {
      return obj;
    }
  };

  Component.prototype.ignoreOnPersist = function (options) {
    return JSON.stringify(this.iterateJsonProperties(this.properties, options));
  };

  Component.prototype.iterateJsonProperties = function (obj, ignoreList) {
    var newObj = {};

    var _loop_1 = function (key) {
      if (ignoreList.indexOf(key) === -1) {
        // eslint-disable-next-line
        var value = obj[key];

        if (typeof value === 'object' && !(value instanceof Array)) {
          var newList = ignoreList.filter(function (str) {
            return new RegExp(key + '.').test(str);
          }).map(function (str) {
            return str.replace(key + '.', '');
          });
          newObj[key] = this_1.iterateJsonProperties(this_1.getActualProperties(value), newList);
        } else {
          newObj[key] = value;
        }
      }
    };

    var this_1 = this;

    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {
      var key = _a[_i];

      _loop_1(key);
    }

    return newObj;
  };

  __decorate$1([Property(false)], Component.prototype, "enablePersistence", void 0);

  __decorate$1([Property()], Component.prototype, "enableRtl", void 0);

  __decorate$1([Property()], Component.prototype, "locale", void 0);

  Component = __decorate$1([NotifyPropertyChanges], Component);
  return Component;
}(Base); //Function handling for page navigation detection

/* istanbul ignore next */


(function () {
  if (typeof window !== 'undefined') {
    window.addEventListener('popstate',
    /* istanbul ignore next */
    function () {
      componentCount = 0;
    });
  }
})();

var __extends$2 =  false || function () {
  var extendStatics = function (d, b) {
    extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    };

    return extendStatics(d, b);
  };

  return function (d, b) {
    extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __decorate$2 =  false || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var defaultPosition = {
  left: 0,
  top: 0,
  bottom: 0,
  right: 0
};
var isDraggedObject = {
  isDragged: false
};
/**
 * Specifies the position coordinates
 */

var Position =
/** @__PURE__ @class */
function (_super) {
  __extends$2(Position, _super);

  function Position() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate$2([Property(0)], Position.prototype, "left", void 0);

  __decorate$2([Property(0)], Position.prototype, "top", void 0);

  return Position;
}(ChildProperty);
/**
 * Draggable Module provides support to enable draggable functionality in Dom Elements.
 * ```html
 * <div id='drag'>Draggable</div>
 * <script>
 * var ele = document.getElementById('drag');
 * var drag:Draggable = new Draggable(ele,{
 *     clone:false,
 *     drag: function(e) {
 *      //drag handler code.
 *      },
 *     handle:'.class'
 * });
 * </script>
 * ```
 */


var Draggable =
/** @__PURE__ @class */
function (_super) {
  __extends$2(Draggable, _super);

  function Draggable(element, options) {
    var _this = _super.call(this, options, element) || this;

    _this.dragLimit = Draggable_1.getDefaultPosition();
    _this.borderWidth = Draggable_1.getDefaultPosition();
    _this.padding = Draggable_1.getDefaultPosition();
    _this.diffX = 0;
    _this.prevLeft = 0;
    _this.prevTop = 0;
    _this.dragProcessStarted = false;
    /* tslint:disable no-any */

    _this.eleTop = 0;
    _this.tapHoldTimer = 0;
    _this.externalInitialize = false;
    _this.diffY = 0;
    _this.parentScrollX = 0;
    _this.parentScrollY = 0;
    _this.droppables = {};

    _this.bind();

    return _this;
  }

  Draggable_1 = Draggable;

  Draggable.prototype.bind = function () {
    this.toggleEvents();

    if (Browser.isIE) {
      addClass([this.element], 'e-block-touch');
    }

    this.droppables[this.scope] = {};
  };

  Draggable.getDefaultPosition = function () {
    return extend({}, defaultPosition);
  };

  Draggable.prototype.toggleEvents = function (isUnWire) {
    var ele;

    if (!isUndefined(this.handle)) {
      ele = select(this.handle, this.element);
    }

    var handler = this.enableTapHold && Browser.isDevice && Browser.isTouch ? this.mobileInitialize : this.initialize;

    if (isUnWire) {
      EventHandler.remove(ele || this.element, Browser.touchStartEvent, handler);
    } else {
      EventHandler.add(ele || this.element, Browser.touchStartEvent, handler, this);
    }
  };
  /* istanbul ignore next */


  Draggable.prototype.mobileInitialize = function (evt) {
    var _this = this;

    var target = evt.currentTarget;
    this.tapHoldTimer = setTimeout(function () {
      _this.externalInitialize = true;

      _this.removeTapholdTimer();

      _this.initialize(evt, target);
    }, this.tapHoldThreshold);
    EventHandler.add(document, Browser.touchMoveEvent, this.removeTapholdTimer, this);
    EventHandler.add(document, Browser.touchEndEvent, this.removeTapholdTimer, this);
  };
  /* istanbul ignore next */


  Draggable.prototype.removeTapholdTimer = function () {
    clearTimeout(this.tapHoldTimer);
    EventHandler.remove(document, Browser.touchMoveEvent, this.removeTapholdTimer);
    EventHandler.remove(document, Browser.touchEndEvent, this.removeTapholdTimer);
  };
  /* istanbul ignore next */


  Draggable.prototype.getScrollableParent = function (element, axis) {
    var scroll = {
      'vertical': 'scrollHeight',
      'horizontal': 'scrollWidth'
    };
    var client = {
      'vertical': 'clientHeight',
      'horizontal': 'clientWidth'
    };

    if (isNullOrUndefined(element)) {
      return null;
    }

    if (element[scroll[axis]] > element[client[axis]]) {
      if (axis === 'vertical' ? element.scrollTop > 0 : element.scrollLeft > 0) {
        if (axis === 'vertical') {
          this.parentScrollY = this.parentScrollY + (this.parentScrollY === 0 ? element.scrollTop : element.scrollTop - this.parentScrollY);
          this.tempScrollHeight = element.scrollHeight;
        } else {
          this.parentScrollX = this.parentScrollX + (this.parentScrollX === 0 ? element.scrollLeft : element.scrollLeft - this.parentScrollX);
          this.tempScrollWidth = element.scrollWidth;
        }

        if (!isNullOrUndefined(element)) {
          return this.getScrollableParent(element.parentNode, axis);
        } else {
          return element;
        }
      } else {
        return this.getScrollableParent(element.parentNode, axis);
      }
    } else {
      return this.getScrollableParent(element.parentNode, axis);
    }
  };

  Draggable.prototype.getScrollableValues = function () {
    this.parentScrollX = 0;
    this.parentScrollY = 0;
    var isModalDialog = this.element.classList.contains('e-dialog') && this.element.classList.contains('e-dlg-modal');
    var verticalScrollParent = this.getScrollableParent(this.element.parentNode, 'vertical');
    var horizontalScrollParent = this.getScrollableParent(this.element.parentNode, 'horizontal');
  };

  Draggable.prototype.initialize = function (evt, curTarget) {
    this.currentStateTarget = evt.target;

    if (this.isDragStarted()) {
      return;
    } else {
      this.isDragStarted(true);
      this.externalInitialize = false;
    }

    this.target = evt.currentTarget || curTarget;
    this.dragProcessStarted = false;

    if (this.abort) {
      /* tslint:disable no-any */
      var abortSelectors = this.abort;

      if (typeof abortSelectors === 'string') {
        abortSelectors = [abortSelectors];
      }

      for (var i = 0; i < abortSelectors.length; i++) {
        if (!isNullOrUndefined(closest(evt.target, abortSelectors[i]))) {
          /* istanbul ignore next */
          if (this.isDragStarted()) {
            this.isDragStarted(true);
          }

          return;
        }
      }
    }

    if (this.preventDefault && !isUndefined(evt.changedTouches) && evt.type !== 'touchstart') {
      evt.preventDefault();
    }

    this.element.setAttribute('aria-grabbed', 'true');
    var intCoord = this.getCoordinates(evt);
    this.initialPosition = {
      x: intCoord.pageX,
      y: intCoord.pageY
    };

    if (!this.clone) {
      var pos = this.element.getBoundingClientRect();
      this.getScrollableValues();

      if (evt.clientX === evt.pageX) {
        this.parentScrollX = 0;
      }

      if (evt.clientY === evt.pageY) {
        this.parentScrollY = 0;
      }

      this.relativeXPosition = intCoord.pageX - (pos.left + this.parentScrollX);
      this.relativeYPosition = intCoord.pageY - (pos.top + this.parentScrollY);
    }

    if (this.externalInitialize) {
      this.intDragStart(evt);
    } else {
      EventHandler.add(document, Browser.touchMoveEvent, this.intDragStart, this);
      EventHandler.add(document, Browser.touchEndEvent, this.intDestroy, this);
    }

    this.toggleEvents(true);

    if (evt.type !== 'touchstart' && this.isPreventSelect) {
      document.body.classList.add('e-prevent-select');
    }

    this.externalInitialize = false;
    EventHandler.trigger(document.documentElement, Browser.touchStartEvent, evt);
  };

  Draggable.prototype.intDragStart = function (evt) {
    this.removeTapholdTimer();
    var isChangeTouch = !isUndefined(evt.changedTouches);

    if (isChangeTouch && evt.changedTouches.length !== 1) {
      return;
    }

    var intCordinate = this.getCoordinates(evt);
    var pos;
    var styleProp = getComputedStyle(this.element);
    this.margin = {
      left: parseInt(styleProp.marginLeft, 10),
      top: parseInt(styleProp.marginTop, 10),
      right: parseInt(styleProp.marginRight, 10),
      bottom: parseInt(styleProp.marginBottom, 10)
    };
    var element = this.element;

    if (this.clone && this.dragTarget) {
      var intClosest = closest(evt.target, this.dragTarget);

      if (!isNullOrUndefined(intClosest)) {
        element = intClosest;
      }
    }
    /* istanbul ignore next */


    if (this.isReplaceDragEle) {
      element = this.currentStateCheck(evt.target, element);
    }

    this.offset = this.calculateParentPosition(element);
    this.position = this.getMousePosition(evt, this.isDragScroll);
    var x = this.initialPosition.x - intCordinate.pageX;
    var y = this.initialPosition.y - intCordinate.pageY;
    var distance = Math.sqrt(x * x + y * y);

    if (distance >= this.distance || this.externalInitialize) {
      var ele = this.getHelperElement(evt);

      if (!ele || isNullOrUndefined(ele)) {
        return;
      }

      if (isChangeTouch) {
        evt.preventDefault();
      }

      var dragTargetElement = this.helperElement = ele;
      this.parentClientRect = this.calculateParentPosition(dragTargetElement.offsetParent);

      if (this.dragStart) {
        var curTarget = this.getProperTargetElement(evt);
        var args = {
          event: evt,
          element: element,
          target: curTarget,
          bindEvents: isBlazor() ? this.bindDragEvents.bind(this) : null,
          dragElement: dragTargetElement
        };
        this.trigger('dragStart', args);
      }

      if (this.dragArea) {
        this.setDragArea();
      } else {
        this.dragLimit = {
          left: 0,
          right: 0,
          bottom: 0,
          top: 0
        };
        this.borderWidth = {
          top: 0,
          left: 0
        };
      }

      pos = {
        left: this.position.left - this.parentClientRect.left,
        top: this.position.top - this.parentClientRect.top
      };

      if (this.clone && !this.enableTailMode) {
        this.diffX = this.position.left - this.offset.left;
        this.diffY = this.position.top - this.offset.top;
      }

      this.getScrollableValues(); // when drag element has margin-top

      var styles = getComputedStyle(element);
      var marginTop = parseFloat(styles.marginTop);
      /* istanbul ignore next */

      if (this.clone && marginTop !== 0) {
        pos.top += marginTop;
      }

      this.eleTop = !isNaN(parseFloat(styles.top)) ? parseFloat(styles.top) - this.offset.top : 0;
      /* istanbul ignore next */
      // if (this.eleTop > 0) {
      //     pos.top += this.eleTop;
      // }

      if (this.enableScrollHandler && !this.clone) {
        pos.top -= this.parentScrollY;
        pos.left -= this.parentScrollX;
      }

      var posValue = this.getProcessedPositionValue({
        top: pos.top - this.diffY + 'px',
        left: pos.left - this.diffX + 'px'
      });
      this.dragElePosition = {
        top: pos.top,
        left: pos.left
      };
      setStyleAttribute(dragTargetElement, this.getDragPosition({
        position: 'absolute',
        left: posValue.left,
        top: posValue.top
      }));
      EventHandler.remove(document, Browser.touchMoveEvent, this.intDragStart);
      EventHandler.remove(document, Browser.touchEndEvent, this.intDestroy);

      if (!isBlazor()) {
        this.bindDragEvents(dragTargetElement);
      }
    }
  };

  Draggable.prototype.bindDragEvents = function (dragTargetElement) {
    if (isVisible(dragTargetElement)) {
      EventHandler.add(document, Browser.touchMoveEvent, this.intDrag, this);
      EventHandler.add(document, Browser.touchEndEvent, this.intDragStop, this);
      this.setGlobalDroppables(false, this.element, dragTargetElement);
    } else {
      this.toggleEvents();
      document.body.classList.remove('e-prevent-select');
    }
  };

  Draggable.prototype.elementInViewport = function (el) {
    this.top = el.offsetTop;
    this.left = el.offsetLeft;
    this.width = el.offsetWidth;
    this.height = el.offsetHeight;

    while (el.offsetParent) {
      el = el.offsetParent;
      this.top += el.offsetTop;
      this.left += el.offsetLeft;
    }

    return this.top >= window.pageYOffset && this.left >= window.pageXOffset && this.top + this.height <= window.pageYOffset + window.innerHeight && this.left + this.width <= window.pageXOffset + window.innerWidth;
  };

  Draggable.prototype.getProcessedPositionValue = function (value) {
    if (this.queryPositionInfo) {
      return this.queryPositionInfo(value);
    }

    return value;
  };

  Draggable.prototype.calculateParentPosition = function (ele) {
    if (isNullOrUndefined(ele)) {
      return {
        left: 0,
        top: 0
      };
    }

    var rect = ele.getBoundingClientRect();
    var style = getComputedStyle(ele);
    return {
      left: rect.left + window.pageXOffset - parseInt(style.marginLeft, 10),
      top: rect.top + window.pageYOffset - parseInt(style.marginTop, 10)
    };
  }; // tslint:disable-next-line:max-func-body-length


  Draggable.prototype.intDrag = function (evt) {
    if (!isUndefined(evt.changedTouches) && evt.changedTouches.length !== 1) {
      return;
    }

    if (this.clone && evt.changedTouches && Browser.isDevice && Browser.isTouch) {
      evt.preventDefault();
    }

    var left;
    var top;
    this.position = this.getMousePosition(evt, this.isDragScroll);
    var docHeight = this.getDocumentWidthHeight('Height');

    if (docHeight < this.position.top) {
      this.position.top = docHeight;
    }

    var docWidth = this.getDocumentWidthHeight('Width');

    if (docWidth < this.position.left) {
      this.position.left = docWidth;
    }

    if (this.drag) {
      var curTarget = this.getProperTargetElement(evt);
      this.trigger('drag', {
        event: evt,
        element: this.element,
        target: curTarget
      });
    }

    var eleObj = this.checkTargetElement(evt);

    if (eleObj.target && eleObj.instance) {
      /* tslint:disable no-any */
      var flag = true;

      if (this.hoverObject) {
        if (this.hoverObject.instance !== eleObj.instance) {
          this.triggerOutFunction(evt, eleObj);
        } else {
          flag = false;
        }
      }

      if (flag) {
        eleObj.instance.dragData[this.scope] = this.droppables[this.scope];
        eleObj.instance.intOver(evt, eleObj.target);
        this.hoverObject = eleObj;
      }
    } else if (this.hoverObject) {
      this.triggerOutFunction(evt, eleObj);
    }

    var helperElement = this.droppables[this.scope].helper;
    this.parentClientRect = this.calculateParentPosition(this.helperElement.offsetParent);
    var tLeft = this.parentClientRect.left;
    var tTop = this.parentClientRect.top;
    var intCoord = this.getCoordinates(evt);
    var pagex = intCoord.pageX;
    var pagey = intCoord.pageY;
    var dLeft = this.position.left - this.diffX;
    var dTop = this.position.top - this.diffY;
    var styles = getComputedStyle(helperElement);

    if (this.dragArea) {
      if (this.pageX !== pagex || this.skipDistanceCheck) {
        var helperWidth = helperElement.offsetWidth + (parseFloat(styles.marginLeft) + parseFloat(styles.marginRight));

        if (this.dragLimit.left > dLeft && dLeft > 0) {
          left = this.dragLimit.left;
        } else if (this.dragLimit.right + window.pageXOffset < dLeft + helperWidth && dLeft > 0) {
          left = dLeft - (dLeft - this.dragLimit.right) + window.pageXOffset - helperWidth;
        } else {
          left = dLeft < 0 ? this.dragLimit.left : dLeft;
        }
      }

      if (this.pageY !== pagey || this.skipDistanceCheck) {
        var helperHeight = helperElement.offsetHeight + (parseFloat(styles.marginTop) + parseFloat(styles.marginBottom));

        if (this.dragLimit.top > dTop && dTop > 0) {
          top = this.dragLimit.top;
        } else if (this.dragLimit.bottom + window.pageYOffset < dTop + helperHeight && dTop > 0) {
          top = dTop - (dTop - this.dragLimit.bottom) + window.pageYOffset - helperHeight;
        } else {
          top = dTop < 0 ? this.dragLimit.top : dTop;
        }
      }
    } else {
      left = dLeft;
      top = dTop;
    }

    var iTop = tTop + this.borderWidth.top;
    var iLeft = tLeft + this.borderWidth.left;

    if (this.dragProcessStarted) {
      if (isNullOrUndefined(top)) {
        top = this.prevTop;
      }

      if (isNullOrUndefined(left)) {
        left = this.prevLeft;
      }
    }

    var draEleTop;
    var draEleLeft;

    if (this.dragArea) {
      this.dragLimit.top = this.clone ? this.dragLimit.top : 0;
      draEleTop = top - iTop < 0 ? this.dragLimit.top : top - iTop;
      draEleLeft = left - iLeft < 0 ? this.dragElePosition.left : left - iLeft;
    } else {
      draEleTop = top - iTop;
      draEleLeft = left - iLeft;
    }

    var marginTop = parseFloat(getComputedStyle(this.element).marginTop); // when drag-element has margin-top

    /* istanbul ignore next */

    if (marginTop > 0) {
      if (this.clone) {
        draEleTop += marginTop;

        if (dTop < 0) {
          if (marginTop + dTop >= 0) {
            draEleTop = marginTop + dTop;
          } else {
            draEleTop -= marginTop;
          }
        }

        draEleTop = this.dragLimit.bottom < draEleTop ? this.dragLimit.bottom : draEleTop;
      }

      if (top - iTop < 0) {
        if (dTop + marginTop + (helperElement.offsetHeight - iTop) >= 0) {
          var tempDraEleTop = this.dragLimit.top + dTop - iTop;

          if (tempDraEleTop + marginTop + iTop < 0) {
            draEleTop -= marginTop + iTop;
          } else {
            draEleTop = tempDraEleTop;
          }
        } else {
          draEleTop -= marginTop + iTop;
        }
      }
    }
    /* istanbul ignore next */
    // if(this.eleTop > 0) {
    //      draEleTop += this.eleTop;
    // }


    if (this.enableScrollHandler && !this.clone) {
      draEleTop -= this.parentScrollY;
      draEleLeft -= this.parentScrollX;
    }

    var dragValue = this.getProcessedPositionValue({
      top: draEleTop + 'px',
      left: draEleLeft + 'px'
    });
    setStyleAttribute(helperElement, this.getDragPosition(dragValue));

    if (!this.elementInViewport(helperElement) && this.enableAutoScroll && !this.helperElement.classList.contains('e-treeview')) {
      this.helperElement.scrollIntoView();
    }

    var elements = document.querySelectorAll(':hover');

    if (this.enableAutoScroll && this.helperElement.classList.contains('e-treeview')) {
      if (elements.length === 0) {
        elements = this.getPathElements(evt);
      }
      /* tslint:disable no-any */


      var scrollParent = this.getScrollParent(elements, false);

      if (this.elementInViewport(this.helperElement)) {
        this.getScrollPosition(scrollParent, draEleTop);
      } else if (!this.elementInViewport(this.helperElement)) {
        elements = [].slice.call(document.querySelectorAll(':hover'));

        if (elements.length === 0) {
          elements = this.getPathElements(evt);
        }

        scrollParent = this.getScrollParent(elements, true);
        this.getScrollPosition(scrollParent, draEleTop);
      }
    }

    this.dragProcessStarted = true;
    this.prevLeft = left;
    this.prevTop = top;
    this.position.left = left;
    this.position.top = top;
    this.pageX = pagex;
    this.pageY = pagey;
  };
  /* tslint:disable no-any */


  Draggable.prototype.getScrollParent = function (node, reverse) {
    /* tslint:disable no-any */
    var nodeEl = reverse ? node.reverse() : node;
    var hasScroll;

    for (var i = nodeEl.length - 1; i >= 0; i--) {
      hasScroll = window.getComputedStyle(nodeEl[i])['overflow-y'];

      if ((hasScroll === 'auto' || hasScroll === 'scroll') && nodeEl[i].scrollHeight > nodeEl[i].clientHeight) {
        return nodeEl[i];
      }
    }

    hasScroll = window.getComputedStyle(document.scrollingElement)['overflow-y'];

    if (hasScroll === 'visible') {
      document.scrollingElement.style.overflow = 'auto';
      return document.scrollingElement;
    }
  };

  Draggable.prototype.getScrollPosition = function (nodeEle, draEleTop) {
    if (nodeEle && nodeEle === document.scrollingElement) {
      if (nodeEle.clientHeight - nodeEle.getBoundingClientRect().top - this.helperElement.clientHeight < draEleTop && nodeEle.getBoundingClientRect().height > draEleTop) {
        nodeEle.scrollTop += this.helperElement.clientHeight;
      } else if (nodeEle.scrollHeight - nodeEle.clientHeight > draEleTop) {
        nodeEle.scrollTop -= this.helperElement.clientHeight;
      }
    } else if (nodeEle && nodeEle !== document.scrollingElement) {
      if (nodeEle.clientHeight + nodeEle.getBoundingClientRect().top - this.helperElement.clientHeight < draEleTop) {
        nodeEle.scrollTop += this.helperElement.clientHeight;
      } else if (nodeEle.getBoundingClientRect().top > draEleTop - this.helperElement.clientHeight) {
        nodeEle.scrollTop -= this.helperElement.clientHeight;
      }
    }
  };

  Draggable.prototype.getPathElements = function (evt) {
    var elementTop = evt.clientX > 0 ? evt.clientX : 0;
    var elementLeft = evt.clientY > 0 ? evt.clientY : 0;
    return document.elementsFromPoint(elementTop, elementLeft);
  };

  Draggable.prototype.triggerOutFunction = function (evt, eleObj) {
    this.hoverObject.instance.intOut(evt, eleObj.target);
    this.hoverObject.instance.dragData[this.scope] = null;
    this.hoverObject = null;
  };

  Draggable.prototype.getDragPosition = function (dragValue) {
    var temp = extend({}, dragValue);

    if (this.axis) {
      if (this.axis === 'x') {
        delete temp.top;
      } else if (this.axis === 'y') {
        delete temp.left;
      }
    }

    return temp;
  };

  Draggable.prototype.getDocumentWidthHeight = function (str) {
    var docBody = document.body;
    var docEle = document.documentElement;
    var returnValue = Math.max(docBody['scroll' + str], docEle['scroll' + str], docBody['offset' + str], docEle['offset' + str], docEle['client' + str]);
    return returnValue;
  };

  Draggable.prototype.intDragStop = function (evt) {
    this.dragProcessStarted = false;

    if (!isUndefined(evt.changedTouches) && evt.changedTouches.length !== 1) {
      return;
    }

    var type = ['touchend', 'pointerup', 'mouseup'];

    if (type.indexOf(evt.type) !== -1) {
      if (this.dragStop) {
        var curTarget = this.getProperTargetElement(evt);
        this.trigger('dragStop', {
          event: evt,
          element: this.element,
          target: curTarget,
          helper: this.helperElement
        });
      }

      this.intDestroy(evt);
    } else {
      this.element.setAttribute('aria-grabbed', 'false');
    }

    var eleObj = this.checkTargetElement(evt);

    if (eleObj.target && eleObj.instance) {
      eleObj.instance.dragStopCalled = true;
      eleObj.instance.dragData[this.scope] = this.droppables[this.scope];
      eleObj.instance.intDrop(evt, eleObj.target);
    }

    this.setGlobalDroppables(true);
    document.body.classList.remove('e-prevent-select');
  };
  /**
   * @private
   */


  Draggable.prototype.intDestroy = function (evt) {
    this.dragProcessStarted = false;
    this.toggleEvents();
    document.body.classList.remove('e-prevent-select');
    this.element.setAttribute('aria-grabbed', 'false');
    EventHandler.remove(document, Browser.touchMoveEvent, this.intDragStart);
    EventHandler.remove(document, Browser.touchEndEvent, this.intDragStop);
    EventHandler.remove(document, Browser.touchEndEvent, this.intDestroy);
    EventHandler.remove(document, Browser.touchMoveEvent, this.intDrag);

    if (this.isDragStarted()) {
      this.isDragStarted(true);
    }
  }; // triggers when property changed


  Draggable.prototype.onPropertyChanged = function (newProp, oldProp) {//No Code to handle
  };

  Draggable.prototype.getModuleName = function () {
    return 'draggable';
  };

  Draggable.prototype.isDragStarted = function (change) {
    if (change) {
      isDraggedObject.isDragged = !isDraggedObject.isDragged;
    }

    return isDraggedObject.isDragged;
  };

  Draggable.prototype.setDragArea = function () {
    var eleWidthBound;
    var eleHeightBound;
    var top = 0;
    var left = 0;
    var ele;
    var type = typeof this.dragArea;

    if (type === 'string') {
      ele = select(this.dragArea);
    } else {
      ele = this.dragArea;
    }

    if (ele) {
      var elementArea = ele.getBoundingClientRect();
      eleWidthBound = ele.scrollWidth ? ele.scrollWidth : elementArea.right - elementArea.left;
      eleHeightBound = ele.scrollHeight ? ele.scrollHeight : elementArea.bottom - elementArea.top;
      var keys = ['Top', 'Left', 'Bottom', 'Right'];
      var styles = getComputedStyle(ele);

      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        var tborder = styles['border' + key + 'Width'];
        var tpadding = styles['padding' + key];
        var lowerKey = key.toLowerCase();
        this.borderWidth[lowerKey] = isNaN(parseFloat(tborder)) ? 0 : parseFloat(tborder);
        this.padding[lowerKey] = isNaN(parseFloat(tpadding)) ? 0 : parseFloat(tpadding);
      }

      top = elementArea.top;
      left = elementArea.left;
      this.dragLimit.left = left + this.borderWidth.left + this.padding.left;
      this.dragLimit.top = ele.offsetTop + this.borderWidth.top + this.padding.top;
      this.dragLimit.right = left + eleWidthBound - (this.borderWidth.right + this.padding.right);
      this.dragLimit.bottom = top + eleHeightBound - (this.borderWidth.bottom + this.padding.bottom);
    }
  };

  Draggable.prototype.getProperTargetElement = function (evt) {
    var intCoord = this.getCoordinates(evt);
    var ele;
    var prevStyle = this.helperElement.style.pointerEvents || '';

    if (compareElementParent(evt.target, this.helperElement) || evt.type.indexOf('touch') !== -1) {
      this.helperElement.style.pointerEvents = 'none';
      ele = document.elementFromPoint(intCoord.clientX, intCoord.clientY);
      this.helperElement.style.pointerEvents = prevStyle;
    } else {
      ele = evt.target;
    }

    return ele;
  };
  /* istanbul ignore next */


  Draggable.prototype.currentStateCheck = function (ele, oldEle) {
    var elem;

    if (!isNullOrUndefined(this.currentStateTarget) && this.currentStateTarget !== ele) {
      elem = this.currentStateTarget;
    } else {
      elem = !isNullOrUndefined(oldEle) ? oldEle : ele;
    }

    return elem;
  };

  Draggable.prototype.getMousePosition = function (evt, isdragscroll) {
    /* tslint:disable no-any */
    var dragEle = evt.srcElement !== undefined ? evt.srcElement : evt.target;
    var intCoord = this.getCoordinates(evt);
    var pageX;
    var pageY;
    var isOffsetParent = isNullOrUndefined(dragEle.offsetParent);
    /* istanbul ignore next */

    if (isdragscroll) {
      pageX = this.clone ? intCoord.pageX : intCoord.pageX + (isOffsetParent ? 0 : dragEle.offsetParent.scrollLeft) - this.relativeXPosition;
      pageY = this.clone ? intCoord.pageY : intCoord.pageY + (isOffsetParent ? 0 : dragEle.offsetParent.scrollTop) - this.relativeYPosition;
    } else {
      pageX = this.clone ? intCoord.pageX : intCoord.pageX + window.pageXOffset - this.relativeXPosition;
      pageY = this.clone ? intCoord.pageY : intCoord.pageY + window.pageYOffset - this.relativeYPosition;
    }

    return {
      left: pageX - (this.margin.left + this.cursorAt.left),
      top: pageY - (this.margin.top + this.cursorAt.top)
    };
  };

  Draggable.prototype.getCoordinates = function (evt) {
    if (evt.type.indexOf('touch') > -1) {
      return evt.changedTouches[0];
    }

    return evt;
  };

  Draggable.prototype.getHelperElement = function (evt) {
    var element;

    if (this.clone) {
      if (this.helper) {
        element = this.helper({
          sender: evt,
          element: this.target
        });
      } else {
        element = createElement('div', {
          className: 'e-drag-helper e-block-touch',
          innerHTML: 'Draggable'
        });
        document.body.appendChild(element);
      }
    } else {
      element = this.element;
    }

    return element;
  };

  Draggable.prototype.setGlobalDroppables = function (reset, drag, helper) {
    this.droppables[this.scope] = reset ? null : {
      draggable: drag,
      helper: helper,
      draggedElement: this.element
    };
  };

  Draggable.prototype.checkTargetElement = function (evt) {
    var target = this.getProperTargetElement(evt);
    var dropIns = this.getDropInstance(target);

    if (!dropIns && target && !isNullOrUndefined(target.parentNode)) {
      var parent_1 = closest(target.parentNode, '.e-droppable') || target.parentElement;

      if (parent_1) {
        dropIns = this.getDropInstance(parent_1);
      }
    }

    return {
      target: target,
      instance: dropIns
    };
  };

  Draggable.prototype.getDropInstance = function (ele) {
    var name = 'getModuleName';
    var drop;
    var eleInst = ele && ele.ej2_instances;

    if (eleInst) {
      for (var _i = 0, eleInst_1 = eleInst; _i < eleInst_1.length; _i++) {
        var inst = eleInst_1[_i];

        if (inst[name]() === 'droppable') {
          drop = inst;
          break;
        }
      }
    }

    return drop;
  };

  Draggable.prototype.destroy = function () {
    this.toggleEvents(true);

    _super.prototype.destroy.call(this);
  };

  var Draggable_1;

  __decorate$2([Complex({}, Position)], Draggable.prototype, "cursorAt", void 0);

  __decorate$2([Property(true)], Draggable.prototype, "clone", void 0);

  __decorate$2([Property()], Draggable.prototype, "dragArea", void 0);

  __decorate$2([Property()], Draggable.prototype, "isDragScroll", void 0);

  __decorate$2([Property()], Draggable.prototype, "isReplaceDragEle", void 0);

  __decorate$2([Property(true)], Draggable.prototype, "isPreventSelect", void 0);

  __decorate$2([Event$1()], Draggable.prototype, "drag", void 0);

  __decorate$2([Event$1()], Draggable.prototype, "dragStart", void 0);

  __decorate$2([Event$1()], Draggable.prototype, "dragStop", void 0);

  __decorate$2([Property(1)], Draggable.prototype, "distance", void 0);

  __decorate$2([Property()], Draggable.prototype, "handle", void 0);

  __decorate$2([Property()], Draggable.prototype, "abort", void 0);

  __decorate$2([Property()], Draggable.prototype, "helper", void 0);

  __decorate$2([Property('default')], Draggable.prototype, "scope", void 0);

  __decorate$2([Property('')], Draggable.prototype, "dragTarget", void 0);

  __decorate$2([Property()], Draggable.prototype, "axis", void 0);

  __decorate$2([Property()], Draggable.prototype, "queryPositionInfo", void 0);

  __decorate$2([Property(false)], Draggable.prototype, "enableTailMode", void 0);

  __decorate$2([Property(false)], Draggable.prototype, "skipDistanceCheck", void 0);

  __decorate$2([Property(true)], Draggable.prototype, "preventDefault", void 0);

  __decorate$2([Property(false)], Draggable.prototype, "enableAutoScroll", void 0);

  __decorate$2([Property(false)], Draggable.prototype, "enableTapHold", void 0);

  __decorate$2([Property(750)], Draggable.prototype, "tapHoldThreshold", void 0);

  __decorate$2([Property(false)], Draggable.prototype, "enableScrollHandler", void 0);

  Draggable = Draggable_1 = __decorate$2([NotifyPropertyChanges], Draggable);
  return Draggable;
}(Base);

var __extends$3 =  false || function () {
  var extendStatics = function (d, b) {
    extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    };

    return extendStatics(d, b);
  };

  return function (d, b) {
    extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __decorate$3 =  false || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
/**
 * Droppable Module provides support to enable droppable functionality in Dom Elements.
 * ```html
 * <div id='drop'>Droppable</div>
 * <script>
 * let ele:HTMLElement = document.getElementById('drop');
 * var drag:Droppable = new Droppable(ele,{
 *     accept:'.drop',
 *     drop: function(e) {
 *      //drop handler code.
 *     }
 * });
 * </script>
 * ```
 */


var Droppable =
/** @__PURE__ @class */
function (_super) {
  __extends$3(Droppable, _super);

  function Droppable(element, options) {
    var _this = _super.call(this, options, element) || this;

    _this.mouseOver = false;
    _this.dragData = {};
    _this.dragStopCalled = false;

    _this.bind();

    return _this;
  }

  Droppable.prototype.bind = function () {
    this.wireEvents();
  };

  Droppable.prototype.wireEvents = function () {
    EventHandler.add(this.element, Browser.touchEndEvent, this.intDrop, this);
  }; // triggers when property changed
  // eslint-disable-next-line


  Droppable.prototype.onPropertyChanged = function (newProp, oldProp) {//No Code to handle
  };

  Droppable.prototype.getModuleName = function () {
    return 'droppable';
  };

  Droppable.prototype.intOver = function (event, element) {
    if (!this.mouseOver) {
      var drag = this.dragData[this.scope];
      this.trigger('over', {
        event: event,
        target: element,
        dragData: drag
      });
      this.mouseOver = true;
    }
  };

  Droppable.prototype.intOut = function (event, element) {
    if (this.mouseOver) {
      this.trigger('out', {
        evt: event,
        target: element
      });
      this.mouseOver = false;
    }
  };

  Droppable.prototype.intDrop = function (evt, element) {
    if (!this.dragStopCalled) {
      return;
    } else {
      this.dragStopCalled = false;
    }

    var accept = true;
    var drag = this.dragData[this.scope];
    var isDrag = drag ? drag.helper && isVisible(drag.helper) : false;
    var area;

    if (isDrag) {
      area = this.isDropArea(evt, drag.helper, element);

      if (this.accept) {
        accept = matches(drag.helper, this.accept);
      }
    }

    if (isDrag && this.drop && area.canDrop && accept) {
      this.trigger('drop', {
        event: evt,
        target: area.target,
        droppedElement: drag.helper,
        dragData: drag
      });
    }

    this.mouseOver = false;
  };

  Droppable.prototype.isDropArea = function (evt, helper, element) {
    var area = {
      canDrop: true,
      target: element || evt.target
    };
    var isTouch = evt.type === 'touchend';

    if (isTouch || area.target === helper) {
      helper.style.display = 'none';
      var coord = isTouch ? evt.changedTouches[0] : evt;
      var ele = document.elementFromPoint(coord.clientX, coord.clientY);
      area.canDrop = false;
      area.canDrop = compareElementParent(ele, this.element);

      if (area.canDrop) {
        area.target = ele;
      }

      helper.style.display = '';
    }

    return area;
  };

  Droppable.prototype.destroy = function () {
    EventHandler.remove(this.element, Browser.touchEndEvent, this.intDrop);

    _super.prototype.destroy.call(this);
  };

  __decorate$3([Property()], Droppable.prototype, "accept", void 0);

  __decorate$3([Property('default')], Droppable.prototype, "scope", void 0);

  __decorate$3([Event$1()], Droppable.prototype, "drop", void 0);

  __decorate$3([Event$1()], Droppable.prototype, "over", void 0);

  __decorate$3([Event$1()], Droppable.prototype, "out", void 0);

  Droppable = __decorate$3([NotifyPropertyChanges], Droppable);
  return Droppable;
}(Base);

var __extends$4 =  false || function () {
  var extendStatics = function (d, b) {
    extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    };

    return extendStatics(d, b);
  };

  return function (d, b) {
    extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __decorate$4 =  false || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var keyCode = {
  'backspace': 8,
  'tab': 9,
  'enter': 13,
  'shift': 16,
  'control': 17,
  'alt': 18,
  'pause': 19,
  'capslock': 20,
  'space': 32,
  'escape': 27,
  'pageup': 33,
  'pagedown': 34,
  'end': 35,
  'home': 36,
  'leftarrow': 37,
  'uparrow': 38,
  'rightarrow': 39,
  'downarrow': 40,
  'insert': 45,
  'delete': 46,
  'f1': 112,
  'f2': 113,
  'f3': 114,
  'f4': 115,
  'f5': 116,
  'f6': 117,
  'f7': 118,
  'f8': 119,
  'f9': 120,
  'f10': 121,
  'f11': 122,
  'f12': 123,
  'semicolon': 186,
  'plus': 187,
  'comma': 188,
  'minus': 189,
  'dot': 190,
  'forwardslash': 191,
  'graveaccent': 192,
  'openbracket': 219,
  'backslash': 220,
  'closebracket': 221,
  'singlequote': 222
};
/**
 * KeyboardEvents class enables you to bind key action desired key combinations for ex., Ctrl+A, Delete, Alt+Space etc.
 * ```html
 * <div id='testEle'>  </div>;
 * <script>
 *   let node: HTMLElement = document.querySelector('#testEle');
 *   let kbInstance = new KeyboardEvents({
 *       element: node,
 *       keyConfigs:{ selectAll : 'ctrl+a' },
 *       keyAction: function (e:KeyboardEvent, action:string) {
 *           // handler function code
 *       }
 *   });
 * </script>
 * ```
 */

var KeyboardEvents =
/** @__PURE__ @class */
function (_super) {
  __extends$4(KeyboardEvents, _super);
  /**
   * Initializes the KeyboardEvents
   *
   * @param {HTMLElement} element ?
   * @param {KeyboardEventsModel} options ?
   */


  function KeyboardEvents(element, options) {
    var _this = _super.call(this, options, element) || this;
    /**
     * To handle a key press event returns null
     *
     * @param {KeyboardEventArgs} e ?
     * @returns {void} ?
     */


    _this.keyPressHandler = function (e) {
      var isAltKey = e.altKey;
      var isCtrlKey = e.ctrlKey;
      var isShiftKey = e.shiftKey;
      var curkeyCode = e.which;
      var keys = Object.keys(_this.keyConfigs);

      for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
        var key = keys_1[_i];

        var configCollection = _this.keyConfigs[key].split(',');

        for (var _a = 0, configCollection_1 = configCollection; _a < configCollection_1.length; _a++) {
          var rconfig = configCollection_1[_a];
          var rKeyObj = KeyboardEvents_1.getKeyConfigData(rconfig.trim());

          if (isAltKey === rKeyObj.altKey && isCtrlKey === rKeyObj.ctrlKey && isShiftKey === rKeyObj.shiftKey && curkeyCode === rKeyObj.keyCode) {
            e.action = key;

            if (_this.keyAction) {
              _this.keyAction(e);
            }
          }
        }
      }
    };

    _this.bind();

    return _this;
  }

  KeyboardEvents_1 = KeyboardEvents;
  /**
   * Unwire bound events and destroy the instance.
   *
   * @returns {void} ?
   */

  KeyboardEvents.prototype.destroy = function () {
    this.unwireEvents();

    _super.prototype.destroy.call(this);
  };
  /**
   * Function can be used to specify certain action if a property is changed
   *
   * @param {KeyboardEventsModel} newProp ?
   * @param {KeyboardEventsModel} oldProp ?
   * @returns {void} ?
   * @private
   */
  // eslint-disable-next-line


  KeyboardEvents.prototype.onPropertyChanged = function (newProp, oldProp) {// No code are needed
  };

  KeyboardEvents.prototype.bind = function () {
    this.wireEvents();
  };
  /**
   * To get the module name, returns 'keyboard'.
   *
   * @returns {string} ?
   * @private
   */


  KeyboardEvents.prototype.getModuleName = function () {
    return 'keyboard';
  };
  /**
   * Wiring event handlers to events
   *
   * @returns {void} ?
   * @private
   */


  KeyboardEvents.prototype.wireEvents = function () {
    this.element.addEventListener(this.eventName, this.keyPressHandler);
  };
  /**
   * Unwiring event handlers to events
   *
   * @returns {void} ?
   * @private
   */


  KeyboardEvents.prototype.unwireEvents = function () {
    this.element.removeEventListener(this.eventName, this.keyPressHandler);
  };
  /**
   * To get the key configuration data
   *
   * @param {string} config - configuration data
   * @returns {KeyData} ?
   */


  KeyboardEvents.getKeyConfigData = function (config) {
    if (config in this.configCache) {
      return this.configCache[config];
    }

    var keys = config.toLowerCase().split('+');
    var keyData = {
      altKey: keys.indexOf('alt') !== -1 ? true : false,
      ctrlKey: keys.indexOf('ctrl') !== -1 ? true : false,
      shiftKey: keys.indexOf('shift') !== -1 ? true : false,
      keyCode: null
    };

    if (keys[keys.length - 1].length > 1 && !!Number(keys[keys.length - 1])) {
      keyData.keyCode = Number(keys[keys.length - 1]);
    } else {
      keyData.keyCode = KeyboardEvents_1.getKeyCode(keys[keys.length - 1]);
    }

    KeyboardEvents_1.configCache[config] = keyData;
    return keyData;
  }; // Return the keycode value as string


  KeyboardEvents.getKeyCode = function (keyVal) {
    return keyCode[keyVal] || keyVal.toUpperCase().charCodeAt(0);
  };

  var KeyboardEvents_1;
  KeyboardEvents.configCache = {};

  __decorate$4([Property({})], KeyboardEvents.prototype, "keyConfigs", void 0);

  __decorate$4([Property('keyup')], KeyboardEvents.prototype, "eventName", void 0);

  __decorate$4([Event$1()], KeyboardEvents.prototype, "keyAction", void 0);

  KeyboardEvents = KeyboardEvents_1 = __decorate$4([NotifyPropertyChanges], KeyboardEvents);
  return KeyboardEvents;
}(Base);
/**
 * L10n modules provides localized text for different culture.
 * ```typescript
 * import {setCulture} from '@syncfusion/ts-base-library';
 * //load global locale object common for all components.
 * L10n.load({
 *    'fr-BE': {
 *       'button': {
 *            'check': 'vérifié'
 *        }
 *    }
 * });
 * //set globale default locale culture.
 * setCulture('fr-BE');
 * let instance: L10n = new L10n('button', {
 *    check: 'checked'
 * });
 * //Get locale text for current property.
 * instance.getConstant('check');
 * //Change locale culture in a component.
 * instance.setLocale('en-US');
 * ```
 */


var L10n =
/** @__PURE__ @class */
function () {
  /**
   * Constructor
   *
   * @param {string} controlName ?
   * @param {Object} localeStrings ?
   * @param {string} locale ?
   */
  function L10n(controlName, localeStrings, locale) {
    this.controlName = controlName;
    this.localeStrings = localeStrings;
    this.setLocale(locale || defaultCulture);
  }
  /**
   * Sets the locale text
   *
   * @param {string} locale ?
   * @returns {void} ?
   */


  L10n.prototype.setLocale = function (locale) {
    var intLocale = this.intGetControlConstant(L10n.locale, locale);
    this.currentLocale = intLocale || this.localeStrings;
  };
  /**
   * Sets the global locale for all components.
   *
   * @param {Object} localeObject - specifies the localeObject to be set as global locale.
   * @returns {void} ?
   */


  L10n.load = function (localeObject) {
    this.locale = extend(this.locale, localeObject, {}, true);
  };
  /**
   * Returns current locale text for the property based on the culture name and control name.
   *
   * @param {string} prop - specifies the property for which localize text to be returned.
   * @returns {string} ?
   */


  L10n.prototype.getConstant = function (prop) {
    // Removed conditional operator because this method does not return correct value when passing 0 as value in localization
    if (!isNullOrUndefined(this.currentLocale[prop])) {
      return this.currentLocale[prop];
    } else {
      return this.localeStrings[prop] || '';
    }
  };
  /**
   * Returns the control constant object for current object and the locale specified.
   *
   * @param {Object} curObject ?
   * @param {string} locale ?
   * @returns {Object} ?
   */


  L10n.prototype.intGetControlConstant = function (curObject, locale) {
    if (curObject[locale]) {
      return curObject[locale][this.controlName];
    }

    return null;
  };

  L10n.locale = {};
  return L10n;
}();

var __extends$5 =  false || function () {
  var extendStatics = function (d, b) {
    extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    };

    return extendStatics(d, b);
  };

  return function (d, b) {
    extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __decorate$5 =  false || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
/**
 * SwipeSettings is a framework module that provides support to handle swipe event like swipe up, swipe right, etc..,
 */


var SwipeSettings =
/** @__PURE__ @class */
function (_super) {
  __extends$5(SwipeSettings, _super);

  function SwipeSettings() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  __decorate$5([Property(50)], SwipeSettings.prototype, "swipeThresholdDistance", void 0);

  return SwipeSettings;
}(ChildProperty);

var swipeRegex = /(Up|Down)/;
/**
 * Touch class provides support to handle the touch event like tap, double tap, tap hold, etc..,
 * ```typescript
 *    let node: HTMLElement;
 * let touchObj: Touch = new Touch({
 *    element: node,
 *    tap: function (e) {
 *        // tap handler function code
 *    }
 *    tapHold: function (e) {
 *        // tap hold handler function code
 *    }
 *    scroll: function (e) {
 *        // scroll handler function code
 *    }
 *    swipe: function (e) {
 *        // swipe handler function code
 *    }
 * });
 * ```
 */

var Touch =
/** @__PURE__ @class */
function (_super) {
  __extends$5(Touch, _super);
  /* End-Properties */


  function Touch(element, options) {
    var _this = _super.call(this, options, element) || this;

    _this.touchAction = true;
    _this.tapCount = 0;
    /**
     *
     * @param {MouseEventArgs | TouchEventArgs} evt ?
     * @returns {void} ?
     */

    _this.startEvent = function (evt) {
      if (_this.touchAction === true) {
        var point = _this.updateChangeTouches(evt);

        if (evt.changedTouches !== undefined) {
          _this.touchAction = false;
        }

        _this.isTouchMoved = false;
        _this.movedDirection = '';
        _this.startPoint = _this.lastMovedPoint = {
          clientX: point.clientX,
          clientY: point.clientY
        };
        _this.startEventData = point;
        _this.hScrollLocked = _this.vScrollLocked = false;
        _this.tStampStart = Date.now();
        _this.timeOutTapHold = setTimeout(function () {
          _this.tapHoldEvent(evt);
        }, _this.tapHoldThreshold);
        EventHandler.add(_this.element, Browser.touchMoveEvent, _this.moveEvent, _this);
        EventHandler.add(_this.element, Browser.touchEndEvent, _this.endEvent, _this);
        EventHandler.add(_this.element, Browser.touchCancelEvent, _this.cancelEvent, _this);
      }
    };
    /**
     *
     * @param {MouseEventArgs | TouchEventArgs} evt ?
     * @returns {void} ?
     */


    _this.moveEvent = function (evt) {
      var point = _this.updateChangeTouches(evt);

      _this.movedPoint = point;
      _this.isTouchMoved = !(point.clientX === _this.startPoint.clientX && point.clientY === _this.startPoint.clientY);
      var eScrollArgs = {};

      if (_this.isTouchMoved) {
        clearTimeout(_this.timeOutTapHold);

        _this.calcScrollPoints(evt);

        var scrollArg = {
          startEvents: _this.startEventData,
          originalEvent: evt,
          startX: _this.startPoint.clientX,
          startY: _this.startPoint.clientY,
          distanceX: _this.distanceX,
          distanceY: _this.distanceY,
          scrollDirection: _this.scrollDirection,
          velocity: _this.getVelocity(point)
        };
        eScrollArgs = extend(eScrollArgs, {}, scrollArg);

        _this.trigger('scroll', eScrollArgs);

        _this.lastMovedPoint = {
          clientX: point.clientX,
          clientY: point.clientY
        };
      }
    };
    /**
     *
     * @param {MouseEventArgs | TouchEventArgs} evt ?
     * @returns {void} ?
     */


    _this.cancelEvent = function (evt) {
      clearTimeout(_this.timeOutTapHold);
      clearTimeout(_this.timeOutTap);
      _this.tapCount = 0;

      _this.swipeFn(evt);

      EventHandler.remove(_this.element, Browser.touchCancelEvent, _this.cancelEvent);
    };
    /**
     *
     * @param {MouseEventArgs | TouchEventArgs} evt ?
     * @returns {void} ?
     */


    _this.endEvent = function (evt) {
      _this.swipeFn(evt);

      if (!_this.isTouchMoved) {
        if (typeof _this.tap === 'function') {
          _this.trigger('tap', {
            originalEvent: evt,
            tapCount: ++_this.tapCount
          });

          _this.timeOutTap = setTimeout(function () {
            _this.tapCount = 0;
          }, _this.tapThreshold);
        }
      }

      _this.modeclear();
    };
    /**
     *
     * @param {MouseEventArgs | TouchEventArgs} evt ?
     * @returns {void} ?
     */


    _this.swipeFn = function (evt) {
      clearTimeout(_this.timeOutTapHold);
      clearTimeout(_this.timeOutTap);

      var point = _this.updateChangeTouches(evt);

      var diffX = point.clientX - _this.startPoint.clientX;
      var diffY = point.clientY - _this.startPoint.clientY;
      diffX = Math.floor(diffX < 0 ? -1 * diffX : diffX);
      diffY = Math.floor(diffY < 0 ? -1 * diffY : diffX);
      _this.isTouchMoved = diffX > 1 || diffY > 1;
      var isFirefox = /Firefox/.test(Browser.userAgent);

      if (isFirefox && point.clientX === 0 && point.clientY === 0 && evt.type === 'mouseup') {
        _this.isTouchMoved = false;
      }

      _this.endPoint = point;

      _this.calcPoints(evt);

      var swipeArgs = {
        originalEvent: evt,
        startEvents: _this.startEventData,
        startX: _this.startPoint.clientX,
        startY: _this.startPoint.clientY,
        distanceX: _this.distanceX,
        distanceY: _this.distanceY,
        swipeDirection: _this.movedDirection,
        velocity: _this.getVelocity(point)
      };

      if (_this.isTouchMoved) {
        var eSwipeArgs = void 0;
        var tDistance = _this.swipeSettings.swipeThresholdDistance; // eslint-disable-next-line

        eSwipeArgs = extend(eSwipeArgs, _this.defaultArgs, swipeArgs);
        var canTrigger = false;
        var ele = _this.element;

        var scrollBool = _this.isScrollable(ele);

        var moved = swipeRegex.test(_this.movedDirection);

        if (tDistance < _this.distanceX && !moved || tDistance < _this.distanceY && moved) {
          if (!scrollBool) {
            canTrigger = true;
          } else {
            canTrigger = _this.checkSwipe(ele, moved);
          }
        }

        if (canTrigger) {
          _this.trigger('swipe', eSwipeArgs);
        }
      }

      _this.modeclear();
    };

    _this.modeclear = function () {
      _this.modeClear = setTimeout(function () {
        _this.touchAction = true;
      }, typeof _this.tap !== 'function' ? 0 : 20);
      _this.lastTapTime = new Date().getTime();
      EventHandler.remove(_this.element, Browser.touchMoveEvent, _this.moveEvent);
      EventHandler.remove(_this.element, Browser.touchEndEvent, _this.endEvent);
      EventHandler.remove(_this.element, Browser.touchCancelEvent, _this.cancelEvent);
    };

    _this.bind();

    return _this;
  } // triggers when property changed

  /**
   *
   * @private
   * @param {TouchModel} newProp ?
   * @param {TouchModel} oldProp ?
   * @returns {void} ?
   */
  // eslint-disable-next-line


  Touch.prototype.onPropertyChanged = function (newProp, oldProp) {//No Code to handle
  };

  Touch.prototype.bind = function () {
    this.wireEvents();

    if (Browser.isIE) {
      this.element.classList.add('e-block-touch');
    }
  };
  /**
   * To destroy the touch instance.
   *
   * @returns {void}
   */


  Touch.prototype.destroy = function () {
    this.unwireEvents();

    _super.prototype.destroy.call(this);
  }; // Need to changes the event binding once we updated the event handler.


  Touch.prototype.wireEvents = function () {
    EventHandler.add(this.element, Browser.touchStartEvent, this.startEvent, this);
  };

  Touch.prototype.unwireEvents = function () {
    EventHandler.remove(this.element, Browser.touchStartEvent, this.startEvent);
  };
  /**
   * Returns module name as touch
   *
   * @returns {string} ?
   * @private
   */


  Touch.prototype.getModuleName = function () {
    return 'touch';
  };
  /**
   * Returns if the HTML element is Scrollable.
   *
   * @param {HTMLElement} element - HTML Element to check if Scrollable.
   * @returns {boolean} ?
   */


  Touch.prototype.isScrollable = function (element) {
    var eleStyle = getComputedStyle(element);
    var style = eleStyle.overflow + eleStyle.overflowX + eleStyle.overflowY;

    if (/(auto|scroll)/.test(style)) {
      return true;
    }

    return false;
  };
  /**
   *
   * @param {MouseEventArgs | TouchEventArgs} evt ?
   * @returns {void} ?
   */


  Touch.prototype.tapHoldEvent = function (evt) {
    this.tapCount = 0;
    this.touchAction = true;
    var eTapArgs;
    EventHandler.remove(this.element, Browser.touchMoveEvent, this.moveEvent);
    EventHandler.remove(this.element, Browser.touchEndEvent, this.endEvent); // eslint-disable-next-line

    eTapArgs = {
      originalEvent: evt
    };
    this.trigger('tapHold', eTapArgs);
    EventHandler.remove(this.element, Browser.touchCancelEvent, this.cancelEvent);
  };

  Touch.prototype.calcPoints = function (evt) {
    var point = this.updateChangeTouches(evt);
    this.defaultArgs = {
      originalEvent: evt
    };
    this.distanceX = Math.abs(Math.abs(point.clientX) - Math.abs(this.startPoint.clientX));
    this.distanceY = Math.abs(Math.abs(point.clientY) - Math.abs(this.startPoint.clientY));

    if (this.distanceX > this.distanceY) {
      this.movedDirection = point.clientX > this.startPoint.clientX ? 'Right' : 'Left';
    } else {
      this.movedDirection = point.clientY < this.startPoint.clientY ? 'Up' : 'Down';
    }
  };

  Touch.prototype.calcScrollPoints = function (evt) {
    var point = this.updateChangeTouches(evt);
    this.defaultArgs = {
      originalEvent: evt
    };
    this.distanceX = Math.abs(Math.abs(point.clientX) - Math.abs(this.lastMovedPoint.clientX));
    this.distanceY = Math.abs(Math.abs(point.clientY) - Math.abs(this.lastMovedPoint.clientY));

    if ((this.distanceX > this.distanceY || this.hScrollLocked === true) && this.vScrollLocked === false) {
      this.scrollDirection = point.clientX > this.lastMovedPoint.clientX ? 'Right' : 'Left';
      this.hScrollLocked = true;
    } else {
      this.scrollDirection = point.clientY < this.lastMovedPoint.clientY ? 'Up' : 'Down';
      this.vScrollLocked = true;
    }
  };

  Touch.prototype.getVelocity = function (pnt) {
    var newX = pnt.clientX;
    var newY = pnt.clientY;
    var newT = Date.now();
    var xDist = newX - this.startPoint.clientX;
    var yDist = newY - this.startPoint.clientX;
    var interval = newT - this.tStampStart;
    return Math.sqrt(xDist * xDist + yDist * yDist) / interval;
  }; // eslint-disable-next-line


  Touch.prototype.checkSwipe = function (ele, flag) {
    var keys = ['scroll', 'offset'];
    var temp = flag ? ['Height', 'Top'] : ['Width', 'Left'];

    if (ele[keys[0] + temp[0]] <= ele[keys[1] + temp[0]]) {
      return true;
    }

    return ele[keys[0] + temp[1]] === 0 || ele[keys[1] + temp[0]] + ele[keys[0] + temp[1]] >= ele[keys[0] + temp[0]];
  };

  Touch.prototype.updateChangeTouches = function (evt) {
    var point = evt.changedTouches && evt.changedTouches.length !== 0 ? evt.changedTouches[0] : evt;
    return point;
  };

  __decorate$5([Event$1()], Touch.prototype, "tap", void 0);

  __decorate$5([Event$1()], Touch.prototype, "tapHold", void 0);

  __decorate$5([Event$1()], Touch.prototype, "swipe", void 0);

  __decorate$5([Event$1()], Touch.prototype, "scroll", void 0);

  __decorate$5([Property(350)], Touch.prototype, "tapThreshold", void 0);

  __decorate$5([Property(750)], Touch.prototype, "tapHoldThreshold", void 0);

  __decorate$5([Complex({}, SwipeSettings)], Touch.prototype, "swipeSettings", void 0);

  Touch = __decorate$5([NotifyPropertyChanges], Touch);
  return Touch;
}(Base);
/**
 * Template Engine
 */


var LINES = new RegExp('\\n|\\r|\\s\\s+', 'g');
var QUOTES = new RegExp(/'|"/g);
var IF_STMT = new RegExp('if ?\\(');
var ELSEIF_STMT = new RegExp('else if ?\\(');
var ELSE_STMT = new RegExp('else');
var FOR_STMT = new RegExp('for ?\\(');
var IF_OR_FOR = new RegExp('(/if|/for)');
var CALL_FUNCTION = new RegExp('\\((.*)\\)', '');
var NOT_NUMBER = new RegExp('^[0-9]+$', 'g');
var WORD = new RegExp('[\\w"\'.\\s+]+', 'g');
var DBL_QUOTED_STR = new RegExp('"(.*?)"', 'g');
var WORDIF = new RegExp('[\\w"\'@#$.\\s-+]+', 'g');
var exp = new RegExp('\\${([^}]*)}', 'g'); // let cachedTemplate: Object = {};

var ARR_OBJ = /^\..*/gm;
var SINGLE_SLASH = /\\/gi;
var DOUBLE_SLASH = /\\\\/gi;
var WORDFUNC = new RegExp('[\\w"\'@#$.\\s+]+', 'g');
var WINDOWFUNC = /\window\./gm;
/**
 * The function to set regular expression for template expression string.
 *
 * @param {RegExp} value - Value expression.
 * @returns {RegExp} ?
 * @private
 */
// /**
//  * To render the template string from the given data.
//  * @param  {string} template - String Template.
//  * @param  {Object[]|JSON} data - DataSource for the template.
//  * @param  {Object} helper? - custom helper object.
//  */
// export function template(template: string, data: JSON, helper?: Object): string {
//     let hash: string = hashCode(template);
//     let tmpl: Function;
//     if (!cachedTemplate[hash]) {
//         tmpl = cachedTemplate[hash] = compile(template, helper);
//     } else {
//         tmpl = cachedTemplate[hash];
//     }
//     return tmpl(data);
// }

/**
 * Compile the template string into template function.
 *
 * @param {string} template - The template string which is going to convert.
 * @param {Object} helper - Helper functions as an object.
 * @param {boolean} ignorePrefix ?
 * @returns {string} ?
 * @private
 */

function compile$1(template, helper, ignorePrefix) {
  var argName = 'data';
  var evalExpResult = evalExp(template, argName, helper, ignorePrefix);
  var condtion = "var valueRegEx = (/value=\\'([A-Za-z0-9 _]*)((.)([\\w)(!-;?-\u25A0\\s]+)['])/g);\n    var hrefRegex = (/(?:href)([\\s='\"./]+)([\\w-./?=&\\\\#\"]+)((.)([\\w)(!-;/?-\u25A0\\s]+)['])/g);\n    if(str.match(valueRegEx)){\n        var check = str.match(valueRegEx);\n        var str1 = str;\n        for (var i=0; i < check.length; i++) {\n            var check1 = str.match(valueRegEx)[i].split('value=')[1];\n            var change = check1.match(/^'/) !== null ? check1.replace(/^'/, '\"') : check1;\n            change =change.match(/.$/)[0] === '\\'' ? change.replace(/.$/,'\"') : change;\n            str1 = str1.replace(check1, change);\n        }\n        str = str.replace(str, str1);\n    }\n    else if (str.match(/(?:href='')/) === null) {\n        if(str.match(hrefRegex)) {\n            var check = str.match(hrefRegex);\n            var str1 = str;\n            for (var i=0; i < check.length; i++) {\n                var check1 = str.match(hrefRegex)[i].split('href=')[1];\n                if (check1) {\n                    var change = check1.match(/^'/) !== null ? check1.replace(/^'/, '\"') : check1;\n                    change =change.match(/.$/)[0] === '\\'' ? change.replace(/.$/,'\"') : change;\n                    str1 = str1.replace(check1, change);\n                }\n            }\n            str = str.replace(str, str1);\n        }\n    }\n    ";
  var fnCode = "var str=\"" + evalExpResult + "\";" + condtion + " return str;";
  var fn = new Function(argName, fnCode);
  return fn.bind(helper);
}
/** function used to evaluate the function expression
 *
 * @param {string} str ?
 * @param {string} nameSpace ?
 * @param {Object} helper ?
 * @param {boolean} ignorePrefix ?
 * @returns {string} ?
 */


function evalExp(str, nameSpace, helper, ignorePrefix) {
  var varCOunt = 0;
  /**
   * Variable containing Local Keys
   */

  var localKeys = [];
  var isClass = str.match(/class="([^"]+|)\s{2}/g);
  var singleSpace = '';

  if (isClass) {
    isClass.forEach(function (value) {
      singleSpace = value.replace(/\s\s+/g, ' ');
      str = str.replace(value, singleSpace);
    });
  }

  return str.replace(LINES, '').replace(DBL_QUOTED_STR, '\'$1\'').replace(exp, // eslint-disable-next-line
  function (match, cnt, offset, matchStr) {
    var SPECIAL_CHAR = /@|#|\$/gm;
    var matches = cnt.match(CALL_FUNCTION); // matches to detect any function calls

    if (matches) {
      var rlStr = matches[1];

      if (ELSEIF_STMT.test(cnt)) {
        //handling else-if condition
        cnt = '";} ' + cnt.replace(matches[1], rlStr.replace(WORD, function (str) {
          str = str.trim();
          return addNameSpace(str, !QUOTES.test(str) && localKeys.indexOf(str) === -1, nameSpace, localKeys, ignorePrefix);
        })) + '{ \n str = str + "';
      } else if (IF_STMT.test(cnt)) {
        //handling if condition
        cnt = '"; ' + cnt.replace(matches[1], rlStr.replace(WORDIF, function (strs) {
          return HandleSpecialCharArrObj(strs, nameSpace, localKeys, ignorePrefix);
        })) + '{ \n str = str + "';
      } else if (FOR_STMT.test(cnt)) {
        //handling for condition
        var rlStr_1 = matches[1].split(' of '); // replace for each into actual JavaScript
        // eslint-disable-next-line

        cnt = '"; ' + cnt.replace(matches[1], function (mtc) {
          localKeys.push(rlStr_1[0]);
          localKeys.push(rlStr_1[0] + 'Index');
          varCOunt = varCOunt + 1; // tslint:disable-next-line

          return 'var i' + varCOunt + '=0; i' + varCOunt + ' < ' + addNameSpace(rlStr_1[1], true, nameSpace, localKeys, ignorePrefix) + '.length; i' + varCOunt + '++';
        }) + '{ \n ' + rlStr_1[0] + '= ' + addNameSpace(rlStr_1[1], true, nameSpace, localKeys, ignorePrefix) + '[i' + varCOunt + ']; \n var ' + rlStr_1[0] + 'Index=i' + varCOunt + '; \n str = str + "';
      } else {
        //helper function handling
        var fnStr = cnt.split('('); // eslint-disable-next-line

        var fNameSpace = helper && helper.hasOwnProperty(fnStr[0]) ? 'this.' : 'global';
        fNameSpace = /\./.test(fnStr[0]) ? '' : fNameSpace;
        var ftArray = matches[1].split(',');

        if (matches[1].length !== 0 && !/data/.test(ftArray[0]) && !/window./.test(ftArray[0])) {
          matches[1] = fNameSpace === 'global' ? nameSpace + '.' + matches[1] : matches[1];
        }

        var splRegexp = /@|\$|#/gm;
        var arrObj = /\]\./gm;

        if (WINDOWFUNC.test(cnt) && arrObj.test(cnt) || splRegexp.test(cnt)) {
          var splArrRegexp = /@|\$|#|\]\./gm;

          if (splArrRegexp.test(cnt)) {
            // tslint:disable-next-line
            cnt = '"+ ' + (fNameSpace === 'global' ? '' : fNameSpace) + cnt.replace(matches[1], rlStr.replace(WORDFUNC, function (strs) {
              return HandleSpecialCharArrObj(strs, nameSpace, localKeys, ignorePrefix);
            })) + '+ "';
          }
        } else {
          cnt = '" + ' + (fNameSpace === 'global' ? '' : fNameSpace) + cnt.replace(rlStr, addNameSpace(matches[1].replace(/,( |)data.|,/gi, ',' + nameSpace + '.').replace(/,( |)data.window/gi, ',window'), fNameSpace === 'global' ? false : true, nameSpace, localKeys, ignorePrefix)) + '+"';
        }
      }
    } else if (ELSE_STMT.test(cnt)) {
      // handling else condition
      cnt = '"; ' + cnt.replace(ELSE_STMT, '} else { \n str = str + "'); // eslint-disable-next-line
    } else if (!!cnt.match(IF_OR_FOR)) {
      // close condition
      cnt = cnt.replace(IF_OR_FOR, '"; \n } \n str = str + "');
    } else if (SPECIAL_CHAR.test(cnt)) {
      // template string with double slash with special character
      if (cnt.match(SINGLE_SLASH)) {
        cnt = SlashReplace(cnt);
      }

      cnt = '"+' + NameSpaceForspecialChar(cnt, localKeys.indexOf(cnt) === -1, nameSpace, localKeys) + '"]+"';
    } else {
      // template string with double slash
      if (cnt.match(SINGLE_SLASH)) {
        cnt = SlashReplace(cnt);
        cnt = '"+' + NameSpaceForspecialChar(cnt, localKeys.indexOf(cnt) === -1, nameSpace, localKeys) + '"]+"';
      } else {
        // evaluate normal expression
        cnt = '"+' + addNameSpace(cnt.replace(/,/gi, '+' + nameSpace + '.'), localKeys.indexOf(cnt) === -1, nameSpace, localKeys, ignorePrefix) + '+"';
      }
    }

    return cnt;
  });
}
/**
 *
 * @param {string} str ?
 * @param {boolean} addNS ?
 * @param {string} nameSpace ?
 * @param {string[]} ignoreList ?
 * @param {boolean} ignorePrefix ?
 * @returns {string} ?
 */


function addNameSpace(str, addNS, nameSpace, ignoreList, ignorePrefix) {
  return addNS && !NOT_NUMBER.test(str) && ignoreList.indexOf(str.split('.')[0]) === -1 && !ignorePrefix ? nameSpace + '.' + str : str;
}
/**
 *
 * @param {string} str ?
 * @param {boolean} addNS ?
 * @param {string} nameSpace ?
 * @param {string[]} ignoreList ?
 * @returns {string} ?
 */


function NameSpaceArrObj(str, addNS, nameSpace, ignoreList) {
  var arrObjReg = /^\..*/gm;
  return addNS && !NOT_NUMBER.test(str) && ignoreList.indexOf(str.split('.')[0]) === -1 && !arrObjReg.test(str) ? nameSpace + '.' + str : str;
} // // Create hashCode for template string to storeCached function
// function hashCode(str: string): string {
//     return str.split('').reduce((a: number, b: string) => { a = ((a << 5) - a) + b.charCodeAt(0); return a & a; }, 0).toString();
// }

/**
 *
 * @param {string} str ?
 * @param {boolean} addNS ?
 * @param {string} nameSpace ?
 * @param {string[]} ignoreList ?
 * @returns {string} ?
 */


function NameSpaceForspecialChar(str, addNS, nameSpace, ignoreList) {
  return addNS && !NOT_NUMBER.test(str) && ignoreList.indexOf(str.split('.')[0]) === -1 ? nameSpace + '["' + str : str;
} // eslint-disable-next-line


function SlashReplace(tempStr) {
  var double = '\\\\';

  if (tempStr.match(DOUBLE_SLASH)) {
    // eslint-disable-next-line
    tempStr = tempStr;
  } else {
    tempStr = tempStr.replace(SINGLE_SLASH, double);
  }

  return tempStr;
}
/**
 *
 * @param {string} str ?
 * @param {string} nameSpaceNew ?
 * @param {string[]} keys ?
 * @param {boolean} ignorePrefix ?
 * @returns {string} ?
 */


function HandleSpecialCharArrObj(str, nameSpaceNew, keys, ignorePrefix) {
  str = str.trim();
  var windowFunc = /\window\./gm;

  if (!windowFunc.test(str)) {
    var quotes = /'|"/gm;
    var splRegexp = /@|\$|#/gm;

    if (splRegexp.test(str)) {
      str = NameSpaceForspecialChar(str, keys.indexOf(str) === -1, nameSpaceNew, keys) + '"]';
    }

    if (ARR_OBJ.test(str)) {
      return NameSpaceArrObj(str, !quotes.test(str) && keys.indexOf(str) === -1, nameSpaceNew, keys);
    } else {
      return addNameSpace(str, !quotes.test(str) && keys.indexOf(str) === -1, nameSpaceNew, keys, ignorePrefix);
    }
  } else {
    return str;
  }
}
/**
 * Template Engine Bridge
 */


var HAS_ROW = /^[\n\r.]+<tr|^<tr/;
var HAS_SVG = /^[\n\r.]+<svg|^<path|^<g/;
var blazorTemplates = {};
/**
 *
 * @returns {string} ?
 */

function getRandomId() {
  return '-' + Math.random().toString(36).substr(2, 5);
}
/**
 * Compile the template string into template function.
 *
 * @param {string} templateString - The template string which is going to convert.
 * @param {Object} helper - Helper functions as an object.
 * @param {boolean} ignorePrefix ?
 * @returns {NodeList} ?
 * @private
 */
// eslint-disable-next-line


function compile$$1(templateString, helper, ignorePrefix) {
  var compiler = engineObj.compile(templateString, helper, ignorePrefix); // eslint-disable-next-line

  return function (data, component, propName, templateId, isStringTemplate, index, element, root) {
    var result = compiler(data, component, propName, element, root);
    var blazorTemplateId = 'BlazorTemplateId';

    if (isBlazor() && !isStringTemplate) {
      var randomId = getRandomId();
      var blazorId = templateId + randomId;

      if (!blazorTemplates[templateId]) {
        blazorTemplates[templateId] = [];
      }

      if (!isNullOrUndefined(index)) {
        var keys = Object.keys(blazorTemplates[templateId][index]);

        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
          var key = keys_1[_i];

          if (key !== blazorTemplateId && data[key]) {
            blazorTemplates[templateId][index][key] = data[key];
          }

          if (key === blazorTemplateId) {
            blazorId = blazorTemplates[templateId][index][key];
          }
        }
      } else {
        data[blazorTemplateId] = blazorId;
        blazorTemplates[templateId].push(data);
      } // eslint-disable-next-line


      return propName === 'rowTemplate' ? [createElement('tr', {
        id: blazorId,
        className: 'e-blazor-template'
      })] : // eslint-disable-next-line
      [createElement('div', {
        id: blazorId,
        className: 'e-blazor-template'
      })];
    }

    if (typeof result === 'string') {
      if (HAS_SVG.test(result)) {
        var ele = createElement('svg', {
          innerHTML: result
        });
        return ele.childNodes;
      } else {
        var ele = createElement(HAS_ROW.test(result) ? 'table' : 'div', {
          innerHTML: result
        });
        return ele.childNodes;
      }
    } else {
      return result;
    }
  };
}
/**
 *
 * @param {string} templateId ?
 * @param {string} templateName ?
 * @param {string} comp ?
 * @param {boolean} isEmpty ?
 * @param {Function} callBack ?
 * @returns {void} ?
 */


function updateBlazorTemplate(templateId, templateName, comp, isEmpty, callBack) {
  if (isBlazor()) {
    var ejsIntrop = 'sfBlazor';
    window[ejsIntrop].updateTemplate(templateName, blazorTemplates[templateId], templateId, comp, callBack);

    if (isEmpty !== false) {
      blazorTemplates[templateId] = [];
    }
  }
}
/**
 *
 * @param {string} templateId ?
 * @param {string} templateName ?
 * @param {number} index ?
 * @returns {void} ?
 */


function resetBlazorTemplate(templateId, templateName, index) {
  var templateDiv = document.getElementById(templateId);

  if (templateDiv) {
    // eslint-disable-next-line
    var innerTemplates = templateDiv.getElementsByClassName('blazor-inner-template');

    for (var i = 0; i < innerTemplates.length; i++) {
      var tempId = ' ';

      if (!isNullOrUndefined(index)) {
        tempId = innerTemplates[index].getAttribute('data-templateId');
      } else {
        tempId = innerTemplates[i].getAttribute('data-templateId');
      }

      var tempElement = document.getElementById(tempId);

      if (tempElement) {
        var length_1 = tempElement.childNodes.length;

        for (var j = 0; j < length_1; j++) {
          if (!isNullOrUndefined(index)) {
            innerTemplates[index].appendChild(tempElement.childNodes[0]);
            i = innerTemplates.length;
          } else {
            innerTemplates[i].appendChild(tempElement.childNodes[0]);
          }
        }
      }
    }
  }
}
/**
 * Set your custom template engine for template rendering.
 *
 * @param  {ITemplateEngine} classObj - Class object for custom template.
 * @returns {void} ?
 * @private
 */


function setTemplateEngine(classObj) {
  engineObj.compile = classObj.compile;
}
/**
 * Get current template engine for template rendering
 *
 * @returns {string} ?
 * @private
 */


function getTemplateEngine() {
  return engineObj.compile;
} //Default Engine Class


var Engine =
/** @__PURE__ @class */
function () {
  function Engine() {} // eslint-disable-next-line


  Engine.prototype.compile = function (templateString, helper, ignorePrefix) {
    if (helper === void 0) {
      helper = {};
    }

    return compile$1(templateString, helper);
  };

  return Engine;
}();

var engineObj = {
  compile: new Engine().compile
};
/**
 * SanitizeHtmlHelper for sanitize the value.
 */

var removeTags = ['script', 'style', 'iframe[src]', 'link[href*="javascript:"]', 'object[type="text/x-scriptlet"]', 'object[data^="data:text/html;base64"]', 'img[src^="data:text/html;base64"]', '[src^="javascript:"]', '[dynsrc^="javascript:"]', '[lowsrc^="javascript:"]', '[type^="application/x-shockwave-flash"]'];
var removeAttrs = [{
  attribute: 'href',
  selector: '[href*="javascript:"]'
}, {
  attribute: 'background',
  selector: '[background^="javascript:"]'
}, {
  attribute: 'style',
  selector: '[style*="javascript:"]'
}, {
  attribute: 'style',
  selector: '[style*="expression("]'
}, {
  attribute: 'href',
  selector: 'a[href^="data:text/html;base64"]'
}];
var jsEvents = ['onchange', 'onclick', 'onmouseover', 'onmouseout', 'onkeydown', 'onload', 'onerror', 'onblur', 'onfocus', 'onbeforeload', 'onbeforeunload', 'onkeyup', 'onsubmit', 'onafterprint', 'onbeforeonload', 'onbeforeprint', 'onblur', 'oncanplay', 'oncanplaythrough', 'onchange', 'onclick', 'oncontextmenu', 'ondblclick', 'ondrag', 'ondragend', 'ondragenter', 'ondragleave', 'ondragover', 'ondragstart', 'ondrop', 'ondurationchange', 'onemptied', 'onended', 'onerror', 'onerror', 'onfocus', 'onformchange', 'onforminput', 'onhaschange', 'oninput', 'oninvalid', 'onkeydown', 'onkeypress', 'onkeyup', 'onload', 'onloadeddata', 'onloadedmetadata', 'onloadstart', 'onmessage', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onoffline', 'onoine', 'ononline', 'onpagehide', 'onpageshow', 'onpause', 'onplay', 'onplaying', 'onpopstate', 'onprogress', 'onratechange', 'onreadystatechange', 'onredo', 'onresize', 'onscroll', 'onseeked', 'onseeking', 'onselect', 'onstalled', 'onstorage', 'onsubmit', 'onsuspend', 'ontimeupdate', 'onundo', 'onunload', 'onvolumechange', 'onwaiting', 'onmouseenter', 'onmouseleave', 'onmousewheel', 'onstart', 'onpropertychange'];

var SanitizeHtmlHelper =
/** @__PURE__ @class */
function () {
  function SanitizeHtmlHelper() {}

  SanitizeHtmlHelper.beforeSanitize = function () {
    return {
      selectors: {
        tags: removeTags,
        attributes: removeAttrs
      }
    };
  };

  SanitizeHtmlHelper.sanitize = function (value) {
    var item = this.beforeSanitize();
    var output = this.serializeValue(item, value);
    return output;
  };

  SanitizeHtmlHelper.serializeValue = function (item, value) {
    this.removeAttrs = item.selectors.attributes;
    this.removeTags = item.selectors.tags;
    this.wrapElement = document.createElement('div');
    this.wrapElement.innerHTML = value;
    this.removeXssTags();
    this.removeJsEvents();
    this.removeXssAttrs();
    var tempEleValue = this.wrapElement.innerHTML;
    this.removeElement();
    return tempEleValue.replace('&amp;', '&');
  };

  SanitizeHtmlHelper.removeElement = function () {
    // Removes an element's attibute to avoid html tag validation
    var nodes = this.wrapElement.children;

    for (var j = 0; j < nodes.length; j++) {
      var attribute = nodes[j].attributes;

      for (var i = 0; i < attribute.length; i++) {
        this.wrapElement.children[j].removeAttribute(attribute[i].localName);
      }
    }
  };

  SanitizeHtmlHelper.removeXssTags = function () {
    var elements = this.wrapElement.querySelectorAll(this.removeTags.join(','));

    if (elements.length > 0) {
      elements.forEach(function (element) {
        detach(element);
      });
    } else {
      return;
    }
  };

  SanitizeHtmlHelper.removeJsEvents = function () {
    var elements = this.wrapElement.querySelectorAll('[' + jsEvents.join('],[') + ']');

    if (elements.length > 0) {
      elements.forEach(function (element) {
        jsEvents.forEach(function (attr) {
          if (element.hasAttribute(attr)) {
            element.removeAttribute(attr);
          }
        });
      });
    } else {
      return;
    }
  };

  SanitizeHtmlHelper.removeXssAttrs = function () {
    var _this = this; // eslint-disable-next-line


    this.removeAttrs.forEach(function (item, index) {
      var elements = _this.wrapElement.querySelectorAll(item.selector);

      if (elements.length > 0) {
        elements.forEach(function (element) {
          element.removeAttribute(item.attribute);
        });
      }
    });
  };

  return SanitizeHtmlHelper;
}();
/**
 * Base modules
 */




/***/ }),

/***/ 61334:
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-notifications/node_modules/@syncfusion/ej2-buttons/dist/es6/ej2-buttons.es5.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Button": () => (/* binding */ Button),
/* harmony export */   "CheckBox": () => (/* binding */ CheckBox),
/* harmony export */   "Chip": () => (/* binding */ Chip),
/* harmony export */   "ChipList": () => (/* binding */ ChipList),
/* harmony export */   "Fab": () => (/* binding */ Fab),
/* harmony export */   "FabPosition": () => (/* binding */ FabPosition),
/* harmony export */   "LinearDirection": () => (/* binding */ LinearDirection),
/* harmony export */   "RadialDirection": () => (/* binding */ RadialDirection),
/* harmony export */   "RadialSettings": () => (/* binding */ RadialSettings),
/* harmony export */   "RadioButton": () => (/* binding */ RadioButton),
/* harmony export */   "SpeedDial": () => (/* binding */ SpeedDial),
/* harmony export */   "SpeedDialAnimationEffect": () => (/* binding */ SpeedDialAnimationEffect),
/* harmony export */   "SpeedDialAnimationSettings": () => (/* binding */ SpeedDialAnimationSettings),
/* harmony export */   "SpeedDialItem": () => (/* binding */ SpeedDialItem),
/* harmony export */   "SpeedDialMode": () => (/* binding */ SpeedDialMode),
/* harmony export */   "Switch": () => (/* binding */ Switch),
/* harmony export */   "buttonObserver": () => (/* binding */ buttonObserver),
/* harmony export */   "classNames": () => (/* binding */ classNames),
/* harmony export */   "createCheckBox": () => (/* binding */ createCheckBox),
/* harmony export */   "destroy": () => (/* binding */ destroy),
/* harmony export */   "getTextNode": () => (/* binding */ getTextNode),
/* harmony export */   "preRender": () => (/* binding */ preRender),
/* harmony export */   "rippleMouseHandler": () => (/* binding */ rippleMouseHandler),
/* harmony export */   "setHiddenInput": () => (/* binding */ setHiddenInput),
/* harmony export */   "wrapperInitialize": () => (/* binding */ wrapperInitialize)
/* harmony export */ });
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ 32610);


/**
 * Initialize wrapper element for angular.
 *
 * @private
 *
 * @param {CreateElementArgs} createElement - Specifies created element args
 * @param {string} tag - Specifies tag name
 * @param {string} type - Specifies type name
 * @param {HTMLInputElement} element - Specifies input element
 * @param {string} WRAPPER - Specifies wrapper element
 * @param {string} role - Specifies role
 * @returns {HTMLInputElement} - Input Element
 */
function wrapperInitialize(createElement, tag, type, element, WRAPPER, role) {
    var input = element;
    if (element.tagName === tag) {
        var ejInstance = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('ej2_instances', element);
        input = createElement('input', { attrs: { 'type': type } });
        var props = ['change', 'cssClass', 'label', 'labelPosition', 'id'];
        for (var index = 0, len = element.attributes.length; index < len; index++) {
            if (props.indexOf(element.attributes[index].nodeName) === -1) {
                input.setAttribute(element.attributes[index].nodeName, element.attributes[index].nodeValue);
            }
        }
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(element, { 'class': WRAPPER });
        element.appendChild(input);
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)('ej2_instances', ejInstance, input);
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.deleteObject)(element, 'ej2_instances');
    }
    return input;
}
/**
 * Get the text node.
 *
 * @param {HTMLElement} element - Specifies html element
 * @private
 * @returns {Node} - Text node.
 */
function getTextNode(element) {
    var node;
    var childnode = element.childNodes;
    for (var i = 0; i < childnode.length; i++) {
        node = childnode[i];
        if (node.nodeType === 3) {
            return node;
        }
    }
    return null;
}
/**
 * Destroy the button components.
 *
 * @private
 * @param {Switch | CheckBox} ejInst - Specifies eJ2 Instance
 * @param {Element} wrapper - Specifies wrapper element
 * @param {string} tagName - Specifies tag name
 * @returns {void}
 */
function destroy(ejInst, wrapper, tagName) {
    if (tagName === 'INPUT') {
        wrapper.parentNode.insertBefore(ejInst.element, wrapper);
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(wrapper);
        ejInst.element.checked = false;
        ['name', 'value', 'disabled'].forEach(function (key) {
            ejInst.element.removeAttribute(key);
        });
    }
    else {
        ['role', 'aria-checked', 'class'].forEach(function (key) {
            wrapper.removeAttribute(key);
        });
        wrapper.innerHTML = '';
    }
}
/**
 * Initialize control pre rendering.
 *
 * @private
 * @param {Switch | CheckBox} proxy - Specifies proxy
 * @param {string} control - Specifies control
 * @param {string} wrapper - Specifies wrapper element
 * @param {HTMLInputElement} element - Specifies input element
 * @param {string} moduleName - Specifies module name
 * @returns {void}
 */
function preRender(proxy, control, wrapper, element, moduleName) {
    element = wrapperInitialize(proxy.createElement, control, 'checkbox', element, wrapper, moduleName);
    proxy.element = element;
    if (proxy.element.getAttribute('type') !== 'checkbox') {
        proxy.element.setAttribute('type', 'checkbox');
    }
    if (!proxy.element.id) {
        proxy.element.id = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getUniqueID)('e-' + moduleName);
    }
}
/**
 * Creates CheckBox component UI with theming and ripple support.
 *
 * @private
 * @param {CreateElementArgs} createElement - Specifies Created Element args
 * @param {boolean} enableRipple - Specifies ripple effect
 * @param {CheckBoxUtilModel} options - Specifies Checkbox util Model
 * @returns {Element} - Checkbox Element
 */
function createCheckBox(createElement, enableRipple, options) {
    if (enableRipple === void 0) { enableRipple = false; }
    if (options === void 0) { options = {}; }
    var wrapper = createElement('div', { className: 'e-checkbox-wrapper e-css' });
    if (options.cssClass) {
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([wrapper], options.cssClass.split(' '));
    }
    if (options.enableRtl) {
        wrapper.classList.add('e-rtl');
    }
    if (enableRipple) {
        var rippleSpan = createElement('span', { className: 'e-ripple-container' });
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.rippleEffect)(rippleSpan, { isCenterRipple: true, duration: 400 });
        wrapper.appendChild(rippleSpan);
    }
    var frameSpan = createElement('span', { className: 'e-frame e-icons' });
    if (options.checked) {
        frameSpan.classList.add('e-check');
    }
    wrapper.appendChild(frameSpan);
    if (options.label) {
        var labelSpan = createElement('span', { className: 'e-label' });
        if (options.disableHtmlEncode) {
            labelSpan.textContent = options.label;
        }
        else {
            labelSpan.innerHTML = options.label;
        }
        wrapper.appendChild(labelSpan);
    }
    return wrapper;
}
/**
 * Handles ripple mouse.
 *
 * @private
 * @param {MouseEvent} e - Specifies mouse event
 * @param {Element} rippleSpan - Specifies Ripple span element
 * @returns {void}
 */
function rippleMouseHandler(e, rippleSpan) {
    if (rippleSpan) {
        var event_1 = document.createEvent('MouseEvents');
        event_1.initEvent(e.type, false, true);
        rippleSpan.dispatchEvent(event_1);
    }
}
/**
 * Append hidden input to given element
 *
 * @private
 * @param {Switch | CheckBox} proxy - Specifies Proxy
 * @param {Element} wrap - Specifies Wrapper ELement
 * @returns {void}
 */
function setHiddenInput(proxy, wrap) {
    if (proxy.element.getAttribute('ejs-for')) {
        wrap.appendChild(proxy.createElement('input', {
            attrs: { 'name': proxy.name || proxy.element.name, 'value': 'false', 'type': 'hidden' }
        }));
    }
}

/**
 * Common modules
 */

var __extends = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = ( false) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var buttonObserver = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Observer();
var cssClassName = {
    RTL: 'e-rtl',
    BUTTON: 'e-btn',
    PRIMARY: 'e-primary',
    ICONBTN: 'e-icon-btn'
};
/**
 * The Button is a graphical user interface element that triggers an event on its click action. It can contain a text, an image, or both.
 * ```html
 * <button id="button">Button</button>
 * ```
 * ```typescript
 * <script>
 * var btnObj = new Button();
 * btnObj.appendTo("#button");
 * </script>
 * ```
 */
var Button = /** @__PURE__ @class */ (function (_super) {
    __extends(Button, _super);
    /**
     * Constructor for creating the widget
     *
     * @param  {ButtonModel} options - Specifies the button model
     * @param  {string|HTMLButtonElement} element - Specifies the target element
     */
    function Button(options, element) {
        return _super.call(this, options, element) || this;
    }
    Button.prototype.preRender = function () {
        // pre render code snippets
    };
    /**
     * Initialize the control rendering
     *
     * @returns {void}
     * @private
     */
    Button.prototype.render = function () {
        this.initialize();
        this.removeRippleEffect = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.rippleEffect)(this.element, { selector: '.' + cssClassName.BUTTON });
        this.renderComplete();
    };
    Button.prototype.initialize = function () {
        if (this.cssClass) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], this.cssClass.split(' '));
        }
        if (this.isPrimary) {
            this.element.classList.add(cssClassName.PRIMARY);
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)() || ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)() && this.getModuleName() !== 'progress-btn')) {
            if (this.content) {
                var tempContent = (this.enableHtmlSanitizer) ? _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlHelper.sanitize(this.content) : this.content;
                this.element.innerHTML = tempContent;
            }
            this.setIconCss();
        }
        if (this.enableRtl) {
            this.element.classList.add(cssClassName.RTL);
        }
        if (this.disabled) {
            this.controlStatus(this.disabled);
        }
        else {
            this.wireEvents();
        }
    };
    Button.prototype.controlStatus = function (disabled) {
        this.element.disabled = disabled;
    };
    Button.prototype.setIconCss = function () {
        if (this.iconCss) {
            var span = this.createElement('span', { className: 'e-btn-icon ' + this.iconCss });
            if (!this.element.textContent.trim()) {
                this.element.classList.add(cssClassName.ICONBTN);
            }
            else {
                span.classList.add('e-icon-' + this.iconPosition.toLowerCase());
                if (this.iconPosition === 'Top' || this.iconPosition === 'Bottom') {
                    this.element.classList.add('e-' + this.iconPosition.toLowerCase() + '-icon-btn');
                }
            }
            var node = this.element.childNodes[0];
            if (node && (this.iconPosition === 'Left' || this.iconPosition === 'Top')) {
                this.element.insertBefore(span, node);
            }
            else {
                this.element.appendChild(span);
            }
        }
    };
    Button.prototype.wireEvents = function () {
        if (this.isToggle) {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'click', this.btnClickHandler, this);
        }
    };
    Button.prototype.unWireEvents = function () {
        if (this.isToggle) {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'click', this.btnClickHandler);
        }
    };
    Button.prototype.btnClickHandler = function () {
        if (this.element.classList.contains('e-active')) {
            this.element.classList.remove('e-active');
        }
        else {
            this.element.classList.add('e-active');
        }
    };
    /**
     * Destroys the widget.
     *
     * @returns {void}
     */
    Button.prototype.destroy = function () {
        var classList = [cssClassName.PRIMARY, cssClassName.RTL, cssClassName.ICONBTN, 'e-success', 'e-info', 'e-danger',
            'e-warning', 'e-flat', 'e-outline', 'e-small', 'e-bigger', 'e-active', 'e-round',
            'e-top-icon-btn', 'e-bottom-icon-btn'];
        if (this.cssClass) {
            classList = classList.concat(this.cssClass.split(' '));
        }
        _super.prototype.destroy.call(this);
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], classList);
        if (!this.element.getAttribute('class')) {
            this.element.removeAttribute('class');
        }
        if (this.disabled) {
            this.element.removeAttribute('disabled');
        }
        if (this.content) {
            this.element.innerHTML = this.element.innerHTML.replace(this.content, '');
        }
        var span = this.element.querySelector('span.e-btn-icon');
        if (span) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(span);
        }
        this.unWireEvents();
        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isRippleEnabled) {
            this.removeRippleEffect();
        }
    };
    /**
     * Get component name.
     *
     * @returns {string} - Module name
     * @private
     */
    Button.prototype.getModuleName = function () {
        return 'btn';
    };
    /**
     * Get the properties to be maintained in the persisted state.
     *
     * @returns {string} - Persist Data
     * @private
     */
    Button.prototype.getPersistData = function () {
        return this.addOnPersist([]);
    };
    /**
     * Dynamically injects the required modules to the component.
     *
     * @private
     * @returns {void}
     */
    Button.Inject = function () {
        // Inject code snippets
    };
    /**
     * Called internally if any of the property value changed.
     *
     * @param  {ButtonModel} newProp - Specifies new properties
     * @param  {ButtonModel} oldProp - Specifies old properties
     * @returns {void}
     * @private
     */
    Button.prototype.onPropertyChanged = function (newProp, oldProp) {
        var span = this.element.querySelector('span.e-btn-icon');
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'isPrimary':
                    if (newProp.isPrimary) {
                        this.element.classList.add(cssClassName.PRIMARY);
                    }
                    else {
                        this.element.classList.remove(cssClassName.PRIMARY);
                    }
                    break;
                case 'disabled':
                    this.controlStatus(newProp.disabled);
                    break;
                case 'iconCss': {
                    if (span) {
                        if (newProp.iconCss) {
                            span.className = 'e-btn-icon ' + newProp.iconCss;
                            if (this.element.textContent.trim()) {
                                if (this.iconPosition === 'Left') {
                                    span.classList.add('e-icon-left');
                                }
                                else {
                                    span.classList.add('e-icon-right');
                                }
                            }
                        }
                        else {
                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(span);
                        }
                    }
                    else {
                        this.setIconCss();
                    }
                    break;
                }
                case 'iconPosition':
                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], ['e-top-icon-btn', 'e-bottom-icon-btn']);
                    span = this.element.querySelector('span.e-btn-icon');
                    if (span) {
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(span);
                    }
                    this.setIconCss();
                    break;
                case 'cssClass':
                    if (oldProp.cssClass) {
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], oldProp.cssClass.split(' '));
                    }
                    if (newProp.cssClass) {
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], newProp.cssClass.split(' '));
                    }
                    break;
                case 'enableRtl':
                    if (newProp.enableRtl) {
                        this.element.classList.add(cssClassName.RTL);
                    }
                    else {
                        this.element.classList.remove(cssClassName.RTL);
                    }
                    break;
                case 'content': {
                    var node = getTextNode(this.element);
                    if (!node) {
                        this.element.classList.remove(cssClassName.ICONBTN);
                    }
                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)() || ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)() && !this.isServerRendered && this.getModuleName() !== 'progress-btn')) {
                        if (this.enableHtmlSanitizer) {
                            newProp.content = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlHelper.sanitize(newProp.content);
                        }
                        this.element.innerHTML = newProp.content;
                        this.setIconCss();
                    }
                    break;
                }
                case 'isToggle':
                    if (newProp.isToggle) {
                        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'click', this.btnClickHandler, this);
                    }
                    else {
                        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'click', this.btnClickHandler);
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], ['e-active']);
                    }
                    break;
            }
        }
    };
    /**
     * Click the button element
     * its native method
     *
     * @public
     * @returns {void}
     */
    Button.prototype.click = function () {
        this.element.click();
    };
    /**
     * Sets the focus to Button
     * its native method
     *
     * @public
     * @returns {void}
     */
    Button.prototype.focusIn = function () {
        this.element.focus();
    };
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Left')
    ], Button.prototype, "iconPosition", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], Button.prototype, "iconCss", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], Button.prototype, "disabled", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], Button.prototype, "isPrimary", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], Button.prototype, "cssClass", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], Button.prototype, "content", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], Button.prototype, "isToggle", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()
    ], Button.prototype, "locale", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], Button.prototype, "enableHtmlSanitizer", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Button.prototype, "created", void 0);
    Button = __decorate([
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges
    ], Button);
    return Button;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));

/**
 * Button modules
 */

var __extends$1 = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate$1 = ( false) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var CHECK = 'e-check';
var DISABLED = 'e-checkbox-disabled';
var FRAME = 'e-frame';
var INDETERMINATE = 'e-stop';
var LABEL = 'e-label';
var RIPPLE = 'e-ripple-container';
var RIPPLECHECK = 'e-ripple-check';
var RIPPLEINDETERMINATE = 'e-ripple-stop';
var RTL = 'e-rtl';
var WRAPPER = 'e-checkbox-wrapper';
var containerAttr = ['title', 'class', 'style', 'disabled', 'readonly', 'name', 'value'];
/**
 * The CheckBox is a graphical user interface element that allows you to select one or more options from the choices.
 * It contains checked, unchecked, and indeterminate states.
 * ```html
 * <input type="checkbox" id="checkbox"/>
 * <script>
 * var checkboxObj = new CheckBox({ label: "Default" });
 * checkboxObj.appendTo("#checkbox");
 * </script>
 * ```
 */
var CheckBox = /** @__PURE__ @class */ (function (_super) {
    __extends$1(CheckBox, _super);
    /**
     * Constructor for creating the widget
     *
     * @private
     * @param {CheckBoxModel} options - Specifies checkbox model
     * @param {string | HTMLInputElement} element - Specifies target element
     */
    function CheckBox(options, element) {
        var _this = _super.call(this, options, element) || this;
        _this.isFocused = false;
        _this.isMouseClick = false;
        _this.clickTriggered = false;
        _this.validCheck = true;
        return _this;
    }
    CheckBox.prototype.changeState = function (state) {
        var rippleSpan;
        var frameSpan = this.getWrapper().getElementsByClassName(FRAME)[0];
        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isRippleEnabled) {
            rippleSpan = this.getWrapper().getElementsByClassName(RIPPLE)[0];
        }
        if (state === 'check') {
            frameSpan.classList.remove(INDETERMINATE);
            frameSpan.classList.add(CHECK);
            if (rippleSpan) {
                rippleSpan.classList.remove(RIPPLEINDETERMINATE);
                rippleSpan.classList.add(RIPPLECHECK);
            }
            this.element.checked = true;
            if (this.element.required && this.validCheck) {
                this.element.checked = false;
                this.validCheck = false;
            }
            else if (this.element.required) {
                this.validCheck = true;
            }
        }
        else if (state === 'uncheck') {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([frameSpan], [CHECK, INDETERMINATE]);
            if (rippleSpan) {
                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([rippleSpan], [RIPPLECHECK, RIPPLEINDETERMINATE]);
            }
            this.element.checked = false;
            if (this.element.required && this.validCheck) {
                this.element.checked = true;
                this.validCheck = false;
            }
            else if (this.element.required) {
                this.validCheck = true;
            }
        }
        else {
            frameSpan.classList.remove(CHECK);
            frameSpan.classList.add(INDETERMINATE);
            if (rippleSpan) {
                rippleSpan.classList.remove(RIPPLECHECK);
                rippleSpan.classList.add(RIPPLEINDETERMINATE);
            }
            this.element.indeterminate = true;
        }
    };
    CheckBox.prototype.clickHandler = function (event) {
        if (event.target.tagName === 'INPUT' && this.clickTriggered) {
            this.clickTriggered = false;
            return;
        }
        if (event.target.tagName === 'SPAN' || event.target.tagName === 'LABEL') {
            this.clickTriggered = true;
        }
        if (this.isMouseClick) {
            this.focusOutHandler();
            this.isMouseClick = false;
        }
        if (this.indeterminate) {
            this.changeState(this.checked ? 'check' : 'uncheck');
            this.indeterminate = false;
            this.element.indeterminate = false;
        }
        else if (this.checked) {
            this.changeState('uncheck');
            this.checked = false;
        }
        else {
            this.changeState('check');
            this.checked = true;
        }
        var changeEventArgs = { checked: this.updateVueArrayModel(false), event: event };
        this.trigger('change', changeEventArgs);
        event.stopPropagation();
    };
    /**
     * Destroys the widget.
     *
     * @returns {void}
     */
    CheckBox.prototype.destroy = function () {
        var _this = this;
        var wrapper = this.getWrapper();
        _super.prototype.destroy.call(this);
        if (this.wrapper) {
            wrapper = this.wrapper;
            if (!this.disabled) {
                this.unWireEvents();
            }
            if (this.tagName === 'INPUT') {
                if (this.getWrapper() && wrapper.parentNode) {
                    wrapper.parentNode.insertBefore(this.element, wrapper);
                }
                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(wrapper);
                this.element.checked = false;
                if (this.indeterminate) {
                    this.element.indeterminate = false;
                }
                ['name', 'value', 'disabled'].forEach(function (key) {
                    _this.element.removeAttribute(key);
                });
            }
            else {
                ['class'].forEach(function (key) {
                    wrapper.removeAttribute(key);
                });
                wrapper.innerHTML = '';
            }
        }
    };
    CheckBox.prototype.focusHandler = function () {
        this.isFocused = true;
    };
    CheckBox.prototype.focusOutHandler = function () {
        var wrapper = this.getWrapper();
        if (wrapper) {
            wrapper.classList.remove('e-focus');
        }
        this.isFocused = false;
    };
    /**
     * Gets the module name.
     *
     * @private
     * @returns {string} - Module Name
     */
    CheckBox.prototype.getModuleName = function () {
        return 'checkbox';
    };
    /**
     * Gets the properties to be maintained in the persistence state.
     *
     * @private
     * @returns {string} - Persist Data
     */
    CheckBox.prototype.getPersistData = function () {
        return this.addOnPersist(['checked', 'indeterminate']);
    };
    CheckBox.prototype.getWrapper = function () {
        if (this.element && this.element.parentElement) {
            return this.element.parentElement.parentElement;
        }
        else {
            return null;
        }
    };
    CheckBox.prototype.initialize = function () {
        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.initialCheckedValue)) {
            this.initialCheckedValue = this.checked;
        }
        if (this.name) {
            this.element.setAttribute('name', this.name);
        }
        if (this.value) {
            this.element.setAttribute('value', this.value);
            if (this.isVue && typeof this.value === 'boolean' && this.value === true) {
                this.setProperties({ 'checked': true }, true);
            }
        }
        if (this.checked) {
            this.changeState('check');
        }
        if (this.indeterminate) {
            this.changeState();
        }
        if (this.disabled) {
            this.setDisabled();
        }
    };
    CheckBox.prototype.initWrapper = function () {
        var wrapper = this.element.parentElement;
        if (!wrapper.classList.contains(WRAPPER)) {
            wrapper = this.createElement('div', {
                className: WRAPPER
            });
            this.element.parentNode.insertBefore(wrapper, this.element);
        }
        var label = this.createElement('label', { attrs: { for: this.element.id } });
        var frameSpan = this.createElement('span', { className: 'e-icons ' + FRAME });
        wrapper.classList.add('e-wrapper');
        if (this.enableRtl) {
            wrapper.classList.add(RTL);
        }
        if (this.cssClass) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([wrapper], this.cssClass.split(' '));
        }
        wrapper.appendChild(label);
        label.appendChild(this.element);
        setHiddenInput(this, label);
        label.appendChild(frameSpan);
        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isRippleEnabled) {
            var rippleSpan = this.createElement('span', { className: RIPPLE });
            if (this.labelPosition === 'Before') {
                label.appendChild(rippleSpan);
            }
            else {
                label.insertBefore(rippleSpan, frameSpan);
            }
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.rippleEffect)(rippleSpan, { duration: 400, isCenterRipple: true });
        }
        if (this.label) {
            this.setText(this.label);
        }
    };
    CheckBox.prototype.keyUpHandler = function () {
        if (this.isFocused) {
            this.getWrapper().classList.add('e-focus');
        }
    };
    CheckBox.prototype.labelMouseDownHandler = function (e) {
        this.isMouseClick = true;
        var rippleSpan = this.getWrapper().getElementsByClassName(RIPPLE)[0];
        rippleMouseHandler(e, rippleSpan);
    };
    CheckBox.prototype.labelMouseUpHandler = function (e) {
        this.isMouseClick = true;
        var rippleSpan = this.getWrapper().getElementsByClassName(RIPPLE)[0];
        if (rippleSpan) {
            var rippleElem = rippleSpan.querySelectorAll('.e-ripple-element');
            for (var i = 0; i < rippleElem.length - 1; i++) {
                rippleSpan.removeChild(rippleSpan.childNodes[i]);
            }
            rippleMouseHandler(e, rippleSpan);
        }
    };
    /**
     * Called internally if any of the property value changes.
     *
     * @private
     * @param {CheckBoxModel} newProp - Specifies new Properties
     * @param {CheckBoxModel} oldProp - Specifies old Properties
     *
     * @returns {void}
     */
    CheckBox.prototype.onPropertyChanged = function (newProp, oldProp) {
        var wrapper = this.getWrapper();
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'checked':
                    this.indeterminate = false;
                    this.element.indeterminate = false;
                    this.changeState(newProp.checked ? 'check' : 'uncheck');
                    break;
                case 'indeterminate':
                    if (newProp.indeterminate) {
                        this.changeState();
                    }
                    else {
                        this.element.indeterminate = false;
                        this.changeState(this.checked ? 'check' : 'uncheck');
                    }
                    break;
                case 'disabled':
                    if (newProp.disabled) {
                        this.setDisabled();
                        this.wrapper = this.getWrapper();
                        this.unWireEvents();
                    }
                    else {
                        this.element.disabled = false;
                        wrapper.classList.remove(DISABLED);
                        wrapper.setAttribute('aria-disabled', 'false');
                        this.wireEvents();
                    }
                    break;
                case 'cssClass':
                    if (oldProp.cssClass) {
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([wrapper], oldProp.cssClass.split(' '));
                    }
                    if (newProp.cssClass) {
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([wrapper], newProp.cssClass.split(' '));
                    }
                    break;
                case 'enableRtl':
                    if (newProp.enableRtl) {
                        wrapper.classList.add(RTL);
                    }
                    else {
                        wrapper.classList.remove(RTL);
                    }
                    break;
                case 'label':
                    this.setText(newProp.label);
                    break;
                case 'labelPosition': {
                    var label = wrapper.getElementsByClassName(LABEL)[0];
                    var labelWrap = wrapper.getElementsByTagName('label')[0];
                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(label);
                    if (newProp.labelPosition === 'After') {
                        labelWrap.appendChild(label);
                    }
                    else {
                        labelWrap.insertBefore(label, wrapper.getElementsByClassName(FRAME)[0]);
                    }
                    break;
                }
                case 'name':
                    this.element.setAttribute('name', newProp.name);
                    break;
                case 'value':
                    if (this.isVue && typeof newProp.value === 'object') {
                        break;
                    }
                    this.element.setAttribute('value', newProp.value);
                    break;
                case 'htmlAttributes':
                    this.updateHtmlAttributeToWrapper();
                    break;
            }
        }
    };
    /**
     * Initialize Angular, React and Unique ID support.
     *
     * @private
     * @returns {void}
     */
    CheckBox.prototype.preRender = function () {
        var element = this.element;
        this.tagName = this.element.tagName;
        element = wrapperInitialize(this.createElement, 'EJS-CHECKBOX', 'checkbox', element, WRAPPER, 'checkbox');
        this.element = element;
        if (this.element.getAttribute('type') !== 'checkbox') {
            this.element.setAttribute('type', 'checkbox');
        }
        if (!this.element.id) {
            this.element.id = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getUniqueID)('e-' + this.getModuleName());
        }
    };
    /**
     * Initialize the control rendering.
     *
     * @private
     * @returns {void}
     */
    CheckBox.prototype.render = function () {
        this.initWrapper();
        this.initialize();
        if (!this.disabled) {
            this.wireEvents();
        }
        this.updateHtmlAttributeToWrapper();
        this.updateVueArrayModel(true);
        this.renderComplete();
        this.wrapper = this.getWrapper();
    };
    CheckBox.prototype.setDisabled = function () {
        var wrapper = this.getWrapper();
        this.element.disabled = true;
        wrapper.classList.add(DISABLED);
        wrapper.setAttribute('aria-disabled', 'true');
    };
    CheckBox.prototype.setText = function (text) {
        var wrapper = this.getWrapper();
        if (!wrapper) {
            return;
        }
        var label = wrapper.getElementsByClassName(LABEL)[0];
        if (label) {
            label.textContent = text;
        }
        else {
            text = (this.enableHtmlSanitizer) ? _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlHelper.sanitize(text) : text;
            label = this.createElement('span', { className: LABEL, innerHTML: text });
            var labelWrap = wrapper.getElementsByTagName('label')[0];
            if (this.labelPosition === 'Before') {
                labelWrap.insertBefore(label, wrapper.getElementsByClassName(FRAME)[0]);
            }
            else {
                labelWrap.appendChild(label);
            }
        }
    };
    CheckBox.prototype.changeHandler = function (e) {
        e.stopPropagation();
    };
    CheckBox.prototype.formResetHandler = function () {
        this.checked = this.initialCheckedValue;
        this.element.checked = this.initialCheckedValue;
    };
    CheckBox.prototype.unWireEvents = function () {
        var wrapper = this.wrapper;
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(wrapper, 'click', this.clickHandler);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'keyup', this.keyUpHandler);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'focus', this.focusHandler);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'focusout', this.focusOutHandler);
        var label = wrapper.getElementsByTagName('label')[0];
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(label, 'mousedown', this.labelMouseDownHandler);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(label, 'mouseup', this.labelMouseUpHandler);
        var formElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.element, 'form');
        if (formElem) {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(formElem, 'reset', this.formResetHandler);
        }
        if (this.tagName === 'EJS-CHECKBOX') {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'change', this.changeHandler);
        }
    };
    CheckBox.prototype.wireEvents = function () {
        var wrapper = this.getWrapper();
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(wrapper, 'click', this.clickHandler, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'keyup', this.keyUpHandler, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'focus', this.focusHandler, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);
        var label = wrapper.getElementsByTagName('label')[0];
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(label, 'mousedown', this.labelMouseDownHandler, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(label, 'mouseup', this.labelMouseUpHandler, this);
        var formElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.element, 'form');
        if (formElem) {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(formElem, 'reset', this.formResetHandler, this);
        }
        if (this.tagName === 'EJS-CHECKBOX') {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'change', this.changeHandler, this);
        }
    };
    CheckBox.prototype.updateVueArrayModel = function (init) {
        if (this.isVue && typeof this.value === 'object') {
            var value = this.element.value;
            if (value && this.value) {
                if (init) {
                    for (var i = 0; i < this.value.length; i++) {
                        if (value === this.value[i]) {
                            this.changeState('check');
                            this.setProperties({ 'checked': true }, true);
                        }
                    }
                }
                else {
                    var index = this.value.indexOf(value);
                    if (this.checked) {
                        if (index < 0) {
                            this.value.push(value);
                        }
                    }
                    else {
                        if (index > -1) {
                            this.value.splice(index, 1);
                        }
                    }
                    // eslint-disable-next-line @typescript-eslint/no-explicit-any
                    return this.value;
                }
            }
        }
        return this.validCheck ? this.element.checked : !this.element.checked;
    };
    CheckBox.prototype.updateHtmlAttributeToWrapper = function () {
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.htmlAttributes)) {
            for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {
                var key = _a[_i];
                if (containerAttr.indexOf(key) > -1) {
                    var wrapper = this.getWrapper();
                    if (key === 'class') {
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([wrapper], this.htmlAttributes[key].split(' '));
                    }
                    else if (key === 'title') {
                        wrapper.setAttribute(key, this.htmlAttributes[key]);
                    }
                    else if (key === 'style') {
                        var frameSpan = this.getWrapper().getElementsByClassName(FRAME)[0];
                        frameSpan.setAttribute(key, this.htmlAttributes[key]);
                    }
                    else {
                        this.element.setAttribute(key, this.htmlAttributes[key]);
                    }
                }
            }
        }
    };
    /**
     * Click the CheckBox element
     * its native method
     *
     * @public
     * @returns {void}
     */
    CheckBox.prototype.click = function () {
        this.element.click();
    };
    /**
     * Sets the focus to CheckBox
     * its native method
     *
     * @public
     * @returns {void}
     */
    CheckBox.prototype.focusIn = function () {
        this.element.focus();
    };
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], CheckBox.prototype, "change", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], CheckBox.prototype, "created", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], CheckBox.prototype, "checked", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], CheckBox.prototype, "cssClass", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], CheckBox.prototype, "disabled", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], CheckBox.prototype, "indeterminate", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], CheckBox.prototype, "label", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('After')
    ], CheckBox.prototype, "labelPosition", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], CheckBox.prototype, "name", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], CheckBox.prototype, "value", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], CheckBox.prototype, "enableHtmlSanitizer", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)({})
    ], CheckBox.prototype, "htmlAttributes", void 0);
    CheckBox = __decorate$1([
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges
    ], CheckBox);
    return CheckBox;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));

/**
 * CheckBox modules
 */

var __extends$2 = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate$2 = ( false) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var LABEL$1 = 'e-label';
var RIPPLE$1 = 'e-ripple-container';
var RTL$1 = 'e-rtl';
var WRAPPER$1 = 'e-radio-wrapper';
var ATTRIBUTES = ['title', 'class', 'style', 'disabled', 'readonly', 'name', 'value'];
/**
 * The RadioButton is a graphical user interface element that allows you to select one option from the choices.
 * It contains checked and unchecked states.
 * ```html
 * <input type="radio" id="radio"/>
 * <script>
 * var radioObj = new RadioButton({ label: "Default" });
 * radioObj.appendTo("#radio");
 * </script>
 * ```
 */
var RadioButton = /** @__PURE__ @class */ (function (_super) {
    __extends$2(RadioButton, _super);
    /**
     * Constructor for creating the widget
     *
     * @private
     * @param {RadioButtonModel} options - Specifies Radio button model
     * @param {string | HTMLInputElement} element - Specifies target element
     */
    function RadioButton(options, element) {
        var _this = _super.call(this, options, element) || this;
        _this.isFocused = false;
        return _this;
    }
    RadioButton_1 = RadioButton;
    RadioButton.prototype.changeHandler = function (event) {
        this.checked = true;
        this.dataBind();
        var value = this.element.getAttribute('value');
        value = this.isVue && value ? this.element.value : this.value;
        this.trigger('change', { value: value, event: event });
        if (this.tagName === 'EJS-RADIOBUTTON') {
            event.stopPropagation();
        }
    };
    RadioButton.prototype.updateChange = function () {
        var input;
        var instance;
        var radioGrp = this.getRadioGroup();
        for (var i = 0; i < radioGrp.length; i++) {
            input = radioGrp[i];
            if (input !== this.element) {
                instance = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getInstance)(input, RadioButton_1);
                instance.checked = false;
                if (this.tagName === 'EJS-RADIOBUTTON') {
                    instance.angularValue = this.value;
                }
            }
        }
    };
    /**
     * Destroys the widget.
     *
     * @returns {void}
     */
    RadioButton.prototype.destroy = function () {
        var _this = this;
        var radioWrap = this.wrapper;
        _super.prototype.destroy.call(this);
        if (radioWrap) {
            if (!this.disabled) {
                this.unWireEvents();
            }
            if (this.tagName === 'INPUT') {
                if (radioWrap.parentNode) {
                    radioWrap.parentNode.insertBefore(this.element, radioWrap);
                }
                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(radioWrap);
                this.element.checked = false;
                ['name', 'value', 'disabled'].forEach(function (key) {
                    _this.element.removeAttribute(key);
                });
            }
            else {
                ['role', 'aria-checked', 'class'].forEach(function (key) {
                    radioWrap.removeAttribute(key);
                });
                radioWrap.innerHTML = '';
            }
        }
    };
    RadioButton.prototype.focusHandler = function () {
        this.isFocused = true;
    };
    RadioButton.prototype.focusOutHandler = function () {
        var label = this.getLabel();
        if (label) {
            label.classList.remove('e-focus');
        }
    };
    RadioButton.prototype.getModuleName = function () {
        return 'radio';
    };
    /**
     * To get the value of selected radio button in a group.
     *
     * @method getSelectedValue
     * @returns {string} - Selected Value
     */
    RadioButton.prototype.getSelectedValue = function () {
        var input;
        var radioGrp = this.getRadioGroup();
        for (var i = 0, len = radioGrp.length; i < len; i++) {
            input = radioGrp[i];
            if (input.checked) {
                return input.value;
            }
        }
        return '';
    };
    RadioButton.prototype.getRadioGroup = function () {
        return document.querySelectorAll('input.e-radio[name="' + this.element.getAttribute('name') + '"]');
    };
    /**
     * Gets the properties to be maintained in the persistence state.
     *
     * @private
     * @returns {string} - Persist Data
     */
    RadioButton.prototype.getPersistData = function () {
        return this.addOnPersist(['checked']);
    };
    RadioButton.prototype.getWrapper = function () {
        if (this.element) {
            return this.element.parentElement;
        }
        else {
            return null;
        }
    };
    RadioButton.prototype.getLabel = function () {
        if (this.element) {
            return this.element.nextElementSibling;
        }
        else {
            return null;
        }
    };
    RadioButton.prototype.initialize = function () {
        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.initialCheckedValue)) {
            this.initialCheckedValue = this.checked;
        }
        this.initWrapper();
        this.updateHtmlAttribute();
        if (this.name) {
            this.element.setAttribute('name', this.name);
        }
        var value = this.element.getAttribute('value');
        if (this.isVue && value && value === this.value) {
            this.checked = true;
        }
        if (this.isVue ? this.value && !value : this.value) {
            this.element.setAttribute('value', this.value);
        }
        if (this.checked) {
            this.element.checked = true;
        }
        if (this.disabled) {
            this.setDisabled();
        }
    };
    RadioButton.prototype.initWrapper = function () {
        var rippleSpan;
        var wrapper = this.element.parentElement;
        if (!wrapper.classList.contains(WRAPPER$1)) {
            wrapper = this.createElement('div', { className: WRAPPER$1 });
            this.element.parentNode.insertBefore(wrapper, this.element);
        }
        var label = this.createElement('label', { attrs: { for: this.element.id } });
        wrapper.appendChild(this.element);
        wrapper.appendChild(label);
        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isRippleEnabled) {
            rippleSpan = this.createElement('span', { className: (RIPPLE$1) });
            label.appendChild(rippleSpan);
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.rippleEffect)(rippleSpan, {
                duration: 400,
                isCenterRipple: true
            });
        }
        wrapper.classList.add('e-wrapper');
        if (this.enableRtl) {
            label.classList.add(RTL$1);
        }
        if (this.cssClass) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([wrapper], this.cssClass.split(' '));
        }
        if (this.label) {
            this.setText(this.label);
        }
    };
    RadioButton.prototype.keyUpHandler = function () {
        if (this.isFocused) {
            this.getLabel().classList.add('e-focus');
        }
    };
    RadioButton.prototype.labelRippleHandler = function (e) {
        var ripple = this.getLabel().getElementsByClassName(RIPPLE$1)[0];
        rippleMouseHandler(e, ripple);
    };
    RadioButton.prototype.formResetHandler = function () {
        this.checked = this.initialCheckedValue;
        if (this.initialCheckedValue) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.element, { 'checked': 'true' });
        }
    };
    /**
     * Called internally if any of the property value changes.
     *
     * @private
     * @param {RadioButtonModel} newProp - Specifies New Properties
     * @param {RadioButtonModel} oldProp - Specifies Old Properties
     * @returns {void}
     */
    RadioButton.prototype.onPropertyChanged = function (newProp, oldProp) {
        var wrap = this.getWrapper();
        var label = this.getLabel();
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'checked':
                    if (newProp.checked) {
                        this.updateChange();
                    }
                    this.element.checked = newProp.checked;
                    break;
                case 'disabled':
                    if (newProp.disabled) {
                        this.setDisabled();
                        this.unWireEvents();
                    }
                    else {
                        this.element.disabled = false;
                        this.wireEvents();
                    }
                    break;
                case 'cssClass':
                    if (oldProp.cssClass) {
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([wrap], oldProp.cssClass.split(' '));
                    }
                    if (newProp.cssClass) {
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([wrap], newProp.cssClass.split(' '));
                    }
                    break;
                case 'enableRtl':
                    if (newProp.enableRtl) {
                        label.classList.add(RTL$1);
                    }
                    else {
                        label.classList.remove(RTL$1);
                    }
                    break;
                case 'label':
                    this.setText(newProp.label);
                    break;
                case 'labelPosition':
                    if (newProp.labelPosition === 'Before') {
                        label.classList.add('e-right');
                    }
                    else {
                        label.classList.remove('e-right');
                    }
                    break;
                case 'name':
                    this.element.setAttribute('name', newProp.name);
                    break;
                case 'value':
                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.htmlAttributes) && this.htmlAttributes.value) {
                        break;
                    }
                    this.element.setAttribute('value', newProp.value);
                    break;
                case 'htmlAttributes':
                    this.updateHtmlAttribute();
                    break;
            }
        }
    };
    /**
     * Initialize checked Property, Angular and React and Unique ID support.
     *
     * @private
     * @returns {void}
     */
    RadioButton.prototype.preRender = function () {
        var element = this.element;
        this.formElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.element, 'form');
        this.tagName = this.element.tagName;
        element = wrapperInitialize(this.createElement, 'EJS-RADIOBUTTON', 'radio', element, WRAPPER$1, 'radio');
        this.element = element;
        if (this.element.getAttribute('type') !== 'radio') {
            this.element.setAttribute('type', 'radio');
        }
        if (!this.element.id) {
            this.element.id = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getUniqueID)('e-' + this.getModuleName());
        }
        if (this.tagName === 'EJS-RADIOBUTTON') {
            var formControlName = this.element.getAttribute('formcontrolname');
            if (formControlName) {
                this.setProperties({ 'name': formControlName }, true);
                this.element.setAttribute('name', formControlName);
            }
        }
    };
    /**
     * Initialize the control rendering
     *
     * @private
     * @returns {void}
     */
    RadioButton.prototype.render = function () {
        this.initialize();
        if (!this.disabled) {
            this.wireEvents();
        }
        this.renderComplete();
        this.wrapper = this.getWrapper();
    };
    RadioButton.prototype.setDisabled = function () {
        this.element.disabled = true;
    };
    RadioButton.prototype.setText = function (text) {
        var label = this.getLabel();
        var textLabel = label.getElementsByClassName(LABEL$1)[0];
        if (textLabel) {
            textLabel.textContent = text;
        }
        else {
            text = (this.enableHtmlSanitizer) ? _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlHelper.sanitize(text) : text;
            textLabel = this.createElement('span', { className: LABEL$1, innerHTML: text });
            label.appendChild(textLabel);
        }
        if (this.labelPosition === 'Before') {
            this.getLabel().classList.add('e-right');
        }
        else {
            this.getLabel().classList.remove('e-right');
        }
    };
    RadioButton.prototype.updateHtmlAttribute = function () {
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.htmlAttributes)) {
            for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {
                var key = _a[_i];
                if (ATTRIBUTES.indexOf(key) > -1) {
                    var wrapper = this.element.parentElement;
                    if (key === 'class') {
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([wrapper], this.htmlAttributes[key].split(' '));
                    }
                    else if (key === 'title' || key === 'style') {
                        wrapper.setAttribute(key, this.htmlAttributes[key]);
                    }
                    else {
                        this.element.setAttribute(key, this.htmlAttributes[key]);
                    }
                }
            }
        }
    };
    RadioButton.prototype.unWireEvents = function () {
        var label = this.wrapper;
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'change', this.changeHandler);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'focus', this.focusHandler);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'focusout', this.focusOutHandler);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'keyup', this.keyUpHandler);
        var rippleLabel = label.getElementsByTagName('label')[0];
        if (rippleLabel) {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(rippleLabel, 'mousedown', this.labelRippleHandler);
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(rippleLabel, 'mouseup', this.labelRippleHandler);
        }
        if (this.formElement) {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.formElement, 'reset', this.formResetHandler);
        }
    };
    RadioButton.prototype.wireEvents = function () {
        var label = this.getLabel();
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'change', this.changeHandler, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'keyup', this.keyUpHandler, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'focus', this.focusHandler, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);
        var rippleLabel = label.getElementsByClassName(LABEL$1)[0];
        if (rippleLabel) {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(rippleLabel, 'mousedown', this.labelRippleHandler, this);
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(rippleLabel, 'mouseup', this.labelRippleHandler, this);
        }
        if (this.formElement) {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.formElement, 'reset', this.formResetHandler, this);
        }
    };
    /**
     * Click the RadioButton element
     * its native method
     *
     * @public
     * @returns {void}
     */
    RadioButton.prototype.click = function () {
        this.element.click();
    };
    /**
     * Sets the focus to RadioButton
     * its native method
     *
     * @public
     * @returns {void}
     */
    RadioButton.prototype.focusIn = function () {
        this.element.focus();
    };
    var RadioButton_1;
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], RadioButton.prototype, "change", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], RadioButton.prototype, "created", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], RadioButton.prototype, "checked", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], RadioButton.prototype, "cssClass", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], RadioButton.prototype, "disabled", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], RadioButton.prototype, "label", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('After')
    ], RadioButton.prototype, "labelPosition", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], RadioButton.prototype, "name", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], RadioButton.prototype, "value", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], RadioButton.prototype, "enableHtmlSanitizer", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)({})
    ], RadioButton.prototype, "htmlAttributes", void 0);
    RadioButton = RadioButton_1 = __decorate$2([
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges
    ], RadioButton);
    return RadioButton;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));

/**
 * RadioButton modules
 */

var __extends$3 = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate$3 = ( false) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DISABLED$1 = 'e-switch-disabled';
var RIPPLE$2 = 'e-ripple-container';
var RIPPLE_CHECK = 'e-ripple-check';
var RTL$2 = 'e-rtl';
var WRAPPER$2 = 'e-switch-wrapper';
var ACTIVE = 'e-switch-active';
/**
 * The Switch is a graphical user interface element that allows you to toggle between checked and unchecked states.
 * ```html
 * <input type="checkbox" id="switch"/>
 * <script>
 * var switchObj = new Switch({});
 * switchObj.appendTo("#switch");
 * </script>
 * ```
 */
var Switch = /** @__PURE__ @class */ (function (_super) {
    __extends$3(Switch, _super);
    /**
     * Constructor for creating the widget.
     *
     * @private
     *
     * @param {SwitchModel} options switch model
     * @param {string | HTMLInputElement} element target element
     *
     */
    function Switch(options, element) {
        var _this = _super.call(this, options, element) || this;
        _this.isFocused = false;
        _this.isDrag = false;
        _this.isWireEvents = false;
        return _this;
    }
    Switch.prototype.changeState = function (state) {
        var ariaState;
        var rippleSpan;
        var wrapper = this.getWrapper();
        var bar = wrapper.querySelector('.e-switch-inner');
        var handle = wrapper.querySelector('.e-switch-handle');
        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isRippleEnabled) {
            rippleSpan = wrapper.getElementsByClassName(RIPPLE$2)[0];
        }
        if (state) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([bar, handle], ACTIVE);
            ariaState = 'true';
            this.element.checked = true;
            this.checked = true;
            if (rippleSpan) {
                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([rippleSpan], [RIPPLE_CHECK]);
            }
        }
        else {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([bar, handle], ACTIVE);
            ariaState = 'false';
            this.element.checked = false;
            this.checked = false;
            if (rippleSpan) {
                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([rippleSpan], [RIPPLE_CHECK]);
            }
        }
        wrapper.setAttribute('aria-checked', ariaState);
    };
    Switch.prototype.clickHandler = function (evt) {
        this.isDrag = false;
        this.focusOutHandler();
        this.changeState(!this.checked);
        this.element.focus();
        var changeEventArgs = { checked: this.element.checked, event: evt };
        this.trigger('change', changeEventArgs);
    };
    /**
     * Destroys the Switch widget.
     *
     * @returns {void}
     */
    Switch.prototype.destroy = function () {
        _super.prototype.destroy.call(this);
        if (!this.disabled) {
            this.unWireEvents();
        }
        destroy(this, this.getWrapper(), this.tagName);
    };
    Switch.prototype.focusHandler = function () {
        this.isFocused = true;
    };
    Switch.prototype.focusOutHandler = function () {
        this.getWrapper().classList.remove('e-focus');
    };
    /**
     * Gets the module name.
     *
     * @private
     * @returns {string} - Module Name
     */
    Switch.prototype.getModuleName = function () {
        return 'switch';
    };
    /**
     * Gets the properties to be maintained in the persistence state.
     *
     * @private
     * @returns {string} - Persist data
     */
    Switch.prototype.getPersistData = function () {
        return this.addOnPersist(['checked']);
    };
    Switch.prototype.getWrapper = function () {
        return this.element.parentElement;
    };
    Switch.prototype.initialize = function () {
        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.initialSwitchCheckedValue)) {
            this.initialSwitchCheckedValue = this.checked;
        }
        if (this.name) {
            this.element.setAttribute('name', this.name);
        }
        if (this.value) {
            this.element.setAttribute('value', this.value);
        }
        if (this.checked) {
            this.changeState(true);
        }
        if (this.disabled) {
            this.setDisabled();
        }
        if (this.onLabel || this.offLabel) {
            this.setLabel(this.onLabel, this.offLabel);
        }
    };
    Switch.prototype.initWrapper = function () {
        var wrapper = this.element.parentElement;
        if (!wrapper.classList.contains(WRAPPER$2)) {
            wrapper = this.createElement('div', {
                className: WRAPPER$2, attrs: { 'aria-checked': 'false' }
            });
            this.element.parentNode.insertBefore(wrapper, this.element);
        }
        var switchInner = this.createElement('span', { className: 'e-switch-inner' });
        var onLabel = this.createElement('span', { className: 'e-switch-on' });
        var offLabel = this.createElement('span', { className: 'e-switch-off' });
        var handle = this.createElement('span', { className: 'e-switch-handle' });
        wrapper.appendChild(this.element);
        setHiddenInput(this, wrapper);
        switchInner.appendChild(onLabel);
        switchInner.appendChild(offLabel);
        wrapper.appendChild(switchInner);
        wrapper.appendChild(handle);
        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isRippleEnabled) {
            var rippleSpan = this.createElement('span', { className: RIPPLE$2 });
            handle.appendChild(rippleSpan);
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.rippleEffect)(rippleSpan, { duration: 400, isCenterRipple: true });
        }
        wrapper.classList.add('e-wrapper');
        if (this.enableRtl) {
            wrapper.classList.add(RTL$2);
        }
        if (this.cssClass) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([wrapper], this.cssClass.split(' '));
        }
    };
    /**
     * Called internally if any of the property value changes.
     *
     * @private
     * @param {SwitchModel} newProp - Specifies New Properties
     * @param {SwitchModel} oldProp - Specifies Old Properties
     * @returns {void}
     */
    Switch.prototype.onPropertyChanged = function (newProp, oldProp) {
        var wrapper = this.getWrapper();
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'checked':
                    this.changeState(newProp.checked);
                    break;
                case 'disabled':
                    if (newProp.disabled) {
                        this.setDisabled();
                        this.unWireEvents();
                        this.isWireEvents = false;
                    }
                    else {
                        this.element.disabled = false;
                        wrapper.classList.remove(DISABLED$1);
                        wrapper.setAttribute('aria-disabled', 'false');
                        if (!this.isWireEvents) {
                            this.wireEvents();
                            this.isWireEvents = true;
                        }
                    }
                    break;
                case 'value':
                    this.element.setAttribute('value', newProp.value);
                    break;
                case 'name':
                    this.element.setAttribute('name', newProp.name);
                    break;
                case 'onLabel':
                case 'offLabel':
                    this.setLabel(newProp.onLabel, newProp.offLabel);
                    break;
                case 'enableRtl':
                    if (newProp.enableRtl) {
                        wrapper.classList.add(RTL$2);
                    }
                    else {
                        wrapper.classList.remove(RTL$2);
                    }
                    break;
                case 'cssClass':
                    if (oldProp.cssClass) {
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([wrapper], oldProp.cssClass.split(' '));
                    }
                    if (newProp.cssClass) {
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([wrapper], newProp.cssClass.split(' '));
                    }
                    break;
            }
        }
    };
    /**
     * Initialize Angular, React and Unique ID support.
     *
     * @private
     * @returns {void}
     */
    Switch.prototype.preRender = function () {
        var element = this.element;
        this.formElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.element, 'form');
        this.tagName = this.element.tagName;
        preRender(this, 'EJS-SWITCH', WRAPPER$2, element, this.getModuleName());
    };
    /**
     * Initialize control rendering.
     *
     * @private
     * @returns {void}
     */
    Switch.prototype.render = function () {
        this.initWrapper();
        this.initialize();
        if (!this.disabled) {
            this.wireEvents();
        }
        this.renderComplete();
    };
    Switch.prototype.rippleHandler = function (e) {
        var rippleSpan = this.getWrapper().getElementsByClassName(RIPPLE$2)[0];
        rippleMouseHandler(e, rippleSpan);
        if (e.type === 'mousedown' && e.currentTarget.classList.contains('e-switch-wrapper') && e.which === 1) {
            this.isDrag = true;
            this.isFocused = false;
        }
    };
    Switch.prototype.rippleTouchHandler = function (eventType) {
        var rippleSpan = this.getWrapper().getElementsByClassName(RIPPLE$2)[0];
        if (rippleSpan) {
            var event_1 = document.createEvent('MouseEvents');
            event_1.initEvent(eventType, false, true);
            rippleSpan.dispatchEvent(event_1);
        }
    };
    Switch.prototype.setDisabled = function () {
        var wrapper = this.getWrapper();
        this.element.disabled = true;
        wrapper.classList.add(DISABLED$1);
        wrapper.setAttribute('aria-disabled', 'true');
    };
    Switch.prototype.setLabel = function (onText, offText) {
        var wrapper = this.getWrapper();
        if (onText) {
            wrapper.querySelector('.e-switch-on').textContent = onText;
        }
        if (offText) {
            wrapper.querySelector('.e-switch-off').textContent = offText;
        }
    };
    Switch.prototype.switchFocusHandler = function () {
        if (this.isFocused) {
            this.getWrapper().classList.add('e-focus');
        }
    };
    Switch.prototype.switchMouseUp = function (e) {
        var target = e.target;
        if (e.type === 'touchmove') {
            e.preventDefault();
        }
        if (e.type === 'touchstart') {
            this.isDrag = true;
            this.rippleTouchHandler('mousedown');
        }
        if (this.isDrag) {
            if ((e.type === 'mouseup' && target.className.indexOf('e-switch') < 0) || e.type === 'touchend') {
                this.clickHandler(e);
                this.rippleTouchHandler('mouseup');
                e.preventDefault();
            }
        }
    };
    Switch.prototype.formResetHandler = function () {
        this.checked = this.initialSwitchCheckedValue;
        this.element.checked = this.initialSwitchCheckedValue;
    };
    /**
     * Toggle the Switch component state into checked/unchecked.
     *
     * @returns {void}
     */
    Switch.prototype.toggle = function () {
        this.clickHandler();
    };
    Switch.prototype.wireEvents = function () {
        var wrapper = this.getWrapper();
        this.delegateMouseUpHandler = this.switchMouseUp.bind(this);
        this.delegateKeyUpHandler = this.switchFocusHandler.bind(this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(wrapper, 'click', this.clickHandler, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'focus', this.focusHandler, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'mouseup', this.delegateMouseUpHandler, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'keyup', this.delegateKeyUpHandler, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(wrapper, 'mousedown mouseup', this.rippleHandler, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(wrapper, 'touchstart touchmove touchend', this.switchMouseUp, this);
        if (this.formElement) {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.formElement, 'reset', this.formResetHandler, this);
        }
    };
    Switch.prototype.unWireEvents = function () {
        var wrapper = this.getWrapper();
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(wrapper, 'click', this.clickHandler);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'focus', this.focusHandler);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'focusout', this.focusOutHandler);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'mouseup', this.delegateMouseUpHandler);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'keyup', this.delegateKeyUpHandler);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(wrapper, 'mousedown mouseup', this.rippleHandler);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(wrapper, 'touchstart touchmove touchend', this.switchMouseUp);
        if (this.formElement) {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.formElement, 'reset', this.formResetHandler);
        }
    };
    /**
     * Click the switch element
     * its native method
     *
     * @public
     * @returns {void}
     */
    Switch.prototype.click = function () {
        this.element.click();
    };
    /**
     * Sets the focus to Switch
     * its native method
     *
     * @public
     */
    Switch.prototype.focusIn = function () {
        this.element.focus();
    };
    __decorate$3([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Switch.prototype, "change", void 0);
    __decorate$3([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Switch.prototype, "created", void 0);
    __decorate$3([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], Switch.prototype, "checked", void 0);
    __decorate$3([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], Switch.prototype, "cssClass", void 0);
    __decorate$3([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], Switch.prototype, "disabled", void 0);
    __decorate$3([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], Switch.prototype, "name", void 0);
    __decorate$3([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], Switch.prototype, "onLabel", void 0);
    __decorate$3([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], Switch.prototype, "offLabel", void 0);
    __decorate$3([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], Switch.prototype, "value", void 0);
    Switch = __decorate$3([
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges
    ], Switch);
    return Switch;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));

/**
 * Switch modules
 */

var __extends$4 = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate$4 = ( false) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var classNames = {
    chipSet: 'e-chip-set',
    chip: 'e-chip',
    avatar: 'e-chip-avatar',
    text: 'e-chip-text',
    icon: 'e-chip-icon',
    delete: 'e-chip-delete',
    deleteIcon: 'e-dlt-btn',
    multiSelection: 'e-multi-selection',
    singleSelection: 'e-selection',
    active: 'e-active',
    chipWrapper: 'e-chip-avatar-wrap',
    iconWrapper: 'e-chip-icon-wrap',
    focused: 'e-focused',
    disabled: 'e-disabled',
    rtl: 'e-rtl'
};
/**
 * A chip component is a small block of essential information, mostly used on contacts or filter tags.
 * ```html
 * <div id="chip"></div>
 * ```
 * ```typescript
 * <script>
 * var chipObj = new ChipList();
 * chipObj.appendTo("#chip");
 * </script>
 * ```
 */
var ChipList = /** @__PURE__ @class */ (function (_super) {
    __extends$4(ChipList, _super);
    function ChipList(options, element) {
        var _this = _super.call(this, options, element) || this;
        _this.multiSelectedChip = [];
        return _this;
    }
    /**
     * Initialize the event handler
     *
     * @private
     */
    ChipList.prototype.preRender = function () {
        //prerender
    };
    /**
     * To find the chips length.
     *
     * @returns boolean
     * @private
     */
    ChipList.prototype.chipType = function () {
        return (this.chips && this.chips.length && this.chips.length > 0);
    };
    /**
     * To Initialize the control rendering.
     *
     * @returns void
     * @private
     */
    ChipList.prototype.render = function () {
        var property;
        this.type = this.chips.length ? 'chipset' : (this.text || this.element.innerText ? 'chip' : 'chipset');
        this.setAttributes();
        this.createChip();
        this.setRtl();
        this.select(this.selectedChips, property);
        this.wireEvent(false);
        this.rippleFunction = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.rippleEffect)(this.element, {
            selector: '.e-chip'
        });
        this.renderComplete();
    };
    ChipList.prototype.createChip = function () {
        this.innerText = (this.element.innerText && this.element.innerText.length !== 0)
            ? this.element.innerText.trim() : this.element.innerText;
        this.element.innerHTML = '';
        this.chipCreation(this.type === 'chip' ? [this.innerText ? this.innerText : this.text] : this.chips);
    };
    ChipList.prototype.setAttributes = function () {
        if (this.type === 'chip') {
            this.element.tabIndex = 0;
            this.element.setAttribute('role', 'option');
        }
        else {
            this.element.classList.add(classNames.chipSet);
            this.element.setAttribute('role', 'listbox');
            if (this.selection === 'Multiple') {
                this.element.classList.add(classNames.multiSelection);
                this.element.setAttribute('aria-multiselectable', 'true');
            }
            else if (this.selection === 'Single') {
                this.element.classList.add(classNames.singleSelection);
                this.element.setAttribute('aria-multiselectable', 'false');
            }
            else {
                this.element.setAttribute('aria-multiselectable', 'false');
            }
        }
    };
    ChipList.prototype.setRtl = function () {
        this.element.classList[this.enableRtl ? 'add' : 'remove'](classNames.rtl);
    };
    ChipList.prototype.chipCreation = function (data) {
        var chipListArray = [];
        for (var i = 0; i < data.length; i++) {
            var fieldsData = this.getFieldValues(data[i]);
            var chipArray = this.elementCreation(fieldsData);
            var className = (classNames.chip + ' ' + (fieldsData.enabled ? ' ' : classNames.disabled) + ' ' +
                (fieldsData.avatarIconCss || fieldsData.avatarText ? classNames.chipWrapper : (fieldsData.leadingIconCss ?
                    classNames.iconWrapper : ' ')) + ' ' + fieldsData.cssClass).split(' ').filter(function (css) { return css; });
            if (!this.chipType()) {
                chipListArray = chipArray;
                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], className);
                this.element.setAttribute('aria-label', fieldsData.text);
                if (fieldsData.value) {
                    this.element.setAttribute('data-value', fieldsData.value.toString());
                }
            }
            else {
                var wrapper = this.createElement('DIV', {
                    className: className.join(' '), attrs: {
                        tabIndex: '0', role: 'option',
                        'aria-label': fieldsData.text, 'aria-selected': 'false'
                    }
                });
                if (fieldsData.value) {
                    wrapper.setAttribute('data-value', fieldsData.value.toString());
                }
                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.append)(chipArray, wrapper);
                chipListArray.push(wrapper);
            }
        }
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.append)(chipListArray, this.element);
    };
    ChipList.prototype.getFieldValues = function (data) {
        var chipEnabled = !(this.enabled.toString() === 'false');
        var fields = {
            text: typeof data === 'object' ? (data.text ? data.text.toString() : this.text.toString()) :
                (!this.chipType() ? (this.innerText ? this.innerText : this.text.toString()) : data.toString()),
            cssClass: typeof data === 'object' ? (data.cssClass ? data.cssClass.toString() : this.cssClass.toString()) :
                (this.cssClass.toString()),
            leadingIconCss: typeof data === 'object' ? (data.leadingIconCss ? data.leadingIconCss.toString() :
                this.leadingIconCss.toString()) : (this.leadingIconCss.toString()),
            avatarIconCss: typeof data === 'object' ? (data.avatarIconCss ? data.avatarIconCss.toString() :
                this.avatarIconCss.toString()) : (this.avatarIconCss.toString()),
            avatarText: typeof data === 'object' ? (data.avatarText ? data.avatarText.toString() : this.avatarText.toString()) :
                (this.avatarText.toString()),
            trailingIconCss: typeof data === 'object' ? (data.trailingIconCss ? data.trailingIconCss.toString() :
                this.trailingIconCss.toString()) : (this.trailingIconCss.toString()),
            enabled: typeof data === 'object' ? (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(data.enabled) ? (data.enabled.toString() === 'false' ? false : true) :
                chipEnabled) : (chipEnabled),
            value: typeof data === 'object' ? ((data.value ? data.value.toString() : null)) : null,
            leadingIconUrl: typeof data === 'object' ? (data.leadingIconUrl ? data.leadingIconUrl.toString() : this.leadingIconUrl) :
                this.leadingIconUrl,
            trailingIconUrl: typeof data === 'object' ? (data.trailingIconUrl ? data.trailingIconUrl.toString() : this.trailingIconUrl) :
                this.trailingIconUrl
        };
        return fields;
    };
    ChipList.prototype.elementCreation = function (fields) {
        var chipArray = [];
        if (fields.avatarText || fields.avatarIconCss) {
            var className = (classNames.avatar + ' ' + fields.avatarIconCss).trim();
            var chipAvatarElement = this.createElement('span', { className: className });
            chipAvatarElement.innerText = fields.avatarText;
            chipArray.push(chipAvatarElement);
        }
        else if (fields.leadingIconCss) {
            var className = (classNames.icon + ' ' + fields.leadingIconCss).trim();
            var chipIconElement = this.createElement('span', { className: className });
            chipArray.push(chipIconElement);
        }
        else if (fields.leadingIconUrl) {
            var className = (classNames.avatar + ' ' + 'image-url').trim();
            var chipIconElement = this.createElement('span', { className: className });
            chipIconElement.style.backgroundImage = 'url(' + fields.leadingIconUrl + ')';
            chipArray.push(chipIconElement);
        }
        var chipTextElement = this.createElement('span', { className: classNames.text });
        chipTextElement.innerText = fields.text;
        chipArray.push(chipTextElement);
        if (fields.trailingIconCss || (this.chipType() && this.enableDelete)) {
            var className = (classNames.delete + ' ' +
                (fields.trailingIconCss ? fields.trailingIconCss : classNames.deleteIcon)).trim();
            var chipdeleteElement = this.createElement('span', { className: className });
            chipArray.push(chipdeleteElement);
        }
        else if (fields.trailingIconUrl) {
            var className = ('trailing-icon-url').trim();
            var chipIconsElement = this.createElement('span', { className: className });
            chipIconsElement.style.backgroundImage = 'url(' + fields.trailingIconUrl + ')';
            chipArray.push(chipIconsElement);
        }
        return chipArray;
    };
    /**
     * A function that finds chip based on given input.
     *
     * @param  {number | HTMLElement } fields - We can pass index number or element of chip.
     * {% codeBlock src='chips/find/index.md' %}{% endcodeBlock %}.
     */
    ChipList.prototype.find = function (fields) {
        var chipData;
        var chipElement = fields instanceof HTMLElement ?
            fields : this.element.querySelectorAll('.' + classNames.chip)[fields];
        if (chipElement && this.chipType()) {
            chipData = { text: undefined, index: undefined, element: undefined, data: undefined };
            chipData.index = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.chip)).indexOf(chipElement);
            chipData.text = typeof this.chips[chipData.index] === 'object' ?
                (this.chips[chipData.index].text ?
                    this.chips[chipData.index].text.toString() : '') :
                this.chips[chipData.index].toString();
            chipData.data = this.chips[chipData.index];
            chipData.element = chipElement;
        }
        return chipData;
    };
    /**
     * Allows adding the chip item(s) by passing a single or array of string, number, or ChipModel values.
     *
     * @param  {string[] | number[] | ChipModel[] | string | number | ChipModel} chipsData - We can pass array of string or
     *  array of number or array of chip model or string data or number data or chip model.
     * {% codeBlock src='chips/add/index.md' %}{% endcodeBlock %}
     * @deprecated
     */
    ChipList.prototype.add = function (chipsData) {
        var _a;
        if (this.type !== 'chip') {
            var fieldData = chipsData instanceof Array ?
                chipsData : [chipsData];
            (_a = this.chips).push.apply(_a, fieldData);
            this.chipCreation(fieldData);
        }
    };
    /**
     * Allows selecting the chip item(s) by passing a single or array of string, number, or ChipModel values.
     *
     * @param  {number | number[] | HTMLElement | HTMLElement[]} fields - We can pass number or array of number
     *  or chip element or array of chip element.
     * {% codeBlock src='chips/select/index.md' %}{% endcodeBlock %}
     */
    ChipList.prototype.select = function (fields, selectionType) {
        this.onSelect(fields, false, selectionType);
    };
    ChipList.prototype.multiSelection = function (newProp) {
        var items = this.element.querySelectorAll('.' + 'e-chip');
        for (var j = 0; j < newProp.length; j++) {
            if (typeof newProp[j] === 'string') {
                for (var k = 0; k < items.length; k++) {
                    if (newProp[j] !== k) {
                        if (newProp[j] === items[k].attributes[5].value) {
                            this.multiSelectedChip.push(k);
                            break;
                        }
                    }
                }
            }
            else {
                this.multiSelectedChip.push(newProp[j]);
            }
        }
    };
    ChipList.prototype.onSelect = function (fields, callFromProperty, selectionType) {
        var index;
        var chipNodes;
        var chipValue;
        if (this.chipType() && this.selection !== 'None') {
            if (callFromProperty) {
                var chipElements = this.element.querySelectorAll('.' + classNames.chip);
                for (var i = 0; i < chipElements.length; i++) {
                    chipElements[i].setAttribute('aria-selected', 'false');
                    chipElements[i].classList.remove(classNames.active);
                }
            }
            var fieldData = fields instanceof Array ? fields : [fields];
            for (var i = 0; i < fieldData.length; i++) {
                var chipElement = fieldData[i] instanceof HTMLElement ? fieldData[i]
                    : this.element.querySelectorAll('.' + classNames.chip)[fieldData[i]];
                if (selectionType !== 'index') {
                    for (var j = 0; j < this.chips.length; j++) {
                        chipNodes = this.element.querySelectorAll('.' + classNames.chip)[j];
                        var fieldsData = this.getFieldValues(this.chips[j]);
                        if (selectionType === 'value') {
                            if (fieldsData.value !== null) {
                                chipValue = chipNodes.dataset.value;
                            }
                        }
                        else if (selectionType === 'text') {
                            chipValue = chipNodes.innerText;
                        }
                        if (chipValue === fieldData[i].toString()) {
                            index = j;
                            chipElement = this.element.querySelectorAll('.' + classNames.chip)[index];
                        }
                    }
                }
                if (chipElement instanceof HTMLElement) {
                    this.selectionHandler(chipElement);
                }
            }
        }
    };
    /**
     * Allows removing the chip item(s) by passing a single or array of string, number, or ChipModel values.
     *
     * @param  {number | number[] | HTMLElement | HTMLElement[]} fields - We can pass number or array of number
     *  or chip element or array of chip element.
     * {% codeBlock src='chips/remove/index.md' %}{% endcodeBlock %}
     */
    ChipList.prototype.remove = function (fields) {
        var _this = this;
        if (this.chipType()) {
            var fieldData = fields instanceof Array ? fields : [fields];
            var chipElements_1 = [];
            var chipCollection_1 = this.element.querySelectorAll('.' + classNames.chip);
            fieldData.forEach(function (data) {
                var chipElement = data instanceof HTMLElement ? data
                    : chipCollection_1[data];
                if (chipElement instanceof HTMLElement) {
                    chipElements_1.push(chipElement);
                }
            });
            chipElements_1.forEach(function (element) {
                var chips = _this.element.querySelectorAll('.' + classNames.chip);
                var index = Array.prototype.slice.call(chips).indexOf(element);
                _this.deleteHandler(element, index);
            });
        }
    };
    /**
     * Returns the selected chip(s) data.
     * {% codeBlock src='chips/getSelectedChips/index.md' %}{% endcodeBlock %}
     */
    ChipList.prototype.getSelectedChips = function () {
        var selectedChips;
        if (this.chipType() && this.selection !== 'None') {
            var selectedItems = { texts: [], Indexes: [], data: [], elements: [] };
            var items = this.element.querySelectorAll('.' + classNames.active);
            for (var i = 0; i < items.length; i++) {
                var chip = items[i];
                selectedItems.elements.push(chip);
                var index = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.chip)).indexOf(chip);
                selectedItems.Indexes.push(index);
                selectedItems.data.push(this.chips[index]);
                var text = typeof this.chips[index] === 'object' ?
                    this.chips[index].text ? this.chips[index].text.toString()
                        : null : this.chips[index].toString();
                selectedItems.texts.push(text);
            }
            var selectedItem = {
                text: selectedItems.texts[0], index: selectedItems.Indexes[0],
                data: selectedItems.data[0], element: selectedItems.elements[0]
            };
            selectedChips = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(selectedItem.index) ?
                (this.selection === 'Multiple' ? selectedItems : selectedItem) : undefined;
        }
        return selectedChips;
    };
    ChipList.prototype.wireEvent = function (unWireEvent) {
        if (!unWireEvent) {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'click', this.clickHandler, this);
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'keydown', this.keyHandler, this);
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'keyup', this.keyHandler, this);
        }
        else {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'click', this.clickHandler);
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'focusout', this.focusOutHandler);
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'keydown', this.keyHandler);
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'keyup', this.keyHandler);
        }
    };
    ChipList.prototype.keyHandler = function (e) {
        if (e.target.classList.contains(classNames.chip)) {
            if (e.type === 'keydown') {
                if (e.keyCode === 13 || e.keyCode === 32) {
                    this.clickHandler(e);
                }
                else if (e.keyCode === 46 && this.enableDelete) {
                    this.clickHandler(e, true);
                }
            }
            else if (e.keyCode === 9) {
                this.focusInHandler(e.target);
            }
        }
    };
    ChipList.prototype.focusInHandler = function (chipWrapper) {
        if (!chipWrapper.classList.contains(classNames.focused)) {
            chipWrapper.classList.add(classNames.focused);
        }
    };
    ChipList.prototype.focusOutHandler = function (e) {
        var chipWrapper = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.' + classNames.chip);
        var focusedElement = !this.chipType() ? (this.element.classList.contains(classNames.focused) ?
            this.element : null) : this.element.querySelector('.' + classNames.focused);
        if (chipWrapper && focusedElement) {
            focusedElement.classList.remove(classNames.focused);
        }
    };
    ChipList.prototype.clickHandler = function (e, del) {
        var _this = this;
        if (del === void 0) { del = false; }
        var chipWrapper = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.' + classNames.chip);
        if (chipWrapper) {
            // eslint-disable-next-line
            var chipDataArgs = void 0;
            if (this.chipType()) {
                chipDataArgs = this.find(chipWrapper);
            }
            else {
                var index = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.chip)).indexOf(chipWrapper);
                chipDataArgs = {
                    text: this.innerText ? this.innerText : this.text,
                    element: chipWrapper, data: this.text, index: index
                };
            }
            chipDataArgs.event = e;
            chipDataArgs.cancel = false;
            this.trigger('beforeClick', chipDataArgs, function (observedArgs) {
                if (!observedArgs.cancel) {
                    _this.clickEventHandler(observedArgs.element, e, del);
                }
            });
        }
    };
    ChipList.prototype.clickEventHandler = function (chipWrapper, e, del) {
        var _this = this;
        if (this.chipType()) {
            var chipData_1 = this.find(chipWrapper);
            chipData_1.event = e;
            var deleteElement = e.target.classList.contains(classNames.deleteIcon) ?
                e.target : (del ? chipWrapper.querySelector('.' + classNames.deleteIcon) : undefined);
            if (deleteElement && this.enableDelete) {
                chipData_1.cancel = false;
                var deletedItemArgs = chipData_1;
                this.trigger('delete', deletedItemArgs, function (observedArgs) {
                    if (!observedArgs.cancel) {
                        _this.deleteHandler(observedArgs.element, observedArgs.index);
                        _this.selectionHandler(chipWrapper);
                        chipData_1.selected = observedArgs.element.classList.contains(classNames.active);
                        var selectedItemArgs = chipData_1;
                        _this.trigger('click', selectedItemArgs);
                        var chipElement = _this.element.querySelectorAll('.' + classNames.chip)[observedArgs.index];
                        if (chipElement) {
                            chipElement.focus();
                            _this.focusInHandler(chipElement);
                        }
                    }
                });
            }
            else if (this.selection !== 'None') {
                this.selectionHandler(chipWrapper);
                chipData_1.selected = chipWrapper.classList.contains(classNames.active);
                var selectedItemArgs = chipData_1;
                this.trigger('click', selectedItemArgs);
            }
            else {
                this.focusInHandler(chipWrapper);
                var clickedItemArgs = chipData_1;
                this.trigger('click', clickedItemArgs);
            }
        }
        else {
            this.focusInHandler(chipWrapper);
            var clickedItemArgs = {
                text: this.innerText ? this.innerText : this.text,
                element: chipWrapper, data: this.text, event: e
            };
            this.trigger('click', clickedItemArgs);
        }
    };
    ChipList.prototype.selectionHandler = function (chipWrapper) {
        if (this.selection === 'Single') {
            var activeElement = this.element.querySelector('.' + classNames.active);
            if (activeElement && activeElement !== chipWrapper) {
                activeElement.classList.remove(classNames.active);
                activeElement.setAttribute('aria-selected', 'false');
            }
            this.setProperties({ selectedChips: null }, true);
        }
        else {
            this.setProperties({ selectedChips: [] }, true);
        }
        if (chipWrapper.classList.contains(classNames.active)) {
            chipWrapper.classList.remove(classNames.active);
            chipWrapper.setAttribute('aria-selected', 'false');
        }
        else {
            chipWrapper.classList.add(classNames.active);
            chipWrapper.setAttribute('aria-selected', 'true');
        }
        this.updateSelectedChips();
    };
    ChipList.prototype.updateSelectedChips = function () {
        var chipListEle = this.element.querySelectorAll('.e-chip');
        var chipCollIndex = [];
        var chipCollValue = [];
        var chip = null;
        var value;
        for (var i = 0; i < chipListEle.length; i++) {
            var selectedEle = this.element.querySelectorAll('.e-chip')[i];
            if (selectedEle.getAttribute('aria-selected') === 'true') {
                value = selectedEle.getAttribute('data-value');
                if (this.selection === 'Single' && selectedEle.classList.contains('e-active')) {
                    chip = value ? value : i;
                    break;
                }
                else {
                    chip = value ? chipCollValue.push(value) : chipCollIndex.push(i);
                }
            }
        }
        this.setProperties({ selectedChips: this.selection === 'Single' ? chip : value ? chipCollValue : chipCollIndex }, true);
    };
    ChipList.prototype.deleteHandler = function (chipWrapper, index) {
        // Used to store the deleted chip item details.
        var deletedChipData = this.find(chipWrapper);
        this.chips.splice(index, 1);
        this.setProperties({ chips: this.chips }, true);
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(chipWrapper);
        this.trigger('deleted', deletedChipData);
    };
    /**
     * Removes the component from the DOM and detaches all its related event handlers. Also, it removes the attributes and classes.
     * {% codeBlock src='chips/destroy/index.md' %}{% endcodeBlock %}
     */
    ChipList.prototype.destroy = function () {
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], [classNames.chipSet, classNames.chip, classNames.rtl,
            classNames.multiSelection, classNames.singleSelection, classNames.disabled, classNames.chipWrapper, classNames.iconWrapper,
            classNames.active, classNames.focused].concat(this.cssClass.toString().split(' ').filter(function (css) { return css; })));
        this.removeMultipleAttributes(['tabindex', 'role', 'aria-label', 'aria-multiselectable'], this.element);
        this.wireEvent(true);
        this.rippleFunction();
        _super.prototype.destroy.call(this);
        this.element.innerHTML = '';
        this.element.innerText = this.innerText;
    };
    ChipList.prototype.removeMultipleAttributes = function (attributes$$1, element) {
        attributes$$1.forEach(function (attr) {
            element.removeAttribute(attr);
        });
    };
    ChipList.prototype.getPersistData = function () {
        return this.addOnPersist([]);
    };
    ChipList.prototype.getModuleName = function () {
        return 'chip-list';
    };
    /**
     * Called internally if any of the property value changed.
     *
     * @returns void
     * @private
     */
    ChipList.prototype.onPropertyChanged = function (newProp, oldProp) {
        var property;
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'chips':
                case 'text':
                case 'avatarText':
                case 'avatarIconCss':
                case 'leadingIconCss':
                case 'trailingIconCss':
                case 'selection':
                case 'enableDelete':
                case 'enabled':
                    this.refresh();
                    break;
                case 'cssClass':
                    if (!this.chipType()) {
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], oldProp.cssClass.toString().split(' ').filter(function (css) { return css; }));
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], newProp.cssClass.toString().split(' ').filter(function (css) { return css; }));
                    }
                    else {
                        this.refresh();
                    }
                    break;
                case 'selectedChips':
                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(this.element.querySelectorAll('.e-active'), 'e-active');
                    if (this.selection === 'Multiple') {
                        this.multiSelectedChip = [];
                        this.multiSelection(newProp.selectedChips);
                        this.onSelect(this.multiSelectedChip, true, property);
                        this.updateSelectedChips();
                    }
                    else {
                        this.onSelect(newProp.selectedChips, true, property);
                    }
                    break;
                case 'enableRtl':
                    this.setRtl();
                    break;
            }
        }
    };
    __decorate$4([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)([])
    ], ChipList.prototype, "chips", void 0);
    __decorate$4([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], ChipList.prototype, "text", void 0);
    __decorate$4([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], ChipList.prototype, "avatarText", void 0);
    __decorate$4([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], ChipList.prototype, "avatarIconCss", void 0);
    __decorate$4([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], ChipList.prototype, "leadingIconCss", void 0);
    __decorate$4([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], ChipList.prototype, "trailingIconCss", void 0);
    __decorate$4([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], ChipList.prototype, "leadingIconUrl", void 0);
    __decorate$4([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], ChipList.prototype, "trailingIconUrl", void 0);
    __decorate$4([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], ChipList.prototype, "cssClass", void 0);
    __decorate$4([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)
    ], ChipList.prototype, "enabled", void 0);
    __decorate$4([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)([])
    ], ChipList.prototype, "selectedChips", void 0);
    __decorate$4([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('None')
    ], ChipList.prototype, "selection", void 0);
    __decorate$4([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], ChipList.prototype, "enableDelete", void 0);
    __decorate$4([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], ChipList.prototype, "created", void 0);
    __decorate$4([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], ChipList.prototype, "click", void 0);
    __decorate$4([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], ChipList.prototype, "beforeClick", void 0);
    __decorate$4([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], ChipList.prototype, "delete", void 0);
    __decorate$4([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], ChipList.prototype, "deleted", void 0);
    ChipList = __decorate$4([
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges
    ], ChipList);
    return ChipList;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));

/**
 * Represents ChipList `Chip` model class.
 */
var Chip = /** @__PURE__ @class */ (function () {
    function Chip() {
    }
    return Chip;
}());

/**
 * Chip modules
 */

var __extends$5 = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate$5 = ( false) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
// eslint-disable-next-line @typescript-eslint/triple-slash-reference
///<reference path='../button/button-model.d.ts'/>
var FABHIDDEN = 'e-fab-hidden';
var FIXEDFAB = 'e-fab-fixed';
var FABVERTDIST = '--fabVertDist';
var FABHORZDIST = '--fabHorzDist';
var FABTOP = 'e-fab-top';
var FABBOTTOM = 'e-fab-bottom';
var FABRIGHT = 'e-fab-right';
var FABLEFT = 'e-fab-left';
var FABMIDDLE = 'e-fab-middle';
var FABCENTER = 'e-fab-center';
/**
 * Defines the position of FAB (Floating Action Button) in target.
 */
var FabPosition;
(function (FabPosition) {
    /**
     * Positions the FAB at the target's top left corner.
     */
    FabPosition[FabPosition["TopLeft"] = 0] = "TopLeft";
    /**
     * Places the FAB on the top-center position of the target.
     */
    FabPosition[FabPosition["TopCenter"] = 1] = "TopCenter";
    /**
     * PPositions the FAB at the target's top right corner.
     */
    FabPosition[FabPosition["TopRight"] = 2] = "TopRight";
    /**
     * Positions the FAB in the middle of target's left side.
     */
    FabPosition[FabPosition["MiddleLeft"] = 3] = "MiddleLeft";
    /**
     * Positions the FAB in the center of target.
     */
    FabPosition[FabPosition["MiddleCenter"] = 4] = "MiddleCenter";
    /**
     * Positions the FAB in the middle of target's right side.
     */
    FabPosition[FabPosition["MiddleRight"] = 5] = "MiddleRight";
    /**
     * Positions the FAB at the target's bottom left corner.
     */
    FabPosition[FabPosition["BottomLeft"] = 6] = "BottomLeft";
    /**
     * Places the FAB on the bottom-center position of the target.
     */
    FabPosition[FabPosition["BottomCenter"] = 7] = "BottomCenter";
    /**
     * Positions the FAB at the target's bottom right corner.
     */
    FabPosition[FabPosition["BottomRight"] = 8] = "BottomRight";
})(FabPosition || (FabPosition = {}));
/**
 * The FAB Component (Floating Action Button) is an extension of Button Component that appears in front of all the contents of the page and performs the primary action.
 */
var Fab = /** @__PURE__ @class */ (function (_super) {
    __extends$5(Fab, _super);
    /**
     * Constructor for creating the widget
     *
     * @param  {FabModel} options - Specifies the floating action button model
     * @param  {string|HTMLButtonElement} element - Specifies the target element
     */
    function Fab(options, element) {
        return _super.call(this, options, element) || this;
    }
    /**
     * Initialize the control rendering
     *
     * @returns {void}
     * @private
     */
    Fab.prototype.render = function () {
        _super.prototype.render.call(this);
        this.initializeFab();
    };
    Fab.prototype.preRender = function () {
        _super.prototype.preRender.call(this);
        if (!this.element.id) {
            this.element.id = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getUniqueID)('e-' + this.getModuleName());
        }
    };
    /**
     * Get the properties to be maintained in the persisted state.
     *
     * @returns {string} - Persist data
     */
    Fab.prototype.getPersistData = function () {
        _super.prototype.getPersistData.call(this);
        return this.addOnPersist([]);
    };
    /**
     * Get component name.
     *
     * @returns {string} - Module name
     * @private
     */
    Fab.prototype.getModuleName = function () {
        return 'fab';
    };
    Fab.prototype.initializeFab = function () {
        // To add 'e-btn' class
        this.element.classList.add('e-' + _super.prototype.getModuleName.call(this));
        this.checkTarget();
        this.setPosition();
        this.setVisibility();
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(window, 'resize', this.resizeHandler, this);
    };
    Fab.prototype.checkTarget = function () {
        this.isFixed = true;
        if (this.target) {
            this.targetEle = (typeof this.target === 'string') ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)(this.target) : this.target;
            if (this.targetEle) {
                this.isFixed = false;
                this.targetEle.appendChild(this.element);
            }
        }
        this.isFixed ? this.element.classList.add(FIXEDFAB) : this.element.classList.remove(FIXEDFAB);
    };
    Fab.prototype.setVisibility = function () {
        this.visible ? this.element.classList.remove(FABHIDDEN) : this.element.classList.add(FABHIDDEN);
    };
    Fab.prototype.getPosition = function () {
        return (typeof (this.position) === "string") ? this.position : FabPosition[this.position];
    };
    Fab.prototype.setPosition = function () {
        this.setVerticalPosition();
        this.setHorizontalPosition();
    };
    Fab.prototype.setVerticalPosition = function () {
        //Check for middle position and middle class and vertical distance atttribute.
        if (['MiddleLeft', 'MiddleRight', 'MiddleCenter'].indexOf(this.getPosition()) !== -1) {
            var yoffset = ((this.isFixed ? window.innerHeight : this.targetEle.clientHeight) - this.element.offsetHeight) / 2;
            this.element.style.setProperty(FABVERTDIST, yoffset + 'px');
            this.element.classList.add(FABMIDDLE);
        }
        //Check for bottom position and bottom class else add top class.
        (['BottomLeft', 'BottomCenter', 'BottomRight'].indexOf(this.getPosition()) !== -1) ?
            this.element.classList.add(FABBOTTOM) : this.element.classList.add(FABTOP);
    };
    Fab.prototype.setHorizontalPosition = function () {
        //Check for center position and center class and horizontal distance atttribute.
        if (['TopCenter', 'BottomCenter', 'MiddleCenter'].indexOf(this.getPosition()) !== -1) {
            var xoffset = ((this.isFixed ? window.innerWidth : this.targetEle.clientWidth) - this.element.offsetWidth) / 2;
            this.element.style.setProperty(FABHORZDIST, xoffset + 'px');
            this.element.classList.add(FABCENTER);
        }
        var isRight = ['TopRight', 'MiddleRight', 'BottomRight'].indexOf(this.getPosition()) !== -1;
        (!(this.enableRtl || isRight) || (this.enableRtl && isRight)) ? this.element.classList.add(FABLEFT) : this.element.classList.add(FABRIGHT);
    };
    Fab.prototype.clearPosition = function () {
        this.element.style.removeProperty(FABVERTDIST);
        this.element.classList.remove(FABTOP, FABBOTTOM, FABMIDDLE);
        this.clearHorizontalPosition();
    };
    Fab.prototype.clearHorizontalPosition = function () {
        this.element.style.removeProperty(FABHORZDIST);
        this.element.classList.remove(FABRIGHT, FABLEFT, FABCENTER);
    };
    /**
     * Refreshes the FAB position. You can call this method to re-position FAB when target is resized.
     */
    Fab.prototype.refreshPosition = function () {
        this.resizeHandler();
    };
    Fab.prototype.resizeHandler = function () {
        this.setPosition();
    };
    /**
     * Destroys the FAB instance.
     *
     */
    Fab.prototype.destroy = function () {
        _super.prototype.destroy.call(this);
        // To remove 'e-btn' class
        this.element.classList.remove('e-' + _super.prototype.getModuleName.call(this));
        this.clearPosition();
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(window, 'resize', this.resizeHandler);
    };
    /**
     * Called internally if any of the property value changed.
     *
     * @param  {FabModel} newProp - Specifies new properties
     * @param  {FabModel} oldProp - Specifies old properties
     * @returns {void}
     * @private
     */
    Fab.prototype.onPropertyChanged = function (newProp, oldProp) {
        _super.prototype.onPropertyChanged.call(this, newProp, oldProp);
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'enableRtl':
                    this.clearHorizontalPosition();
                    this.setHorizontalPosition();
                    break;
                case 'visible':
                    this.setVisibility();
                    break;
                case 'position':
                    this.clearPosition();
                    this.setPosition();
                    break;
                case 'target':
                    this.checkTarget();
                    this.setPosition();
                    break;
            }
        }
    };
    __decorate$5([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('BottomRight')
    ], Fab.prototype, "position", void 0);
    __decorate$5([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], Fab.prototype, "target", void 0);
    __decorate$5([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)
    ], Fab.prototype, "visible", void 0);
    __decorate$5([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)
    ], Fab.prototype, "isPrimary", void 0);
    Fab = __decorate$5([
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges
    ], Fab);
    return Fab;
}(Button));

/**
 * Floating Action Button modules
 */

var __extends$6 = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate$6 = ( false) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var topPosition = ['TopLeft', 'TopCenter', 'TopRight'];
var bottomPosition = ['BottomLeft', 'BottomCenter', 'BottomRight'];
var leftPosition = ['TopLeft', 'MiddleLeft', 'BottomLeft'];
var rightPosition = ['TopRight', 'MiddleRight', 'BottomRight'];
var SDHIDDEN = 'e-speeddial-hidden';
var FIXEDSD = 'e-speeddial-fixed';
var SPEEDDIAL = 'e-speeddial';
var RTLCLASS = 'e-rtl';
var HOVERSD = 'e-speeddial-hover-open';
var RADIALSD = 'e-speeddial-radial';
var LINEARSD = 'e-speeddial-linear';
var TEMPLATESD = 'e-speeddial-template';
var SDTEMPLATECONTAINER = 'e-speeddial-template-container';
var SDOVERLAY = 'e-speeddial-overlay';
var SDPOPUP = 'e-speeddial-popup';
var SDUL = 'e-speeddial-ul';
var SDLI = 'e-speeddial-li';
var SDACTIVELI = 'e-speeddial-li-active';
var SDLIICON = 'e-speeddial-li-icon';
var SDLITEXT = 'e-speeddial-li-text';
var SDLITEXTONLY = 'e-speeddial-text-li';
var DISABLED$2 = 'e-disabled';
var SDVERTICALBOTTOM = 'e-speeddial-vert-bottom';
var SDVERTICALRIGHT = 'e-speeddial-vert-right';
var SDHORIZONTALTOP = 'e-speeddial-horz-top';
var SDHORIZONTALLEFT = 'e-speeddial-horz-left';
var SDHORIZONTALRIGHT = 'e-speeddial-horz-right';
var SDOVERFLOW = 'e-speeddial-overflow';
var SDVERTOVERFLOW = 'e-speeddial-vert-overflow';
var SDHORZOVERFLOW = 'e-speeddial-horz-overflow';
var SDTOP = 'e-speeddial-top';
var SDBOTTOM = 'e-speeddial-bottom';
var SDRIGHT = 'e-speeddial-right';
var SDLEFT = 'e-speeddial-left';
var SDMIDDLE = 'e-speeddial-middle';
var SDCENTER = 'e-speeddial-center';
var SDTOPLEFT = 'e-speeddial-top-left';
var SDBOTTOMRIGHT = 'e-speeddial-bottom-right';
var SDTOPRIGHT = 'e-speeddial-top-right';
var SDBOTTOMLEFT = 'e-speeddial-bottom-left';
var SDVERTDIST = '--speeddialVertDist';
var SDHORZDIST = '--speeddialHorzDist';
var SDRADICALANGLE = '--speeddialRadialAngle';
var SDRADICALOFFSET = '--speeddialRadialOffset';
var SDRADICALMINHEIGHT = '--speeddialRadialMinHeight';
var SDRADICALMINWIDTH = '--speeddialRadialMinWidth';
var SDOVERFLOWLIMIT = '--speeddialOverflowLimit';
/**
 * Defines the display mode of speed dial action items in SpeedDial
 */
var SpeedDialMode;
(function (SpeedDialMode) {
    /**
     * SpeedDial items are displayed in linear order like list.
     */
    SpeedDialMode[SpeedDialMode["Linear"] = 0] = "Linear";
    /**
     * SpeedDial items are displayed like radial menu in radial direction (circular direction).
     */
    SpeedDialMode[SpeedDialMode["Radial"] = 1] = "Radial";
})(SpeedDialMode || (SpeedDialMode = {}));
/**
 * Defines the speed dial action items display direction when mode is Linear.
 */
var LinearDirection;
(function (LinearDirection) {
    /**
    * Speed dial action items are displayed vertically above the button of Speed Dial.
    */
    LinearDirection[LinearDirection["Up"] = 0] = "Up";
    /**
    * Speed dial action items are displayed vertically below the button of Speed Dial.
    */
    LinearDirection[LinearDirection["Down"] = 1] = "Down";
    /**
    * Speed dial action items are displayed horizontally on the button's right side.
    */
    LinearDirection[LinearDirection["Right"] = 2] = "Right";
    /**
    * Speed dial action items are displayed horizontally on the button's left side.
    */
    LinearDirection[LinearDirection["Left"] = 3] = "Left";
    /**
    * Speed dial action items are displayed vertically above or below the button of Speed Dial based on the position.
    * If Position is TopRight, TopLeft, TopCenter, the items are displayed vertically below the button else above the button.
    */
    LinearDirection[LinearDirection["Auto"] = 4] = "Auto";
})(LinearDirection || (LinearDirection = {}));
/**
 * Defines the speed dial action items  order, when mode is Radial.
 */
var RadialDirection;
(function (RadialDirection) {
    /**
    * SpeedDial items are arranged in clockwise direction.
    */
    RadialDirection[RadialDirection["Clockwise"] = 0] = "Clockwise";
    /**
    * SpeedDial items are shown in anti-clockwise direction.
    */
    RadialDirection[RadialDirection["AntiClockwise"] = 1] = "AntiClockwise";
    /**
    * SpeedDial items are shown clockwise or anti-clockwise based on the position.
    */
    RadialDirection[RadialDirection["Auto"] = 2] = "Auto";
})(RadialDirection || (RadialDirection = {}));
/**
 * Defines the animation effect applied when open and close the speed dial items.
 */
var SpeedDialAnimationEffect;
(function (SpeedDialAnimationEffect) {
    /**
    * SpeedDial open/close actions occur with the Fade animation effect.
    */
    SpeedDialAnimationEffect[SpeedDialAnimationEffect["Fade"] = 0] = "Fade";
    /**
    * SpeedDial open/close actions occur with the FadeZoom animation effect.
    */
    SpeedDialAnimationEffect[SpeedDialAnimationEffect["FadeZoom"] = 1] = "FadeZoom";
    /**
    * SpeedDial open/close actions occur with the FlipLeftDown animation effect.
    */
    SpeedDialAnimationEffect[SpeedDialAnimationEffect["FlipLeftDown"] = 2] = "FlipLeftDown";
    /**
    * SpeedDial open/close actions occur with the FlipLeftUp animation effect.
    */
    SpeedDialAnimationEffect[SpeedDialAnimationEffect["FlipLeftUp"] = 3] = "FlipLeftUp";
    /**
    * SpeedDial open/close actions occur with the FlipRightDown animation effect.
    */
    SpeedDialAnimationEffect[SpeedDialAnimationEffect["FlipRightDown"] = 4] = "FlipRightDown";
    /**
    * SpeedDial open/close actions occur with the FlipRightUp animation effect.
    */
    SpeedDialAnimationEffect[SpeedDialAnimationEffect["FlipRightUp"] = 5] = "FlipRightUp";
    /**
    * SpeedDial open/close actions occur with the FlipXDown animation effect.
    */
    SpeedDialAnimationEffect[SpeedDialAnimationEffect["FlipXDown"] = 6] = "FlipXDown";
    /**
    * SpeedDial open/close actions occur with the FlipXUp animation effect.
    */
    SpeedDialAnimationEffect[SpeedDialAnimationEffect["FlipXUp"] = 7] = "FlipXUp";
    /**
    * SpeedDial open/close actions occur with the FlipYLeft animation effect.
    */
    SpeedDialAnimationEffect[SpeedDialAnimationEffect["FlipYLeft"] = 8] = "FlipYLeft";
    /**
    * SpeedDial open/close actions occur with the FlipYRight animation effect.
    */
    SpeedDialAnimationEffect[SpeedDialAnimationEffect["FlipYRight"] = 9] = "FlipYRight";
    /**
    * SpeedDial open/close actions occur with the SlideBottom animation effect.
    */
    SpeedDialAnimationEffect[SpeedDialAnimationEffect["SlideBottom"] = 10] = "SlideBottom";
    /**
    * SpeedDial open/close actions occur with the SlideLeft animation effect.
    */
    SpeedDialAnimationEffect[SpeedDialAnimationEffect["SlideLeft"] = 11] = "SlideLeft";
    /**
    * SpeedDial open/close actions occur with the SlideRight animation effect.
    */
    SpeedDialAnimationEffect[SpeedDialAnimationEffect["SlideRight"] = 12] = "SlideRight";
    /**
    * SpeedDial open/close actions occur with the SlideTop animation effect.
    */
    SpeedDialAnimationEffect[SpeedDialAnimationEffect["SlideTop"] = 13] = "SlideTop";
    /**
    * SpeedDial open/close actions occur with the Zoom animation effect.
    */
    SpeedDialAnimationEffect[SpeedDialAnimationEffect["Zoom"] = 14] = "Zoom";
    /**
    * SpeedDial open/close actions occur without any animation effect.
    */
    SpeedDialAnimationEffect[SpeedDialAnimationEffect["None"] = 15] = "None";
})(SpeedDialAnimationEffect || (SpeedDialAnimationEffect = {}));
/**
 * AProvides options to customize the animation applied while opening and closing the popup of SpeedDial.
 */
var SpeedDialAnimationSettings = /** @__PURE__ @class */ (function (_super) {
    __extends$6(SpeedDialAnimationSettings, _super);
    function SpeedDialAnimationSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Fade')
    ], SpeedDialAnimationSettings.prototype, "effect", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(400)
    ], SpeedDialAnimationSettings.prototype, "duration", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)
    ], SpeedDialAnimationSettings.prototype, "delay", void 0);
    return SpeedDialAnimationSettings;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));
/**
 * Provides the options to customize the speed dial action buttons when mode of SpeedDial is Radial.
 */
var RadialSettings = /** @__PURE__ @class */ (function (_super) {
    __extends$6(RadialSettings, _super);
    function RadialSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Auto')
    ], RadialSettings.prototype, "direction", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(-1)
    ], RadialSettings.prototype, "endAngle", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('100px')
    ], RadialSettings.prototype, "offset", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(-1)
    ], RadialSettings.prototype, "startAngle", void 0);
    return RadialSettings;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));
/**
 * Defines the items of Floating Action Button.
 */
var SpeedDialItem = /** @__PURE__ @class */ (function (_super) {
    __extends$6(SpeedDialItem, _super);
    function SpeedDialItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], SpeedDialItem.prototype, "iconCss", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], SpeedDialItem.prototype, "id", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], SpeedDialItem.prototype, "text", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], SpeedDialItem.prototype, "title", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], SpeedDialItem.prototype, "disabled", void 0);
    return SpeedDialItem;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));
/**
 * The SpeedDial component that appears in front of all the contents of the page and displays list of action buttons on click which is an extended version of FAB.
 * The button of speed dial is positioned in relative to a view port of browser or the .
 * It can display a menu of related actions or a custom content popupTemplate>.
 *
 */
var SpeedDial = /** @__PURE__ @class */ (function (_super) {
    __extends$6(SpeedDial, _super);
    /**
    * Constructor for creating the widget
    *
    * @param  {SpeedDialModel} options - Specifies the floating action button model
    * @param  {string|HTMLButtonElement} element - Specifies the target element
    */
    function SpeedDial(options, element) {
        var _this = _super.call(this, options, element) || this;
        _this.isMenuOpen = false;
        _this.isClock = true;
        _this.isVertical = true;
        _this.isControl = false;
        _this.focusedIndex = -1;
        return _this;
    }
    /**
     * Initialize the control rendering
     *
     * @returns {void}
     * @private
     */
    SpeedDial.prototype.render = function () {
        this.initialize();
    };
    SpeedDial.prototype.preRender = function () {
        this.keyConfigs = {
            space: 'space',
            enter: 'enter',
            end: 'end',
            home: 'home',
            moveDown: 'downarrow',
            moveLeft: 'leftarrow',
            moveRight: 'rightarrow',
            moveUp: 'uparrow',
            esc: 'escape',
        };
        this.validateDirection();
    };
    /**
     * Get the properties to be maintained in the persisted state.
     *
     * @returns {string} - Persist data
     */
    SpeedDial.prototype.getPersistData = function () {
        return this.addOnPersist([]);
    };
    /**
     * Get component name.
     *
     * @returns {string} - Module name
     * @private
     */
    SpeedDial.prototype.getModuleName = function () {
        return 'speed-dial';
    };
    SpeedDial.prototype.initialize = function () {
        if (!this.element.id) {
            this.element.id = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getUniqueID)('e-' + this.getModuleName());
        }
        this.fab = new Fab({
            content: this.content,
            cssClass: this.cssClass ? (SPEEDDIAL + ' ' + this.cssClass) : SPEEDDIAL,
            disabled: this.disabled,
            enablePersistence: this.enablePersistence,
            enableRtl: this.enableRtl,
            iconCss: this.openIconCss,
            iconPosition: this.iconPosition,
            position: this.position,
            target: this.target,
            visible: this.visible,
        });
        this.fab.appendTo(this.element);
        if ((this.items.length > 0) || this.popupTemplate)
            this.createPopup();
        this.wireEvents();
    };
    SpeedDial.prototype.wireEvents = function () {
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(window, 'resize', this.resizeHandler, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document.body, 'click', this.bodyClickHandler, this);
        this.opensOnHover ? this.wireFabHover() : this.wireFabClick();
    };
    SpeedDial.prototype.wirePopupEvents = function () {
        this.removeRippleEffect = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.rippleEffect)(this.popupEle, { selector: '.' + SDLIICON });
        this.keyboardModule = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.KeyboardEvents(this.element, {
            keyAction: this.keyActionHandler.bind(this),
            keyConfigs: this.keyConfigs,
            eventName: 'keydown'
        });
        this.popupKeyboardModule = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.KeyboardEvents(this.popupEle, {
            keyAction: this.popupKeyActionHandler.bind(this),
            keyConfigs: { esc: 'escape' },
            eventName: 'keydown'
        });
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.popupEle, 'click', this.popupClick, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.popupEle, 'mouseleave', this.popupMouseLeaveHandle, this);
    };
    SpeedDial.prototype.wireFabClick = function () {
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.fab.element, 'click', this.fabClick, this);
    };
    SpeedDial.prototype.wireFabHover = function () {
        this.popupEle.classList.add(HOVERSD);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.fab.element, 'mouseover', this.mouseOverHandle, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'mouseleave', this.mouseLeaveHandle, this);
    };
    SpeedDial.prototype.createPopup = function () {
        var className = SDPOPUP + ' ' + SDHIDDEN;
        className = this.enableRtl ? className + ' ' + RTLCLASS : className;
        className = this.cssClass ? className + ' ' + this.cssClass : className;
        this.popupEle = this.createElement('div', {
            className: className,
            id: this.element.id + '_popup'
        });
        this.element.insertAdjacentElement('afterend', this.popupEle);
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.element, { 'aria-expanded': 'false', 'aria-haspopup': 'true', 'aria-controls': this.popupEle.id });
        this.setPopupContent();
        if (this.modal)
            this.createOverlay();
        this.checkTarget();
        this.setPositionProps();
        this.wirePopupEvents();
    };
    SpeedDial.prototype.createOverlay = function () {
        this.overlayEle = this.createElement('div', {
            id: this.element.id + '_overlay',
            className: (SDOVERLAY + (this.isMenuOpen ? '' : ' ' + SDHIDDEN) + ' ' + this.cssClass).trim(),
        });
        this.element.insertAdjacentElement('beforebegin', this.overlayEle);
    };
    SpeedDial.prototype.popupClick = function (e) {
        this.isControl = true;
    };
    //Checks and closes the speed dial if the click happened outside this speed dial.
    SpeedDial.prototype.bodyClickHandler = function (e) {
        if (this.isControl) {
            this.isControl = false;
            return;
        }
        if (this.isMenuOpen)
            this.hidePopupEle(e);
    };
    SpeedDial.prototype.fabClick = function (e) {
        this.isControl = true;
        this.isMenuOpen ? this.hidePopupEle(e) : this.showPopupEle(e);
    };
    SpeedDial.prototype.setPopupContent = function () {
        this.popupEle.classList.remove(RADIALSD, LINEARSD, TEMPLATESD);
        if (!this.popupTemplate) {
            this.popupEle.classList.add((this.mode === 'Radial') ? RADIALSD : LINEARSD);
            this.createUl();
            this.createItems();
        }
        else {
            this.popupEle.classList.add(TEMPLATESD);
            this.appendTemplate();
        }
    };
    SpeedDial.prototype.appendTemplate = function () {
        var templateContainer = this.createElement('div', { className: SDTEMPLATECONTAINER });
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.append)([templateContainer], this.popupEle);
        var templateFunction = this.getTemplateString(this.popupTemplate);
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.append)(templateFunction({}, this, 'fabPopupTemplate', (this.element.id + 'popupTemplate'), this.isStringTemplate), templateContainer);
    };
    SpeedDial.prototype.getTemplateString = function (template) {
        var stringContent = '';
        try {
            var tempEle = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)(template);
            if (tempEle) {
                //Return innerHTML incase of jsrenderer script else outerHTML
                stringContent = tempEle.tagName === 'SCRIPT' ? tempEle.innerHTML : tempEle.outerHTML;
            }
            else {
                stringContent = template;
            }
        }
        catch (e) {
            stringContent = template;
        }
        return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(stringContent);
    };
    SpeedDial.prototype.updatePopupTemplate = function () {
        if (this.popupEle) {
            if (this.popupEle.querySelector('.' + SDLI)) {
                this.clearItems;
                this.popupEle.classList.remove(RADIALSD, LINEARSD);
                this.popupEle.classList.add(TEMPLATESD);
            }
            while (this.popupEle.firstElementChild) {
                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.popupEle.firstElementChild);
            }
            this.setPopupContent();
            this.updatePositionProperties();
        }
        else {
            this.createPopup();
        }
    };
    SpeedDial.prototype.createUl = function () {
        var popupUlEle = this.createElement('ul', {
            className: SDUL,
            id: this.element.id + '_ul',
            attrs: { 'role': 'menu' }
        });
        this.popupEle.appendChild(popupUlEle);
    };
    SpeedDial.prototype.createItems = function () {
        var _this = this;
        this.focusedIndex = -1;
        var ul = this.popupEle.querySelector('.' + SDUL);
        var _loop_1 = function (index) {
            var item = this_1.items[index];
            var li = this_1.createElement('li', {
                className: SDLI + ' ' + SDHIDDEN,
                id: item.id ? item.id : (this_1.element.id + '_li_' + index),
                attrs: { 'role': 'menuitem' }
            });
            if (item.text) {
                li.setAttribute('aria-label', item.text);
            }
            if (this_1.itemTemplate) {
                var templateFunction = this_1.getTemplateString(this_1.itemTemplate);
                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.append)(templateFunction(item, this_1, 'fabItemTemplate', (this_1.element.id + 'itemTemplate'), this_1.isStringTemplate), li);
            }
            else {
                if (item.iconCss) {
                    var iconSpan = this_1.createElement('span', {
                        className: SDLIICON + ' ' + item.iconCss,
                    });
                    li.appendChild(iconSpan);
                }
                if (item.text) {
                    var textSpan = this_1.createElement('span', {
                        className: SDLITEXT,
                    });
                    textSpan.innerText = item.text;
                    li.appendChild(textSpan);
                    if (!item.iconCss)
                        li.classList.add(SDLITEXTONLY);
                }
            }
            if (item.disabled) {
                li.classList.add(DISABLED$2);
                li.setAttribute('aria-disabled', 'true');
            }
            else {
                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(li, 'click', function (e) { return _this.triggerItemClick(e, item); }, this_1);
            }
            if (item.title) {
                li.setAttribute('title', item.title);
            }
            var eventArgs = { element: li, item: item };
            this_1.trigger('beforeItemRender', eventArgs, function (args) {
                ul.appendChild(args.element);
            });
        };
        var this_1 = this;
        for (var index = 0; index < this.items.length; index++) {
            _loop_1(index);
        }
    };
    SpeedDial.prototype.setRTL = function () {
        this.enableRtl ? this.popupEle.classList.add(RTLCLASS) : this.popupEle.classList.remove(RTLCLASS);
        this.clearHorizontalPosition();
        (!(this.popupTemplate || (this.mode === 'Radial'))) ? this.setLinearHorizontalPosition() : this.setHorizontalPosition();
    };
    SpeedDial.prototype.checkTarget = function () {
        this.isFixed = true;
        if (this.target) {
            this.targetEle = (typeof this.target === 'string') ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)(this.target) : this.target;
            if (this.targetEle) {
                this.targetEle.appendChild(this.element);
                this.isFixed = false;
            }
        }
        if (this.isFixed) {
            if (this.popupEle)
                this.popupEle.classList.add(FIXEDSD);
            if (this.overlayEle)
                this.overlayEle.classList.add(FIXEDSD);
        }
        else {
            if (this.popupEle)
                this.popupEle.classList.remove(FIXEDSD);
            if (this.overlayEle)
                this.overlayEle.classList.remove(FIXEDSD);
        }
    };
    SpeedDial.prototype.setVisibility = function (val) {
        this.setProperties({ visible: val }, true);
        this.fab.setProperties({ visible: val });
    };
    SpeedDial.prototype.popupMouseLeaveHandle = function (e) {
        var target = e.relatedTarget;
        if (this.opensOnHover && !(target.classList.contains(SPEEDDIAL) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.' + SPEEDDIAL))) {
            this.hidePopupEle(e);
        }
    };
    SpeedDial.prototype.mouseOverHandle = function (e) {
        this.showPopupEle(e);
    };
    SpeedDial.prototype.mouseLeaveHandle = function (e) {
        var target = e.relatedTarget;
        if (!(target.classList.contains(SDPOPUP) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.' + SDPOPUP))) {
            this.hidePopupEle(e);
        }
    };
    SpeedDial.prototype.popupKeyActionHandler = function (e) {
        switch (e.action) {
            case 'esc':
                this.hidePopupEle(e);
                break;
        }
    };
    SpeedDial.prototype.keyActionHandler = function (e) {
        switch (e.action) {
            case 'enter':
            case 'space':
                e.preventDefault();
                if (this.isMenuOpen) {
                    if (this.focusedIndex !== -1) {
                        this.triggerItemClick(e, this.items[this.focusedIndex]);
                    }
                    else {
                        this.hidePopupEle(e);
                    }
                }
                else {
                    this.showPopupEle(e);
                }
                break;
            case 'esc':
                this.hidePopupEle(e);
                break;
            default:
                if (this.popupTemplate || !this.isMenuOpen)
                    break;
                switch (e.action) {
                    case 'end':
                        this.focusLastElement();
                        break;
                    case 'home':
                        this.focusFirstElement();
                        break;
                    case 'moveRight':
                        (this.mode === 'Radial') ? this.focusLeftRightElement(false) : this.focusLinearElement(false);
                        break;
                    case 'moveDown':
                        (this.mode === 'Radial') ? this.focusUpDownElement(false) : this.focusLinearElement(false);
                        break;
                    case 'moveLeft':
                        (this.mode === 'Radial') ? this.focusLeftRightElement(true) : this.focusLinearElement(true);
                        break;
                    case 'moveUp':
                        (this.mode === 'Radial') ? this.focusUpDownElement(true) : this.focusLinearElement(true);
                        break;
                }
                break;
        }
    };
    SpeedDial.prototype.focusFirstElement = function () {
        var ele = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)('.' + SDLI, this.popupEle);
        var index = 0;
        while (ele[index].classList.contains(DISABLED$2)) {
            index++;
            if (index > (ele.length - 1))
                return;
        }
        this.setFocus(index, ele[index]);
    };
    SpeedDial.prototype.focusLastElement = function () {
        var ele = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)('.' + SDLI, this.popupEle);
        var index = ele.length - 1;
        while (ele[index].classList.contains(DISABLED$2)) {
            index--;
            if (index < 0)
                return;
        }
        this.setFocus(index, ele[index]);
    };
    /*Linear*/
    SpeedDial.prototype.focusLinearElement = function (isLeftUp) {
        if (this.focusedIndex === -1) {
            this.focusFirstElement();
            return;
        }
        var isReversed = this.popupEle.classList.contains(SDVERTICALBOTTOM) || this.popupEle.classList.contains(SDHORIZONTALRIGHT);
        /* Elements will be in reverse (RTL) order for these classes are present.
        Reversed  and Down or right is previous.
        Not reversed and Up or left is previous.
        ((isReversed && !isLeftUp)||(!isReversed && isLeftUp)) ==> isReversed!==isLeftUp */
        (isReversed !== isLeftUp) ? this.focusPrevElement() : this.focusNextElement();
    };
    /*Radial*/
    SpeedDial.prototype.focusLeftRightElement = function (isLeft) {
        if (this.focusedIndex === -1) {
            this.focusFirstElement();
            return;
        }
        /*radialTop position  and left + anticlock or right + clock is previous
        other positions and right + anticlock or left + clock is previous
        ((isLeft && !this.isClock)||(!isLeft && this.isClock)) ==> isLeft!==this.isClock */
        var isradialTop = ['TopLeft', 'TopCenter', 'TopRight', 'MiddleLeft'].indexOf(this.getPosition()) !== -1;
        ((isradialTop && (isLeft !== this.isClock)) || (!isradialTop && (isLeft === this.isClock))) ? this.focusPrevElement() : this.focusNextElement();
    };
    /*Radial*/
    SpeedDial.prototype.focusUpDownElement = function (isUp) {
        if (this.focusedIndex === -1) {
            this.focusFirstElement();
            return;
        }
        /*radialRight position  and up + anticlock or down + clock is previous
        other positions and down + anticlock or up + clock is previous
        ((isUp && !this.isClock)||(!isUp && this.isClock)) ==> isUp!==this.isClock */
        var isradialRight = ['TopRight', 'MiddleRight', 'BottomRight', 'BottomCenter'].indexOf(this.getPosition()) !== -1;
        ((isradialRight && (isUp !== this.isClock)) || (!isradialRight && (isUp === this.isClock))) ? this.focusPrevElement() : this.focusNextElement();
    };
    SpeedDial.prototype.focusPrevElement = function () {
        var ele = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)('.' + SDLI, this.popupEle);
        var index = this.focusedIndex;
        do {
            index--;
            if (index < 0) {
                this.setFocus(-1);
                return;
            }
        } while (ele[index].classList.contains(DISABLED$2));
        this.setFocus(index, ele[index]);
    };
    SpeedDial.prototype.focusNextElement = function () {
        var ele = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)('.' + SDLI, this.popupEle);
        var index = this.focusedIndex;
        do {
            index++;
            if (index > (ele.length - 1))
                return;
        } while (ele[index].classList.contains(DISABLED$2));
        this.setFocus(index, ele[index]);
    };
    SpeedDial.prototype.setFocus = function (index, ele) {
        this.removeFocus();
        if (ele)
            ele.classList.add(SDACTIVELI);
        this.focusedIndex = index;
    };
    SpeedDial.prototype.removeFocus = function () {
        var preEle = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('.' + SDACTIVELI, this.popupEle);
        if (preEle)
            preEle.classList.remove(SDACTIVELI);
    };
    SpeedDial.prototype.getPosition = function () {
        return (typeof (this.position) === "string") ? this.position : FabPosition[this.position];
    };
    SpeedDial.prototype.updatePositionProperties = function () {
        this.hidePopupEle();
        this.clearPosition();
        this.validateDirection();
        this.setPositionProps();
    };
    SpeedDial.prototype.setPositionProps = function () {
        if (this.popupTemplate) {
            this.setPosition();
        }
        else if ((this.mode === 'Radial')) {
            this.setRadialPosition();
            this.setPosition();
        }
        else {
            this.setLinearPosition();
            this.setMaxSize();
        }
    };
    SpeedDial.prototype.validateDirection = function () {
        switch (this.direction) {
            case 'Up':
                this.actualLinDirection = (topPosition.indexOf(this.getPosition()) != -1) ? 'Auto' : 'Up';
                break;
            case 'Down':
                this.actualLinDirection = (bottomPosition.indexOf(this.getPosition()) != -1) ? 'Auto' : 'Down';
                break;
            case 'Right':
                this.actualLinDirection = (rightPosition.indexOf(this.getPosition()) != -1) ? 'Auto' : 'Right';
                break;
            case 'Left':
                this.actualLinDirection = (leftPosition.indexOf(this.getPosition()) != -1) ? 'Auto' : 'Left';
                break;
            case 'Auto':
            default:
                this.actualLinDirection = 'Auto';
                break;
        }
        this.isVertical = !((this.actualLinDirection === "Left") || (this.actualLinDirection === "Right"));
    };
    SpeedDial.prototype.setMaxSize = function () {
        var top = this.element.offsetTop;
        var left = this.element.offsetLeft;
        var bottom = (this.isFixed ? window.innerHeight : this.targetEle.clientHeight) - this.element.offsetTop - this.element.offsetHeight;
        var right = (this.isFixed ? window.innerWidth : this.targetEle.clientWidth) - this.element.offsetLeft - this.element.offsetWidth;
        var limit = 0;
        var popupUlEle = this.popupEle.querySelector("." + SDUL);
        if (this.isVertical) {
            limit = ((this.actualLinDirection === 'Up') || ((this.actualLinDirection === 'Auto') && (topPosition.indexOf(this.getPosition()) === -1))) ? top : bottom;
            if (limit < popupUlEle.offsetHeight) {
                this.popupEle.classList.add(SDOVERFLOW, SDVERTOVERFLOW);
                popupUlEle.style.setProperty(SDOVERFLOWLIMIT, limit + 'px');
            }
        }
        else {
            limit = (this.direction === 'Right') ? right : left;
            if (limit < popupUlEle.offsetWidth) {
                this.popupEle.classList.add(SDOVERFLOW, SDHORZOVERFLOW);
                popupUlEle.style.setProperty(SDOVERFLOWLIMIT, limit + 'px');
            }
        }
    };
    SpeedDial.prototype.setLinearPosition = function () {
        var vertDist = 0;
        //Check whether the position value should be in top
        var isTop = (this.actualLinDirection === 'Down') || ((this.actualLinDirection === 'Auto') && (topPosition.indexOf(this.getPosition()) !== -1)) ||
            (!this.isVertical && (bottomPosition.indexOf(this.getPosition()) === -1));
        if (isTop) {
            vertDist = this.element.offsetTop + (this.isVertical ? this.element.offsetHeight : 0);
            if (!this.isVertical)
                this.popupEle.classList.add(SDHORIZONTALTOP);
        }
        else {
            vertDist = this.isFixed ? window.innerHeight : this.targetEle.clientHeight;
            vertDist = (vertDist - this.element.offsetTop - (this.isVertical ? 0 : this.element.offsetHeight));
            if (this.isVertical)
                this.popupEle.classList.add(SDVERTICALBOTTOM);
        }
        this.popupEle.classList.add(isTop ? SDTOP : SDBOTTOM);
        this.popupEle.style.setProperty(SDVERTDIST, vertDist + 'px');
        this.setLinearHorizontalPosition();
    };
    SpeedDial.prototype.setLinearHorizontalPosition = function () {
        //Check whether the position value should be in left
        if ((this.actualLinDirection === 'Right') || (this.isVertical && (rightPosition.indexOf(this.getPosition()) === -1))) {
            this.enableRtl ? this.setRight() : this.setLeft(); //reverse the direction when RTL enabled
            if (!this.isVertical)
                this.popupEle.classList.add(SDHORIZONTALLEFT);
        }
        else {
            this.enableRtl ? this.setLeft() : this.setRight(); //reverse the direction when RTL enabled
            this.popupEle.classList.add(this.isVertical ? SDVERTICALRIGHT : SDHORIZONTALRIGHT);
        }
    };
    SpeedDial.prototype.setLeft = function () {
        var horzDist = this.element.offsetLeft + (this.isVertical ? 0 : this.element.offsetWidth);
        this.popupEle.style.setProperty(SDHORZDIST, horzDist + 'px');
        this.popupEle.classList.add(SDLEFT);
    };
    SpeedDial.prototype.setRight = function () {
        var horzDist = this.isFixed ? window.innerWidth : this.targetEle.clientWidth;
        horzDist = (horzDist - this.element.offsetLeft - (this.isVertical ? this.element.offsetWidth : 0));
        this.popupEle.style.setProperty(SDHORZDIST, horzDist + 'px');
        this.popupEle.classList.add(SDRIGHT);
    };
    SpeedDial.prototype.setPosition = function () {
        //Check for middle Position
        if (['MiddleLeft', 'MiddleRight', 'MiddleCenter'].indexOf(this.getPosition()) !== -1) {
            this.popupEle.classList.add(SDMIDDLE);
            var yoffset = ((this.isFixed ? window.innerHeight : this.targetEle.clientHeight) - this.popupEle.offsetHeight) / 2;
            this.popupEle.style.setProperty(SDVERTDIST, yoffset + 'px');
        }
        (bottomPosition.indexOf(this.getPosition()) === -1) ? this.popupEle.classList.add(SDTOP) : this.popupEle.classList.add(SDBOTTOM);
        this.setHorizontalPosition();
    };
    SpeedDial.prototype.setHorizontalPosition = function () {
        //Check for Center Position
        if (['TopCenter', 'BottomCenter', 'MiddleCenter'].indexOf(this.getPosition()) !== -1) {
            this.popupEle.classList.add(SDCENTER);
            var xoffset = ((this.isFixed ? window.innerWidth : this.targetEle.clientWidth) - this.popupEle.offsetWidth) / 2;
            this.popupEle.style.setProperty(SDHORZDIST, xoffset + 'px');
        }
        var isRight = rightPosition.indexOf(this.getPosition()) !== -1;
        (!(this.enableRtl || isRight) || (this.enableRtl && isRight)) ? this.popupEle.classList.add(SDLEFT) : this.popupEle.classList.add(SDRIGHT);
    };
    SpeedDial.prototype.setRadialPosition = function () {
        this.setRadialCorner();
        var range = this.getActualRange();
        this.isClock = range.direction === 'Clockwise';
        var offset = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(range.offset);
        var li = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)('.' + SDLI, this.popupEle);
        this.popupEle.style.setProperty(SDRADICALOFFSET, offset);
        this.popupEle.style.setProperty(SDRADICALMINHEIGHT, li[0].offsetHeight + 'px');
        this.popupEle.style.setProperty(SDRADICALMINWIDTH, li[0].offsetWidth + 'px');
        var availableAngle = Math.abs(range.endAngle - range.startAngle);
        //Start and end will be same for Middle Center position, hence available angle will 0 or 360.
        var gaps = ((availableAngle === 360) || (availableAngle === 0)) ? li.length : li.length - 1;
        var perAngle = availableAngle / gaps;
        for (var i = 0; i < li.length; i++) {
            var ele = li[i];
            var angle = this.isClock ? (range.startAngle + (perAngle * i)) : (range.startAngle - (perAngle * i));
            angle = angle % 360; // removing the Zerp crossing changes.
            ele.style.setProperty(SDRADICALANGLE, angle + 'deg');
        }
    };
    SpeedDial.prototype.setRadialCorner = function () {
        //topLeftPosition
        if (['TopLeft', 'TopCenter', 'MiddleLeft', 'MiddleCenter'].indexOf(this.getPosition()) !== -1) {
            this.popupEle.classList.add(this.enableRtl ? SDTOPRIGHT : SDTOPLEFT);
        }
        //topRightPosition
        if (['TopRight', 'TopCenter', 'MiddleRight', 'MiddleCenter'].indexOf(this.getPosition()) !== -1) {
            this.popupEle.classList.add(this.enableRtl ? SDTOPLEFT : SDTOPRIGHT);
        }
        //bottpmLeftPosition
        if (['BottomLeft', 'BottomCenter', 'MiddleLeft', 'MiddleCenter'].indexOf(this.getPosition()) !== -1) {
            this.popupEle.classList.add(this.enableRtl ? SDBOTTOMRIGHT : SDBOTTOMLEFT);
        }
        //bottomRightPosition
        if (['BottomRight', 'BottomCenter', 'MiddleRight', 'MiddleCenter'].indexOf(this.getPosition()) !== -1) {
            this.popupEle.classList.add(this.enableRtl ? SDBOTTOMLEFT : SDBOTTOMRIGHT);
        }
    };
    // 0,360 is at right, 90 is at Bottom, 180 is at left, 270 is at top 
    SpeedDial.prototype.getActualRange = function () {
        var range = { offset: this.radialSettings.offset };
        var start = this.radialSettings.startAngle;
        var end = this.radialSettings.endAngle;
        var isClockwise;
        switch (this.getPosition()) {
            case 'TopLeft':
            case 'TopRight':
                // Switch Left and Right for RTL mode.
                if (('TopLeft' == this.getPosition()) != this.enableRtl) {
                    //TopLeft
                    isClockwise = this.radialSettings.direction === 'Clockwise';
                    this.checkAngleRange(start, end, range, isClockwise, 0, 90, false);
                }
                else {
                    //TopRight
                    isClockwise = this.radialSettings.direction !== 'AntiClockwise';
                    this.checkAngleRange(start, end, range, isClockwise, 90, 180, false);
                }
                break;
            case 'TopCenter':
                isClockwise = this.radialSettings.direction === 'Clockwise';
                this.checkAngleRange(start, end, range, isClockwise, 0, 180, false);
                break;
            case 'MiddleLeft':
            case 'MiddleRight':
                // Switch Left and Right for RTL mode.
                if (('MiddleLeft' == this.getPosition()) != this.enableRtl) {
                    //MiddleLeft
                    isClockwise = this.radialSettings.direction === 'Clockwise';
                    /**Replace the value if not defined or greater than 360 or less than 0 or between 91 and  269*/
                    start = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(start) || (start < 0) || (start > 360) || ((start > 90) && (start < 270))) ? (isClockwise ? 270 : 90) : start;
                    end = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(end) || (end < 0) || (end > 360) || ((end > 90) && (end < 270))) ? (isClockwise ? 90 : 270) : end;
                    /**update for Zero Crossing */
                    start = start < 91 ? start + 360 : start;
                    end = end < 91 ? end + 360 : end;
                    var switchVal = (isClockwise && (end < start)) || (!isClockwise && (end > start));
                    range.startAngle = switchVal ? end : start;
                    range.endAngle = switchVal ? start : end;
                }
                else {
                    //MiddleRight
                    isClockwise = this.radialSettings.direction !== 'AntiClockwise';
                    this.checkAngleRange(start, end, range, isClockwise, 90, 270, false);
                }
                break;
            case 'MiddleCenter':
                isClockwise = this.radialSettings.direction !== 'AntiClockwise';
                /**Replace the value if not defined or greater than 360 or less than 0 */
                start = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(start) || (start < 0) || (start > 360)) ? (isClockwise ? 0 : 360) : start;
                end = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(end) || (end < 0) || (end > 360)) ? (isClockwise ? 360 : 0) : end;
                /**update for Zero Crossing */
                range.startAngle = (!isClockwise && (start <= end)) ? (start + 360) : start;
                range.endAngle = (isClockwise && (end <= start)) ? (end + 360) : end;
                break;
            case 'BottomLeft':
            case 'BottomRight':
                // Switch Left and Right for RTL mode.
                if (('BottomLeft' == this.getPosition()) != this.enableRtl) {
                    //BottomLeft
                    isClockwise = this.radialSettings.direction === 'Clockwise';
                    this.checkAngleRange(start, end, range, isClockwise, 270, 360, true);
                }
                else {
                    //BottomRight
                    isClockwise = this.radialSettings.direction !== 'AntiClockwise';
                    this.checkAngleRange(start, end, range, isClockwise, 180, 270, true);
                }
                break;
            case 'BottomCenter':
                isClockwise = this.radialSettings.direction !== 'AntiClockwise';
                this.checkAngleRange(start, end, range, isClockwise, 180, 360, true);
                break;
        }
        range.direction = isClockwise ? 'Clockwise' : 'AntiClockwise';
        return range;
    };
    SpeedDial.prototype.checkAngleRange = function (start, end, range, isClockwise, min, max, check0) {
        start = this.checkAngle(start, isClockwise, min, max, check0);
        end = this.checkAngle(end, !isClockwise, min, max, check0);
        /**Switch the values if both are values are in the range but not as per direction*/
        var switchVal = (isClockwise && (end < start)) || (!isClockwise && (end > start));
        range.startAngle = switchVal ? end : start;
        range.endAngle = switchVal ? start : end;
    };
    SpeedDial.prototype.checkAngle = function (val, isStart, min, max, check0) {
        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(val) || (val < 0) || (val > 360)) {
            return isStart ? min : max;
        }
        else {
            val = check0 ? ((val === 0) ? 360 : val) : ((val === 360) ? 0 : val);
            /**check whether the value is in the range if not replace them */
            return ((val >= min) && (val <= max)) ? val : isStart ? min : max;
        }
    };
    SpeedDial.prototype.clearPosition = function () {
        this.popupEle.style.removeProperty(SDRADICALOFFSET);
        this.popupEle.style.removeProperty(SDRADICALMINHEIGHT);
        this.popupEle.style.removeProperty(SDRADICALMINWIDTH);
        this.popupEle.classList.remove(SDTOPLEFT, SDTOPRIGHT, SDBOTTOMLEFT, SDBOTTOMRIGHT);
        this.popupEle.classList.remove(SDTOP, SDBOTTOM, SDMIDDLE);
        this.popupEle.classList.remove(SDHORIZONTALTOP, SDVERTICALBOTTOM);
        this.popupEle.style.removeProperty(SDVERTDIST);
        this.clearHorizontalPosition();
        this.clearOverflow();
    };
    SpeedDial.prototype.clearHorizontalPosition = function () {
        this.popupEle.style.removeProperty(SDHORZDIST);
        this.popupEle.classList.remove(SDRIGHT, SDLEFT, SDCENTER);
        this.popupEle.classList.remove(SDVERTICALRIGHT, SDHORIZONTALLEFT, SDHORIZONTALRIGHT);
    };
    SpeedDial.prototype.clearOverflow = function () {
        this.popupEle.classList.remove(SDOVERFLOW, SDVERTOVERFLOW, SDHORZOVERFLOW);
        this.popupEle.style.removeProperty(SDOVERFLOWLIMIT);
    };
    SpeedDial.prototype.hidePopupEle = function (e) {
        var _this = this;
        if (!this.popupEle || !this.isMenuOpen)
            return;
        var eventArgs = { element: this.popupEle, event: e, cancel: false };
        this.trigger('beforeClose', eventArgs, function (args) {
            if (args.cancel)
                return;
            if (_this.animation.effect !== 'None') {
                var closeAnimation_1 = {
                    name: (_this.animation.effect + 'Out'),
                    timingFunction: 'easeOut'
                };
                var ele_1 = _this.popupTemplate ? [_this.popupEle.firstElementChild] : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)("." + SDLI, _this.popupEle);
                var timeOutInterval_1 = _this.animation.duration / (ele_1.length + 1);
                closeAnimation_1.duration = 2 * timeOutInterval_1;
                /* To keep the animation smooth, start the animation of the second element when animation first element is half completed */
                var animateElement_1 = function (curIndex) {
                    closeAnimation_1.delay = (curIndex === ele_1.length - 1) ? _this.animation.delay : 0;
                    closeAnimation_1.begin = function () { (curIndex === ele_1.length - 1) ? _this.startHide() : ''; };
                    closeAnimation_1.end = function () {
                        ele_1[curIndex].classList.add(SDHIDDEN);
                        (curIndex === 0) ? _this.endHide() : '';
                    };
                    new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Animation(closeAnimation_1).animate(ele_1[curIndex]);
                    if (curIndex !== 0) {
                        var index_1 = curIndex - 1;
                        setTimeout(function () {
                            animateElement_1(index_1);
                        }, timeOutInterval_1);
                    }
                };
                animateElement_1(ele_1.length - 1);
            }
            else {
                _this.startHide();
                if (!_this.popupTemplate) {
                    var ele = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)("." + SDLI, _this.popupEle);
                    ele.forEach(function (element) { element.classList.add(SDHIDDEN); });
                }
                _this.endHide();
            }
        });
    };
    SpeedDial.prototype.startHide = function () {
        this.element.setAttribute('aria-expanded', 'false');
        this.removeFocus();
        this.isMenuOpen = false;
    };
    SpeedDial.prototype.endHide = function () {
        this.fab.setProperties({ iconCss: this.openIconCss });
        this.popupEle.classList.add(SDHIDDEN);
        if (this.popupTemplate)
            this.setVisibility(true);
        this.toggleOverlay();
        if (this.popupTemplate) {
            this.popupEle.removeAttribute('tabindex');
        }
        this.trigger('onClose', { element: this.popupEle });
    };
    SpeedDial.prototype.showPopupEle = function (e) {
        var _this = this;
        if (!this.popupEle || this.isMenuOpen)
            return;
        var eventArgs = { element: this.popupEle, event: e, cancel: false };
        this.trigger('beforeOpen', eventArgs, function (args) {
            if (args.cancel)
                return;
            if (_this.animation.effect !== 'None') {
                var openAnimation_1 = {
                    name: (_this.animation.effect + 'In'),
                    timingFunction: 'easeIn'
                };
                var ele_2 = _this.popupTemplate ? [_this.popupEle.firstElementChild] : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)("." + SDLI, _this.popupEle);
                var timeOutInterval_2 = _this.animation.duration / (ele_2.length + 1);
                openAnimation_1.duration = 2 * timeOutInterval_2;
                /* To keep the animation smooth, start the animation of the second element when animation first element is half completed */
                var animateElement_2 = function (curIndex) {
                    openAnimation_1.delay = (curIndex === 0) ? _this.animation.delay : 0;
                    openAnimation_1.begin = function () {
                        (curIndex === 0) ? _this.startShow() : '';
                        ele_2[curIndex].classList.remove(SDHIDDEN);
                    };
                    openAnimation_1.end = function () { (curIndex === ele_2.length - 1) ? _this.endShow() : ''; };
                    new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Animation(openAnimation_1).animate(ele_2[curIndex]);
                    if (curIndex !== ele_2.length - 1) {
                        var index_2 = curIndex + 1;
                        setTimeout(function () {
                            animateElement_2(index_2);
                        }, timeOutInterval_2);
                    }
                };
                animateElement_2(0);
            }
            else {
                _this.startShow();
                if (!_this.popupTemplate) {
                    var ele = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)("." + SDLI, _this.popupEle);
                    ele.forEach(function (element) { element.classList.remove(SDHIDDEN); });
                }
                _this.endShow();
            }
        });
    };
    SpeedDial.prototype.startShow = function () {
        this.element.setAttribute('aria-expanded', 'true');
        this.isMenuOpen = true;
        this.toggleOverlay();
        this.popupEle.classList.remove(SDHIDDEN);
        if (this.popupTemplate)
            this.setVisibility(false);
    };
    SpeedDial.prototype.endShow = function () {
        if (this.closeIconCss)
            this.fab.setProperties({ iconCss: this.closeIconCss });
        if (this.popupTemplate) {
            this.popupEle.setAttribute('tabindex', '1');
            this.popupEle.focus();
        }
        this.trigger('onOpen', { element: this.popupEle });
    };
    SpeedDial.prototype.toggleOverlay = function () {
        if (!this.overlayEle)
            return;
        this.isMenuOpen ? this.overlayEle.classList.remove(SDHIDDEN) : this.overlayEle.classList.add(SDHIDDEN);
    };
    SpeedDial.prototype.removeOverlayEle = function () {
        if (!this.overlayEle)
            return;
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.overlayEle);
        this.overlayEle = undefined;
    };
    SpeedDial.prototype.updatePopupItems = function () {
        if (this.popupEle) {
            this.hidePopupEle();
            this.clearItems();
            this.createItems();
            this.updatePositionProperties();
        }
        else {
            this.createPopup();
        }
    };
    SpeedDial.prototype.handleResize = function (e) {
        if (!this.popupEle)
            return;
        this.hidePopupEle(e);
        this.clearOverflow();
        this.setPositionProps();
    };
    SpeedDial.prototype.triggerItemClick = function (e, item) {
        var target = e.target;
        target = target.classList.contains(SDLI) ? target : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.' + SDLI);
        var eventArgs = { element: target, item: item, event: e };
        this.trigger('clicked', eventArgs);
        this.hidePopupEle(e);
    };
    /**
     * Opens the SpeedDial popup to display to display the speed dial items or the popupTemplate.
     *
     * @private
     */
    SpeedDial.prototype.show = function () {
        this.showPopupEle();
    };
    /**
     * Closes the SpeedDial popup.
     *
     */
    SpeedDial.prototype.hide = function () {
        this.hidePopupEle();
    };
    /**
     * Refreshes the button position of speed dial. You can call this method to re-position button when the target is resized.
     *
     */
    SpeedDial.prototype.refreshPosition = function () {
        this.fab.refreshPosition();
        this.resizeHandler();
    };
    SpeedDial.prototype.resizeHandler = function (e) {
        this.handleResize(e);
    };
    SpeedDial.prototype.clearItems = function () {
        var li = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)('.' + SDLI, this.popupEle);
        li.forEach(function (element) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(element);
        });
    };
    SpeedDial.prototype.unwireEvents = function () {
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(window, 'resize', this.resizeHandler);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document.body, 'click', this.bodyClickHandler);
        this.opensOnHover ? this.unwireFabHover() : this.unwireFabClick();
    };
    SpeedDial.prototype.unwireFabClick = function () {
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.fab.element, 'click', this.fabClick);
    };
    SpeedDial.prototype.unwireFabHover = function () {
        this.popupEle.classList.remove(HOVERSD);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.fab.element, 'mouseover', this.mouseOverHandle);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'mouseleave', this.mouseLeaveHandle);
    };
    SpeedDial.prototype.unwirePopupEvents = function () {
        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isRippleEnabled) {
            this.removeRippleEffect();
        }
        this.keyboardModule.destroy();
        this.popupKeyboardModule.destroy();
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.popupEle, 'click', this.popupClick);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.popupEle, 'mouseleave', this.popupMouseLeaveHandle);
    };
    SpeedDial.prototype.destroy = function () {
        var _this = this;
        _super.prototype.destroy.call(this);
        this.unwireEvents();
        ['aria-expanded', 'aria-haspopup', 'aria-controls'].forEach(function (attr) {
            _this.element.removeAttribute(attr);
        });
        if (this.popupEle) {
            this.unwirePopupEvents();
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.popupEle);
            this.popupEle = undefined;
        }
        this.removeOverlayEle();
        this.fab.destroy();
        this.fab = undefined;
    };
    /**
     * Called internally if any of the property value changed.
     *
     * @param  {SpeedDialModel} newProp - Specifies new properties
     * @param  {SpeedDialModel} oldProp - Specifies old properties
     * @returns {void}
     * @private
     */
    SpeedDial.prototype.onPropertyChanged = function (newProp, oldProp) {
        var fabProplist = ['content', 'cssClass', 'disabled', 'enablePersistence', 'enableRtl', 'iconPosition', 'position', 'target', 'template', 'title', 'visible'];
        var fabModel = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, newProp);
        for (var _i = 0, _a = Object.keys(fabModel); _i < _a.length; _i++) {
            var prop = _a[_i];
            if ((fabProplist).indexOf(prop) < 0) {
                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.deleteObject)(fabModel, prop);
            }
        }
        this.fab.setProperties(fabModel);
        for (var _b = 0, _c = Object.keys(newProp); _b < _c.length; _b++) {
            var prop = _c[_b];
            switch (prop) {
                case 'cssClass':
                    if (!this.popupEle)
                        break;
                    var ele = this.overlayEle ? [this.popupEle, this.overlayEle] : [this.popupEle];
                    if (oldProp.cssClass) {
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(ele, oldProp.cssClass.split(' '));
                    }
                    if (newProp.cssClass) {
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)(ele, newProp.cssClass.split(' '));
                    }
                    break;
                case 'visible':
                case 'disabled':
                    this.hide();
                    break;
                case 'enableRtl':
                    if (!this.popupEle)
                        break;
                    this.setRTL();
                    break;
                case 'openIconCss':
                    if (!this.isMenuOpen) {
                        this.fab.setProperties({ iconCss: this.openIconCss });
                    }
                    break;
                case 'closeIconCss':
                    if (this.isMenuOpen)
                        this.fab.setProperties({ iconCss: this.closeIconCss });
                    break;
                case 'position':
                    if (!this.popupEle)
                        break;
                    this.updatePositionProperties();
                    break;
                case 'direction':
                    if (!this.popupEle || this.popupTemplate)
                        break;
                    this.updatePositionProperties();
                    break;
                case 'popupTemplate':
                    this.updatePopupTemplate();
                    break;
                case 'target':
                    this.hidePopupEle();
                    this.checkTarget();
                    if (this.overlayEle)
                        this.element.insertAdjacentElement('beforebegin', this.overlayEle);
                    if (!this.popupEle)
                        break;
                    this.element.insertAdjacentElement('afterend', this.popupEle);
                    this.updatePositionProperties();
                    break;
                case 'items':
                case 'itemTemplate':
                    if (this.popupTemplate)
                        break;
                    this.updatePopupItems();
                    break;
                case 'modal':
                    if (newProp.modal) {
                        this.createOverlay();
                    }
                    else {
                        this.removeOverlayEle();
                    }
                    break;
                case 'mode':
                    if (!this.popupEle || this.popupTemplate)
                        break;
                    this.popupEle.classList.remove(RADIALSD, LINEARSD);
                    this.popupEle.classList.add((this.mode === 'Radial') ? RADIALSD : LINEARSD);
                    this.updatePositionProperties();
                    break;
                case 'radialSettings':
                    if (this.popupEle && (this.mode === 'Radial') && !this.popupTemplate)
                        this.setRadialPosition();
                    break;
                case 'opensOnHover':
                    !this.opensOnHover ? this.unwireFabHover() : this.unwireFabClick();
                    this.opensOnHover ? this.wireFabHover() : this.wireFabClick();
                    break;
            }
        }
    };
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, SpeedDialAnimationSettings)
    ], SpeedDial.prototype, "animation", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], SpeedDial.prototype, "content", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], SpeedDial.prototype, "closeIconCss", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], SpeedDial.prototype, "cssClass", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Auto')
    ], SpeedDial.prototype, "direction", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], SpeedDial.prototype, "disabled", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Left')
    ], SpeedDial.prototype, "iconPosition", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Collection)([], SpeedDialItem)
    ], SpeedDial.prototype, "items", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], SpeedDial.prototype, "itemTemplate", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Linear')
    ], SpeedDial.prototype, "mode", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], SpeedDial.prototype, "openIconCss", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], SpeedDial.prototype, "opensOnHover", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('BottomRight')
    ], SpeedDial.prototype, "position", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], SpeedDial.prototype, "modal", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], SpeedDial.prototype, "popupTemplate", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, RadialSettings)
    ], SpeedDial.prototype, "radialSettings", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], SpeedDial.prototype, "target", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)
    ], SpeedDial.prototype, "visible", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], SpeedDial.prototype, "beforeClose", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], SpeedDial.prototype, "beforeItemRender", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], SpeedDial.prototype, "beforeOpen", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], SpeedDial.prototype, "created", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], SpeedDial.prototype, "clicked", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], SpeedDial.prototype, "onClose", void 0);
    __decorate$6([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], SpeedDial.prototype, "onOpen", void 0);
    SpeedDial = __decorate$6([
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges
    ], SpeedDial);
    return SpeedDial;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));

/**
 * SpeedDial modules
 */

/**
 * Button all modules
 */




/***/ }),

/***/ 36627:
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-notifications/node_modules/@syncfusion/ej2-popups/dist/es6/ej2-popups.es5.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Animation": () => (/* binding */ Animation$1),
/* harmony export */   "AnimationSettings": () => (/* binding */ AnimationSettings),
/* harmony export */   "ButtonProps": () => (/* binding */ ButtonProps),
/* harmony export */   "Dialog": () => (/* binding */ Dialog),
/* harmony export */   "DialogUtility": () => (/* binding */ DialogUtility),
/* harmony export */   "Popup": () => (/* binding */ Popup),
/* harmony export */   "PositionData": () => (/* binding */ PositionData),
/* harmony export */   "Spinner": () => (/* binding */ Spinner),
/* harmony export */   "Tooltip": () => (/* binding */ Tooltip),
/* harmony export */   "calculatePosition": () => (/* binding */ calculatePosition),
/* harmony export */   "calculateRelativeBasedPosition": () => (/* binding */ calculateRelativeBasedPosition),
/* harmony export */   "createSpinner": () => (/* binding */ createSpinner),
/* harmony export */   "fit": () => (/* binding */ fit),
/* harmony export */   "flip": () => (/* binding */ flip),
/* harmony export */   "getMaxZindex": () => (/* binding */ getMaxZindex),
/* harmony export */   "getScrollableParent": () => (/* binding */ getScrollableParent),
/* harmony export */   "getZindexPartial": () => (/* binding */ getZindexPartial),
/* harmony export */   "hideSpinner": () => (/* binding */ hideSpinner),
/* harmony export */   "isCollide": () => (/* binding */ isCollide),
/* harmony export */   "setSpinner": () => (/* binding */ setSpinner),
/* harmony export */   "showSpinner": () => (/* binding */ showSpinner)
/* harmony export */ });
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ 32610);
/* harmony import */ var _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-buttons */ 61334);



/**
 * Position library
 */
var elementRect;
var popupRect;
var element;
var parentDocument;
var fixedParent = false;
/**
 *
 * @param {HTMLElement} anchor - specifies the element
 * @param {HTMLElement} element - specifies the element
 * @returns {OffsetPosition} - returns the value
 */
function calculateRelativeBasedPosition(anchor, element) {
    var fixedElement = false;
    var anchorPos = { left: 0, top: 0 };
    var tempAnchor = anchor;
    if (!anchor || !element) {
        return anchorPos;
    }
    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.offsetParent) && element.style.position === 'fixed') {
        fixedElement = true;
    }
    while ((element.offsetParent || fixedElement) && anchor && element.offsetParent !== anchor) {
        anchorPos.left += anchor.offsetLeft;
        anchorPos.top += anchor.offsetTop;
        anchor = anchor.offsetParent;
    }
    anchor = tempAnchor;
    while ((element.offsetParent || fixedElement) && anchor && element.offsetParent !== anchor) {
        anchorPos.left -= anchor.scrollLeft;
        anchorPos.top -= anchor.scrollTop;
        anchor = anchor.parentElement;
    }
    return anchorPos;
}
/**
 *
 * @param {Element} currentElement - specifies the element
 * @param {string} positionX - specifies the position
 * @param {string} positionY - specifies the position
 * @param {boolean} parentElement - specifies the boolean
 * @param {ClientRect} targetValues - specifies the client
 * @returns {OffsetPosition} - returns the position
 */
function calculatePosition(currentElement, positionX, positionY, parentElement, targetValues) {
    //eslint-disable-next-line
    popupRect = undefined;
    popupRect = targetValues;
    fixedParent = parentElement ? true : false;
    if (!currentElement) {
        return { left: 0, top: 0 };
    }
    if (!positionX) {
        positionX = 'left';
    }
    if (!positionY) {
        positionY = 'top';
    }
    parentDocument = currentElement.ownerDocument;
    element = currentElement;
    var pos = { left: 0, top: 0 };
    return updatePosition(positionX.toLowerCase(), positionY.toLowerCase(), pos);
}
/**
 *
 * @param {number} value - specifies the number
 * @param {OffsetPosition} pos - specifies the position
 * @returns {void}
 */
function setPosx(value, pos) {
    pos.left = value;
}
/**
 *
 * @param {number} value - specifies the number
 * @param {OffsetPosition} pos - specifies the position
 * @returns {void}
 */
function setPosy(value, pos) {
    pos.top = value;
}
/**
 *
 * @param {string} posX - specifies the position
 * @param {string} posY - specifies the position
 * @param {OffsetPosition} pos - specifies the position
 * @returns {OffsetPosition} - returns the postion
 */
function updatePosition(posX, posY, pos) {
    elementRect = element.getBoundingClientRect();
    switch (posY + posX) {
        case 'topcenter':
            setPosx(getElementHCenter(), pos);
            setPosy(getElementTop(), pos);
            break;
        case 'topright':
            setPosx(getElementRight(), pos);
            setPosy(getElementTop(), pos);
            break;
        case 'centercenter':
            setPosx(getElementHCenter(), pos);
            setPosy(getElementVCenter(), pos);
            break;
        case 'centerright':
            setPosx(getElementRight(), pos);
            setPosy(getElementVCenter(), pos);
            break;
        case 'centerleft':
            setPosx(getElementLeft(), pos);
            setPosy(getElementVCenter(), pos);
            break;
        case 'bottomcenter':
            setPosx(getElementHCenter(), pos);
            setPosy(getElementBottom(), pos);
            break;
        case 'bottomright':
            setPosx(getElementRight(), pos);
            setPosy(getElementBottom(), pos);
            break;
        case 'bottomleft':
            setPosx(getElementLeft(), pos);
            setPosy(getElementBottom(), pos);
            break;
        default:
        case 'topleft':
            setPosx(getElementLeft(), pos);
            setPosy(getElementTop(), pos);
            break;
    }
    return pos;
}
/**
 * @returns {number} - specifies the number value
 */
function getBodyScrollTop() {
    return parentDocument.documentElement.scrollTop || parentDocument.body.scrollTop;
}
/**
 * @returns {number} - specifies the number value
 */
function getBodyScrollLeft() {
    return parentDocument.documentElement.scrollLeft || parentDocument.body.scrollLeft;
}
/**
 * @returns {number} - specifies the number value
 */
function getElementBottom() {
    return fixedParent ? elementRect.bottom : elementRect.bottom + getBodyScrollTop();
}
/**
 * @returns {number} - specifies the number value
 */
function getElementVCenter() {
    return getElementTop() + (elementRect.height / 2);
}
/**
 * @returns {number} - specifies the number value
 */
function getElementTop() {
    return fixedParent ? elementRect.top : elementRect.top + getBodyScrollTop();
}
/**
 * @returns {number} - specifies the number value
 */
function getElementLeft() {
    return elementRect.left + getBodyScrollLeft();
}
/**
 * @returns {number} - specifies the number value
 */
function getElementRight() {
    var popupWidth = (element && element.classList.contains('e-date-range-wrapper')) ? (popupRect ? popupRect.width : 0) :
        (popupRect && (elementRect.width >= popupRect.width) ? popupRect.width : 0);
    return elementRect.right + getBodyScrollLeft() - popupWidth;
}
/**
 * @returns {number} - specifies the number value
 */
function getElementHCenter() {
    return getElementLeft() + (elementRect.width / 2);
}

/**
 * Collision module.
 */
var parentDocument$1;
var targetContainer;
/**
 *
 * @param {HTMLElement} element - specifies the element
 * @param {HTMLElement} viewPortElement - specifies the element
 * @param {CollisionCoordinates} axis - specifies the collision coordinates
 * @param {OffsetPosition} position - specifies the position
 * @returns {void}
 */
function fit(element, viewPortElement, axis, position) {
    if (viewPortElement === void 0) { viewPortElement = null; }
    if (axis === void 0) { axis = { X: false, Y: false }; }
    if (!axis.Y && !axis.X) {
        return { left: 0, top: 0 };
    }
    var elemData = element.getBoundingClientRect();
    targetContainer = viewPortElement;
    parentDocument$1 = element.ownerDocument;
    if (!position) {
        position = calculatePosition(element, 'left', 'top');
    }
    if (axis.X) {
        var containerWidth = targetContainer ? getTargetContainerWidth() : getViewPortWidth();
        var containerLeft = ContainerLeft();
        var containerRight = ContainerRight();
        var overLeft = containerLeft - position.left;
        var overRight = position.left + elemData.width - containerRight;
        if (elemData.width > containerWidth) {
            if (overLeft > 0 && overRight <= 0) {
                position.left = containerRight - elemData.width;
            }
            else if (overRight > 0 && overLeft <= 0) {
                position.left = containerLeft;
            }
            else {
                position.left = overLeft > overRight ? (containerRight - elemData.width) : containerLeft;
            }
        }
        else if (overLeft > 0) {
            position.left += overLeft;
        }
        else if (overRight > 0) {
            position.left -= overRight;
        }
    }
    if (axis.Y) {
        var containerHeight = targetContainer ? getTargetContainerHeight() : getViewPortHeight();
        var containerTop = ContainerTop();
        var containerBottom = ContainerBottom();
        var overTop = containerTop - position.top;
        var overBottom = position.top + elemData.height - containerBottom;
        if (elemData.height > containerHeight) {
            if (overTop > 0 && overBottom <= 0) {
                position.top = containerBottom - elemData.height;
            }
            else if (overBottom > 0 && overTop <= 0) {
                position.top = containerTop;
            }
            else {
                position.top = overTop > overBottom ? (containerBottom - elemData.height) : containerTop;
            }
        }
        else if (overTop > 0) {
            position.top += overTop;
        }
        else if (overBottom > 0) {
            position.top -= overBottom;
        }
    }
    return position;
}
/**
 *
 * @param {HTMLElement} element - specifies the html element
 * @param {HTMLElement} viewPortElement - specifies the html element
 * @param {number} x - specifies the number
 * @param {number} y - specifies the number
 * @returns {string[]} - returns the string value
 */
function isCollide(element, viewPortElement, x, y) {
    if (viewPortElement === void 0) { viewPortElement = null; }
    var elemOffset = calculatePosition(element, 'left', 'top');
    if (x) {
        elemOffset.left = x;
    }
    if (y) {
        elemOffset.top = y;
    }
    var data = [];
    targetContainer = viewPortElement;
    parentDocument$1 = element.ownerDocument;
    var elementRect = element.getBoundingClientRect();
    var top = elemOffset.top;
    var left = elemOffset.left;
    var right = elemOffset.left + elementRect.width;
    var bottom = elemOffset.top + elementRect.height;
    // eslint-disable-next-line
    var yAxis = topCollideCheck(top, bottom);
    var xAxis = leftCollideCheck(left, right);
    if (yAxis.topSide) {
        data.push('top');
    }
    if (xAxis.rightSide) {
        data.push('right');
    }
    if (xAxis.leftSide) {
        data.push('left');
    }
    if (yAxis.bottomSide) {
        data.push('bottom');
    }
    return data;
}
/**
 *
 * @param {HTMLElement} element - specifies the element
 * @param {HTMLElement} target - specifies the element
 * @param {number} offsetX - specifies the number
 * @param {number} offsetY - specifies the number
 * @param {string} positionX - specifies the string value
 * @param {string} positionY - specifies the string value
 * @param {HTMLElement} viewPortElement - specifies the element
 * @param {CollisionCoordinates} axis - specifies the collision axis
 * @param {boolean} fixedParent - specifies the boolean
 * @returns {void}
 */
function flip(element, target, offsetX, offsetY, positionX, positionY, viewPortElement, 
/* eslint-disable */
axis, fixedParent) {
    if (viewPortElement === void 0) { viewPortElement = null; }
    if (axis === void 0) { axis = { X: true, Y: true }; }
    if (!target || !element || !positionX || !positionY || (!axis.X && !axis.Y)) {
        return;
    }
    // eslint-disable-next-line
    var tEdge = { TL: null,
        TR: null,
        BL: null,
        BR: null
    }, eEdge = {
        TL: null,
        TR: null,
        BL: null,
        BR: null
        /* eslint-enable */
    };
    var elementRect;
    if (window.getComputedStyle(element).display === 'none') {
        var oldVisibility = element.style.visibility;
        element.style.visibility = 'hidden';
        element.style.display = 'block';
        elementRect = element.getBoundingClientRect();
        element.style.removeProperty('display');
        element.style.visibility = oldVisibility;
    }
    else {
        elementRect = element.getBoundingClientRect();
    }
    var pos = {
        posX: positionX, posY: positionY, offsetX: offsetX, offsetY: offsetY, position: { left: 0, top: 0 }
    };
    targetContainer = viewPortElement;
    parentDocument$1 = target.ownerDocument;
    updateElementData(target, tEdge, pos, fixedParent, elementRect);
    setPosition(eEdge, pos, elementRect);
    if (axis.X) {
        leftFlip(target, eEdge, tEdge, pos, elementRect, true);
    }
    if (axis.Y && tEdge.TL.top > -1) {
        topFlip(target, eEdge, tEdge, pos, elementRect, true);
    }
    setPopup(element, pos, elementRect);
}
/**
 *
 * @param {HTMLElement} element - specifies the element
 * @param {PositionLocation} pos - specifies the location
 * @param {ClientRect} elementRect - specifies the client rect
 * @returns {void}
 */
function setPopup(element, pos, elementRect) {
    //eslint-disable-next-line
    var left = 0, top = 0;
    if (element.offsetParent != null
        && (getComputedStyle(element.offsetParent).position === 'absolute' ||
            getComputedStyle(element.offsetParent).position === 'relative')) {
        var data = calculatePosition(element.offsetParent, 'left', 'top', false, elementRect);
        left = data.left;
        top = data.top;
    }
    element.style.top = (pos.position.top + pos.offsetY - (top)) + 'px';
    element.style.left = (pos.position.left + pos.offsetX - (left)) + 'px';
}
/**
 *
 * @param {HTMLElement} target - specifies the element
 * @param {EdgeOffset} edge - specifies the offset
 * @param {PositionLocation} pos - specifies theloaction
 * @param {boolean} fixedParent - specifies the boolean
 * @param {ClientRect} elementRect - specifies the client rect
 * @returns {void}
 */
function updateElementData(target, edge, pos, fixedParent, elementRect) {
    pos.position = calculatePosition(target, pos.posX, pos.posY, fixedParent, elementRect);
    edge.TL = calculatePosition(target, 'left', 'top', fixedParent, elementRect);
    edge.TR = calculatePosition(target, 'right', 'top', fixedParent, elementRect);
    edge.BR = calculatePosition(target, 'left', 'bottom', fixedParent, elementRect);
    edge.BL = calculatePosition(target, 'right', 'bottom', fixedParent, elementRect);
}
/**
 *
 * @param {EdgeOffset} eStatus - specifies the status
 * @param {PositionLocation} pos - specifies the location
 * @param {ClientRect} elementRect - specifies the client
 * @returns {void}
 */
function setPosition(eStatus, pos, elementRect) {
    eStatus.TL = { top: pos.position.top + pos.offsetY, left: pos.position.left + pos.offsetX };
    eStatus.TR = { top: eStatus.TL.top, left: eStatus.TL.left + elementRect.width };
    eStatus.BL = { top: eStatus.TL.top + elementRect.height,
        left: eStatus.TL.left };
    eStatus.BR = { top: eStatus.TL.top + elementRect.height,
        left: eStatus.TL.left + elementRect.width };
}
/**
 *
 * @param {number} left - specifies the  number
 * @param {number} right - specifies the number
 * @returns {LeftCorners} - returns the value
 */
function leftCollideCheck(left, right) {
    //eslint-disable-next-line
    var leftSide = false, rightSide = false;
    if (((left - getBodyScrollLeft$1()) < ContainerLeft())) {
        leftSide = true;
    }
    if (right > ContainerRight()) {
        rightSide = true;
    }
    return { leftSide: leftSide, rightSide: rightSide };
}
/**
 *
 * @param {HTMLElement} target - specifies the element
 * @param {EdgeOffset} edge - specifes the element
 * @param {EdgeOffset} tEdge - specifies the edge offset
 * @param {PositionLocation} pos - specifes the location
 * @param {ClientRect} elementRect - specifies the client
 * @param {boolean} deepCheck - specifies the boolean value
 * @returns {void}
 */
function leftFlip(target, edge, tEdge, pos, elementRect, deepCheck) {
    var collideSide = leftCollideCheck(edge.TL.left, edge.TR.left);
    if ((tEdge.TL.left - getBodyScrollLeft$1()) <= ContainerLeft()) {
        collideSide.leftSide = false;
    }
    if (tEdge.TR.left > ContainerRight()) {
        collideSide.rightSide = false;
    }
    if ((collideSide.leftSide && !collideSide.rightSide) || (!collideSide.leftSide && collideSide.rightSide)) {
        if (pos.posX === 'right') {
            pos.posX = 'left';
        }
        else {
            pos.posX = 'right';
        }
        pos.offsetX = pos.offsetX + elementRect.width;
        pos.offsetX = -1 * pos.offsetX;
        pos.position = calculatePosition(target, pos.posX, pos.posY, false);
        setPosition(edge, pos, elementRect);
        if (deepCheck) {
            leftFlip(target, edge, tEdge, pos, elementRect, false);
        }
    }
}
/**
 *
 * @param {HTMLElement} target - specifies the element
 * @param {EdgeOffset} edge - specifies the offset
 * @param {EdgeOffset} tEdge - specifies the offset
 * @param {PositionLocation} pos - specifies the location
 * @param {ClientRect} elementRect - specifies the client rect
 * @param {boolean} deepCheck - specifies the boolean
 * @returns {void}
 */
function topFlip(target, edge, tEdge, pos, elementRect, deepCheck) {
    var collideSide = topCollideCheck(edge.TL.top, edge.BL.top);
    if ((tEdge.TL.top - getBodyScrollTop$1()) <= ContainerTop()) {
        collideSide.topSide = false;
    }
    if (tEdge.BL.top >= ContainerBottom() && target.getBoundingClientRect().bottom < window.innerHeight) {
        collideSide.bottomSide = false;
    }
    if ((collideSide.topSide && !collideSide.bottomSide) || (!collideSide.topSide && collideSide.bottomSide)) {
        if (pos.posY === 'top') {
            pos.posY = 'bottom';
        }
        else {
            pos.posY = 'top';
        }
        pos.offsetY = pos.offsetY + elementRect.height;
        pos.offsetY = -1 * pos.offsetY;
        pos.position = calculatePosition(target, pos.posX, pos.posY, false, elementRect);
        setPosition(edge, pos, elementRect);
        if (deepCheck) {
            topFlip(target, edge, tEdge, pos, elementRect, false);
        }
    }
}
/**
 *
 * @param {number} top - specifies the number
 * @param {number} bottom - specifies the number
 * @returns {TopCorners} - retyrns the value
 */
function topCollideCheck(top, bottom) {
    //eslint-disable-next-line
    var topSide = false, bottomSide = false;
    if ((top - getBodyScrollTop$1()) < ContainerTop()) {
        topSide = true;
    }
    if (bottom > ContainerBottom()) {
        bottomSide = true;
    }
    return { topSide: topSide, bottomSide: bottomSide };
}
/**
 * @returns {void}
 */
function getTargetContainerWidth() {
    return targetContainer.getBoundingClientRect().width;
}
/**
 * @returns {void}
 */
function getTargetContainerHeight() {
    return targetContainer.getBoundingClientRect().height;
}
/**
 * @returns {void}
 */
function getTargetContainerLeft() {
    return targetContainer.getBoundingClientRect().left;
}
/**
 * @returns {void}
 */
function getTargetContainerTop() {
    return targetContainer.getBoundingClientRect().top;
}
//eslint-disable-next-line
function ContainerTop() {
    if (targetContainer) {
        return getTargetContainerTop();
    }
    return 0;
}
//eslint-disable-next-line
function ContainerLeft() {
    if (targetContainer) {
        return getTargetContainerLeft();
    }
    return 0;
}
//eslint-disable-next-line
function ContainerRight() {
    if (targetContainer) {
        return (getBodyScrollLeft$1() + getTargetContainerLeft() + getTargetContainerWidth());
    }
    return (getBodyScrollLeft$1() + getViewPortWidth());
}
//eslint-disable-next-line
function ContainerBottom() {
    if (targetContainer) {
        return (getBodyScrollTop$1() + getTargetContainerTop() + getTargetContainerHeight());
    }
    return (getBodyScrollTop$1() + getViewPortHeight());
}
/**
 * @returns {void}
 */
function getBodyScrollTop$1() {
    // if(targetContainer)
    //     return targetContainer.scrollTop;
    return parentDocument$1.documentElement.scrollTop || parentDocument$1.body.scrollTop;
}
/**
 * @returns {void}
 */
function getBodyScrollLeft$1() {
    // if(targetContainer)
    //     return targetContainer.scrollLeft;
    return parentDocument$1.documentElement.scrollLeft || parentDocument$1.body.scrollLeft;
}
/**
 * @returns {void}
 */
function getViewPortHeight() {
    return window.innerHeight;
}
/**
 * @returns {void}
 */
function getViewPortWidth() {
    var windowWidth = window.innerWidth;
    var documentReact = document.documentElement.getBoundingClientRect();
    var offsetWidth = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(document.documentElement)) ? 0 : documentReact.width;
    return windowWidth - (windowWidth - offsetWidth);
}

var __extends = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = ( false) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
/**
 * Specifies the offset position values.
 */
var PositionData = /** @__PURE__ @class */ (function (_super) {
    __extends(PositionData, _super);
    function PositionData() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('left')
    ], PositionData.prototype, "X", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('top')
    ], PositionData.prototype, "Y", void 0);
    return PositionData;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));
// don't use space in classNames
var CLASSNAMES = {
    ROOT: 'e-popup',
    RTL: 'e-rtl',
    OPEN: 'e-popup-open',
    CLOSE: 'e-popup-close'
};
/**
 * Represents the Popup Component
 * ```html
 * <div id="popup" style="position:absolute;height:100px;width:100px;">
 * <div style="margin:35px 25px;">Popup Content</div></div>
 * ```
 * ```typescript
 * <script>
 *   var popupObj = new Popup();
 *   popupObj.appendTo("#popup");
 * </script>
 * ```
 */
var Popup = /** @__PURE__ @class */ (function (_super) {
    __extends(Popup, _super);
    function Popup(element, options) {
        return _super.call(this, options, element) || this;
    }
    /**
     * Called internally if any of the property value changed.
     *
     * @param {PopupModel} newProp - specifies the new property
     * @param {PopupModel} oldProp - specifies the old property
     * @private
     * @returns {void}
     */
    Popup.prototype.onPropertyChanged = function (newProp, oldProp) {
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'width':
                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.element, { 'width': (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(newProp.width) });
                    break;
                case 'height':
                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.element, { 'height': (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(newProp.height) });
                    break;
                case 'zIndex':
                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.element, { 'zIndex': newProp.zIndex });
                    break;
                case 'enableRtl':
                    this.setEnableRtl();
                    break;
                case 'position':
                case 'relateTo':
                    this.refreshPosition();
                    break;
                case 'offsetX':
                    // eslint-disable-next-line
                    var x = newProp.offsetX - oldProp.offsetX;
                    this.element.style.left = (parseInt(this.element.style.left, 10) + (x)).toString() + 'px';
                    break;
                case 'offsetY':
                    // eslint-disable-next-line
                    var y = newProp.offsetY - oldProp.offsetY;
                    this.element.style.top = (parseInt(this.element.style.top, 10) + (y)).toString() + 'px';
                    break;
                case 'content':
                    this.setContent();
                    break;
                case 'actionOnScroll':
                    if (newProp.actionOnScroll !== 'none') {
                        this.wireScrollEvents();
                    }
                    else {
                        this.unwireScrollEvents();
                    }
                    break;
            }
        }
    };
    /**
     * gets the Component module name.
     *
     * @returns {void}
     * @private
     */
    Popup.prototype.getModuleName = function () {
        return 'popup';
    };
    /**
     * To resolve if any collision occurs.
     *
     * @returns {void}
     */
    Popup.prototype.resolveCollision = function () {
        this.checkCollision();
    };
    /**
     * gets the persisted state properties of the Component.
     *
     * @returns {void}
     */
    Popup.prototype.getPersistData = function () {
        return this.addOnPersist([]);
    };
    /**
     * To destroy the control.
     *
     * @returns {void}
     */
    Popup.prototype.destroy = function () {
        this.element.classList.remove(CLASSNAMES.ROOT, CLASSNAMES.RTL, CLASSNAMES.OPEN, CLASSNAMES.CLOSE);
        if (this.element.classList.contains('e-popup-open')) {
            this.unwireEvents();
        }
        _super.prototype.destroy.call(this);
    };
    /**
     * To Initialize the control rendering
     *
     * @returns {void}
     * @private
     */
    Popup.prototype.render = function () {
        this.element.classList.add(CLASSNAMES.ROOT);
        var styles = {};
        if (this.zIndex !== 1000) {
            styles.zIndex = this.zIndex;
        }
        if (this.width !== 'auto') {
            styles.width = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.width);
        }
        if (this.height !== 'auto') {
            styles.height = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.height);
        }
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.element, styles);
        this.fixedParent = false;
        this.setEnableRtl();
        this.setContent();
    };
    Popup.prototype.wireEvents = function () {
        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(window, 'orientationchange', this.orientationOnChange, this);
        }
        if (this.actionOnScroll !== 'none') {
            this.wireScrollEvents();
        }
    };
    Popup.prototype.wireScrollEvents = function () {
        if (this.getRelateToElement()) {
            for (var _i = 0, _a = this.getScrollableParent(this.getRelateToElement()); _i < _a.length; _i++) {
                var parent_1 = _a[_i];
                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(parent_1, 'scroll', this.scrollRefresh, this);
            }
        }
    };
    Popup.prototype.unwireEvents = function () {
        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(window, 'orientationchange', this.orientationOnChange);
        }
        if (this.actionOnScroll !== 'none') {
            this.unwireScrollEvents();
        }
    };
    Popup.prototype.unwireScrollEvents = function () {
        if (this.getRelateToElement()) {
            for (var _i = 0, _a = this.getScrollableParent(this.getRelateToElement()); _i < _a.length; _i++) {
                var parent_2 = _a[_i];
                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(parent_2, 'scroll', this.scrollRefresh);
            }
        }
    };
    Popup.prototype.getRelateToElement = function () {
        var relateToElement = this.relateTo === '' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.relateTo) ?
            document.body : this.relateTo;
        this.setProperties({ relateTo: relateToElement }, true);
        return ((typeof this.relateTo) === 'string') ?
            document.querySelector(this.relateTo) : this.relateTo;
    };
    Popup.prototype.scrollRefresh = function (e) {
        if (this.actionOnScroll === 'reposition') {
            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element) && !(this.element.offsetParent === e.target ||
                (this.element.offsetParent && this.element.offsetParent.tagName === 'BODY' &&
                    e.target.parentElement == null))) {
                this.refreshPosition();
            }
        }
        else if (this.actionOnScroll === 'hide') {
            this.hide();
        }
        if (this.actionOnScroll !== 'none') {
            if (this.getRelateToElement()) {
                var targetVisible = this.isElementOnViewport(this.getRelateToElement(), e.target);
                if (!targetVisible && !this.targetInvisibleStatus) {
                    this.trigger('targetExitViewport');
                    this.targetInvisibleStatus = true;
                }
                else if (targetVisible) {
                    this.targetInvisibleStatus = false;
                }
            }
        }
    };
    /**
     * This method is to get the element visibility on viewport when scroll
     * the page. This method will returns true even though 1 px of element
     * part is in visible.
     *
     * @param {HTMLElement} relateToElement - specifies the element
     * @param {HTMLElement} scrollElement - specifies the scroll element
     * @returns {boolean} - retruns the boolean
     */
    // eslint-disable-next-line
    Popup.prototype.isElementOnViewport = function (relateToElement, scrollElement) {
        var scrollParents = this.getScrollableParent(relateToElement);
        for (var parent_3 = 0; parent_3 < scrollParents.length; parent_3++) {
            if (this.isElementVisible(relateToElement, scrollParents[parent_3])) {
                continue;
            }
            else {
                return false;
            }
        }
        return true;
    };
    Popup.prototype.isElementVisible = function (relateToElement, scrollElement) {
        var rect = this.checkGetBoundingClientRect(relateToElement);
        if (!rect.height || !rect.width) {
            return false;
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.checkGetBoundingClientRect(scrollElement))) {
            var parent_4 = scrollElement.getBoundingClientRect();
            return !(rect.bottom < parent_4.top) &&
                (!(rect.bottom > parent_4.bottom) &&
                    (!(rect.right > parent_4.right) &&
                        !(rect.left < parent_4.left)));
        }
        else {
            var win = window;
            var windowView = {
                top: win.scrollY,
                left: win.scrollX,
                right: win.scrollX + win.outerWidth,
                bottom: win.scrollY + win.outerHeight
            };
            var off = calculatePosition(relateToElement);
            var ele = {
                top: off.top,
                left: off.left,
                right: off.left + rect.width,
                bottom: off.top + rect.height
            };
            var elementView = {
                top: windowView.bottom - ele.top,
                left: windowView.right - ele.left,
                bottom: ele.bottom - windowView.top,
                right: ele.right - windowView.left
            };
            return elementView.top > 0
                && elementView.left > 0
                && elementView.right > 0
                && elementView.bottom > 0;
        }
    };
    /**
     * Initialize the event handler
     *
     * @returns {void}
     * @private
     */
    Popup.prototype.preRender = function () {
        //There is no event handler
    };
    Popup.prototype.setEnableRtl = function () {
        this.reposition();
        // eslint-disable-next-line
        this.enableRtl ? this.element.classList.add(CLASSNAMES.RTL) : this.element.classList.remove(CLASSNAMES.RTL);
    };
    Popup.prototype.setContent = function () {
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.content)) {
            this.element.innerHTML = '';
            if (typeof (this.content) === 'string') {
                this.element.textContent = this.content;
            }
            else {
                var relateToElem = this.getRelateToElement();
                // eslint-disable-next-line
                var props = this.content.props;
                if (!relateToElem.classList.contains('e-dropdown-btn') || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(props)) {
                    this.element.appendChild(this.content);
                }
            }
        }
    };
    Popup.prototype.orientationOnChange = function () {
        var _this = this;
        setTimeout(function () {
            _this.refreshPosition();
        }, 200);
    };
    // eslint-disable-next-line
    /**
     * Based on the `relative` element and `offset` values, `Popup` element position will refreshed.
     *
     * @returns {void}
     */
    Popup.prototype.refreshPosition = function (target, collision) {
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(target)) {
            this.checkFixedParent(target);
        }
        this.reposition();
        if (!collision) {
            this.checkCollision();
        }
    };
    Popup.prototype.reposition = function () {
        var pos;
        var position;
        var relateToElement = this.getRelateToElement();
        if (typeof this.position.X === 'number' && typeof this.position.Y === 'number') {
            pos = { left: this.position.X, top: this.position.Y };
        }
        else if ((typeof this.position.X === 'string' && typeof this.position.Y === 'number') ||
            (typeof this.position.X === 'number' && typeof this.position.Y === 'string')) {
            var parentDisplay = void 0;
            var display = this.element.style.display;
            this.element.style.display = 'block';
            if (this.element.classList.contains('e-dlg-modal')) {
                parentDisplay = this.element.parentElement.style.display;
                this.element.parentElement.style.display = 'block';
            }
            position = this.getAnchorPosition(relateToElement, this.element, this.position, this.offsetX, this.offsetY);
            if (typeof this.position.X === 'string') {
                pos = { left: position.left, top: this.position.Y };
            }
            else {
                pos = { left: this.position.X, top: position.top };
            }
            this.element.style.display = display;
            if (this.element.classList.contains('e-dlg-modal')) {
                this.element.parentElement.style.display = parentDisplay;
            }
        }
        else if (relateToElement) {
            var display = this.element.style.display;
            this.element.style.display = 'block';
            pos = this.getAnchorPosition(relateToElement, this.element, this.position, this.offsetX, this.offsetY);
            this.element.style.display = display;
        }
        else {
            pos = { left: 0, top: 0 };
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(pos)) {
            this.element.style.left = pos.left + 'px';
            this.element.style.top = pos.top + 'px';
        }
    };
    Popup.prototype.checkGetBoundingClientRect = function (ele) {
        var eleRect;
        try {
            eleRect = ele.getBoundingClientRect();
            return eleRect;
        }
        catch (error) {
            return null;
        }
    };
    Popup.prototype.getAnchorPosition = function (anchorEle, ele, position, offsetX, offsetY) {
        var eleRect = this.checkGetBoundingClientRect(ele);
        var anchorRect = this.checkGetBoundingClientRect(anchorEle);
        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(eleRect) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(anchorRect)) {
            return null;
        }
        var anchor = anchorEle;
        var anchorPos = { left: 0, top: 0 };
        if (ele.offsetParent && ele.offsetParent.tagName === 'BODY' && anchorEle.tagName === 'BODY') {
            anchorPos = calculatePosition(anchorEle);
        }
        else {
            if ((ele.classList.contains('e-dlg-modal') && anchor.tagName !== 'BODY')) {
                ele = ele.parentElement;
            }
            anchorPos = calculateRelativeBasedPosition(anchor, ele);
        }
        switch (position.X) {
            default:
            case 'left':
                break;
            case 'center':
                if ((ele.classList.contains('e-dlg-modal') && anchor.tagName === 'BODY' && this.targetType === 'container')) {
                    anchorPos.left += (window.innerWidth / 2 - eleRect.width / 2);
                }
                else if (this.targetType === 'container') {
                    anchorPos.left += (anchorRect.width / 2 - eleRect.width / 2);
                }
                else {
                    anchorPos.left += (anchorRect.width / 2);
                }
                break;
            case 'right':
                if ((ele.classList.contains('e-dlg-modal') && anchor.tagName === 'BODY' && this.targetType === 'container')) {
                    anchorPos.left += (window.innerWidth - eleRect.width);
                }
                else if (this.targetType === 'container') {
                    anchorPos.left += (anchorRect.width - eleRect.width);
                }
                else {
                    anchorPos.left += (anchorRect.width);
                }
                break;
        }
        switch (position.Y) {
            default:
            case 'top':
                break;
            case 'center':
                if ((ele.classList.contains('e-dlg-modal') && anchor.tagName === 'BODY' && this.targetType === 'container')) {
                    anchorPos.top += (window.innerHeight / 2 - eleRect.height / 2);
                }
                else if (this.targetType === 'container') {
                    anchorPos.top += (anchorRect.height / 2 - eleRect.height / 2);
                }
                else {
                    anchorPos.top += (anchorRect.height / 2);
                }
                break;
            case 'bottom':
                if ((ele.classList.contains('e-dlg-modal') && anchor.tagName === 'BODY' && this.targetType === 'container')) {
                    anchorPos.top += (window.innerHeight - eleRect.height);
                }
                else if (this.targetType === 'container') {
                    anchorPos.top += (anchorRect.height - eleRect.height);
                }
                else {
                    anchorPos.top += (anchorRect.height);
                }
                break;
        }
        anchorPos.left += offsetX;
        anchorPos.top += offsetY;
        return anchorPos;
    };
    Popup.prototype.callFlip = function (param) {
        var relateToElement = this.getRelateToElement();
        flip(this.element, relateToElement, this.offsetX, this.offsetY, this.position.X, this.position.Y, this.viewPortElement, param, this.fixedParent);
    };
    Popup.prototype.callFit = function (param) {
        if (isCollide(this.element, this.viewPortElement).length !== 0) {
            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.viewPortElement)) {
                var data = fit(this.element, this.viewPortElement, param);
                if (param.X) {
                    this.element.style.left = data.left + 'px';
                }
                if (param.Y) {
                    this.element.style.top = data.top + 'px';
                }
            }
            else {
                var elementRect = this.checkGetBoundingClientRect(this.element);
                var viewPortRect = this.checkGetBoundingClientRect(this.viewPortElement);
                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(elementRect) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(viewPortRect)) {
                    return null;
                }
                if (param && param.Y === true) {
                    if (viewPortRect.top > elementRect.top) {
                        this.element.style.top = '0px';
                    }
                    else if (viewPortRect.bottom < elementRect.bottom) {
                        this.element.style.top = parseInt(this.element.style.top, 10) - (elementRect.bottom - viewPortRect.bottom) + 'px';
                    }
                }
                if (param && param.X === true) {
                    if (viewPortRect.right < elementRect.right) {
                        this.element.style.left = parseInt(this.element.style.left, 10) - (elementRect.right - viewPortRect.right) + 'px';
                    }
                    else if (viewPortRect.left > elementRect.left) {
                        this.element.style.left = parseInt(this.element.style.left, 10) + (viewPortRect.left - elementRect.left) + 'px';
                    }
                }
            }
        }
    };
    Popup.prototype.checkCollision = function () {
        var horz = this.collision.X;
        var vert = this.collision.Y;
        if (horz === 'none' && vert === 'none') {
            return;
        }
        if (horz === 'flip' && vert === 'flip') {
            this.callFlip({ X: true, Y: true });
        }
        else if (horz === 'fit' && vert === 'fit') {
            this.callFit({ X: true, Y: true });
        }
        else {
            if (horz === 'flip') {
                this.callFlip({ X: true, Y: false });
            }
            else if (vert === 'flip') {
                this.callFlip({ Y: true, X: false });
            }
            if (horz === 'fit') {
                this.callFit({ X: true, Y: false });
            }
            else if (vert === 'fit') {
                this.callFit({ X: false, Y: true });
            }
        }
    };
    /**
     * Shows the popup element from screen.
     *
     * @returns {void}
     * @param {AnimationModel} animationOptions - specifies the model
     * @param { HTMLElement } relativeElement - To calculate the zIndex value dynamically.
     */
    Popup.prototype.show = function (animationOptions, relativeElement) {
        var _this = this;
        this.wireEvents();
        if (this.zIndex === 1000 || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(relativeElement)) {
            var zIndexElement = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(relativeElement)) ? this.element : relativeElement;
            this.zIndex = getZindexPartial(zIndexElement);
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.element, { 'zIndex': this.zIndex });
        }
        animationOptions = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(animationOptions) && typeof animationOptions === 'object') ?
            animationOptions : this.showAnimation;
        if (this.collision.X !== 'none' || this.collision.Y !== 'none') {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], CLASSNAMES.CLOSE);
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], CLASSNAMES.OPEN);
            this.checkCollision();
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], CLASSNAMES.OPEN);
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], CLASSNAMES.CLOSE);
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(animationOptions)) {
            animationOptions.begin = function () {
                if (!_this.isDestroyed) {
                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([_this.element], CLASSNAMES.CLOSE);
                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([_this.element], CLASSNAMES.OPEN);
                }
            };
            animationOptions.end = function () {
                if (!_this.isDestroyed) {
                    _this.trigger('open');
                }
            };
            new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Animation(animationOptions).animate(this.element);
        }
        else {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], CLASSNAMES.CLOSE);
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], CLASSNAMES.OPEN);
            this.trigger('open');
        }
    };
    /**
     * Hides the popup element from screen.
     *
     * @param {AnimationModel} animationOptions - To give the animation options.
     * @returns {void}
     */
    Popup.prototype.hide = function (animationOptions) {
        var _this = this;
        animationOptions = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(animationOptions) && typeof animationOptions === 'object') ?
            animationOptions : this.hideAnimation;
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(animationOptions)) {
            animationOptions.end = function () {
                if (!_this.isDestroyed) {
                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([_this.element], CLASSNAMES.OPEN);
                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([_this.element], CLASSNAMES.CLOSE);
                    _this.trigger('close');
                }
            };
            new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Animation(animationOptions).animate(this.element);
        }
        else {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], CLASSNAMES.OPEN);
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], CLASSNAMES.CLOSE);
            this.trigger('close');
        }
        this.unwireEvents();
    };
    /**
     * Gets scrollable parent elements for the given element.
     *
     * @returns {void}
     * @param { HTMLElement } element - Specify the element to get the scrollable parents of it.
     */
    Popup.prototype.getScrollableParent = function (element) {
        this.checkFixedParent(element);
        return getScrollableParent(element, this.fixedParent);
    };
    Popup.prototype.checkFixedParent = function (element) {
        var parent = element.parentElement;
        while (parent && parent.tagName !== 'HTML') {
            var parentStyle = getComputedStyle(parent);
            if (parentStyle.position === 'fixed' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element) && this.element.offsetParent &&
                this.element.offsetParent.tagName === 'BODY') {
                this.element.style.top = window.scrollY > parseInt(this.element.style.top) ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(window.scrollY - parseInt(this.element.style.top))
                    : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(parseInt(this.element.style.top) - window.scrollY);
                this.element.style.position = 'fixed';
                this.fixedParent = true;
            }
            parent = parent.parentElement;
            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element.offsetParent) && parentStyle.position === 'fixed'
                && this.element.style.position === 'fixed') {
                this.fixedParent = true;
            }
        }
    };
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('auto')
    ], Popup.prototype, "height", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('auto')
    ], Popup.prototype, "width", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)
    ], Popup.prototype, "content", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('container')
    ], Popup.prototype, "targetType", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)
    ], Popup.prototype, "viewPortElement", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)({ X: 'none', Y: 'none' })
    ], Popup.prototype, "collision", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], Popup.prototype, "relateTo", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, PositionData)
    ], Popup.prototype, "position", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)
    ], Popup.prototype, "offsetX", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)
    ], Popup.prototype, "offsetY", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(1000)
    ], Popup.prototype, "zIndex", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], Popup.prototype, "enableRtl", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('reposition')
    ], Popup.prototype, "actionOnScroll", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)
    ], Popup.prototype, "showAnimation", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)
    ], Popup.prototype, "hideAnimation", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Popup.prototype, "open", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Popup.prototype, "close", void 0);
    __decorate([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Popup.prototype, "targetExitViewport", void 0);
    Popup = __decorate([
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges
    ], Popup);
    return Popup;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));
/**
 * Gets scrollable parent elements for the given element.
 *
 * @param { HTMLElement } element - Specify the element to get the scrollable parents of it.
 * @param {boolean} fixedParent - specifies the parent element
 * @private
 * @returns {void}
 */
function getScrollableParent(element, fixedParent) {
    var eleStyle = getComputedStyle(element);
    var scrollParents = [];
    var overflowRegex = /(auto|scroll)/;
    var parent = element.parentElement;
    while (parent && parent.tagName !== 'HTML') {
        var parentStyle = getComputedStyle(parent);
        if (!(eleStyle.position === 'absolute' && parentStyle.position === 'static')
            && overflowRegex.test(parentStyle.overflow + parentStyle.overflowY + parentStyle.overflowX)) {
            scrollParents.push(parent);
        }
        parent = parent.parentElement;
    }
    if (!fixedParent) {
        scrollParents.push(document);
    }
    return scrollParents;
}
/**
 * Gets the maximum z-index of the given element.
 *
 * @returns {void}
 * @param { HTMLElement } element - Specify the element to get the maximum z-index of it.
 * @private
 */
function getZindexPartial(element) {
    // upto body traversal
    var parent = element.parentElement;
    var parentZindex = [];
    while (parent) {
        if (parent.tagName !== 'BODY') {
            var index = document.defaultView.getComputedStyle(parent, null).getPropertyValue('z-index');
            var position = document.defaultView.getComputedStyle(parent, null).getPropertyValue('position');
            if (index !== 'auto' && position !== 'static') {
                parentZindex.push(index);
            }
            parent = parent.parentElement;
        }
        else {
            break;
        }
    }
    var childrenZindex = [];
    for (var i = 0; i < document.body.children.length; i++) {
        if (!element.isEqualNode(document.body.children[i])) {
            var index = document.defaultView.getComputedStyle(document.body.children[i], null).getPropertyValue('z-index');
            var position = document.defaultView.getComputedStyle(document.body.children[i], null).getPropertyValue('position');
            if (index !== 'auto' && position !== 'static') {
                childrenZindex.push(index);
            }
        }
    }
    childrenZindex.push('999');
    var siblingsZindex = [];
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element.parentElement) && element.parentElement.tagName !== 'BODY') {
        var childNodes = [].slice.call(element.parentElement.children);
        for (var i = 0; i < childNodes.length; i++) {
            if (!element.isEqualNode(childNodes[i])) {
                var index = document.defaultView.getComputedStyle(childNodes[i], null).getPropertyValue('z-index');
                var position = document.defaultView.getComputedStyle(childNodes[i], null).getPropertyValue('position');
                if (index !== 'auto' && position !== 'static') {
                    siblingsZindex.push(index);
                }
            }
        }
    }
    var finalValue = parentZindex.concat(childrenZindex, siblingsZindex);
    // eslint-disable-next-line
    var currentZindexValue = Math.max.apply(Math, finalValue) + 1;
    return currentZindexValue > 2147483647 ? 2147483647 : currentZindexValue;
}
/**
 * Gets the maximum z-index of the page.
 *
 * @returns {void}
 * @param { HTMLElement } tagName - Specify the tagName to get the maximum z-index of it.
 * @private
 */
function getMaxZindex(tagName) {
    if (tagName === void 0) { tagName = ['*']; }
    var maxZindex = [];
    for (var i = 0; i < tagName.length; i++) {
        var elements = document.getElementsByTagName(tagName[i]);
        for (var i_1 = 0; i_1 < elements.length; i_1++) {
            var index = document.defaultView.getComputedStyle(elements[i_1], null).getPropertyValue('z-index');
            var position = document.defaultView.getComputedStyle(elements[i_1], null).getPropertyValue('position');
            if (index !== 'auto' && position !== 'static') {
                maxZindex.push(index);
            }
        }
    }
    // eslint-disable-next-line
    var currentZindexValue = Math.max.apply(Math, maxZindex) + 1;
    return currentZindexValue > 2147483647 ? 2147483647 : currentZindexValue;
}

/**
 * Popup Components
 */

/**
 * Popup Components
 */

/**
 * Resize library
 */
/* eslint-disable */
var elementClass = ['north-west', 'north', 'north-east', 'west', 'east', 'south-west', 'south', 'south-east'];
var RESIZE_HANDLER = 'e-resize-handle';
var FOCUSED_HANDLER = 'e-focused-handle';
var DIALOG_RESIZABLE = 'e-dlg-resizable';
var RESTRICT_LEFT = ['e-restrict-left'];
var RESIZE_WITHIN_VIEWPORT = 'e-resize-viewport';
var dialogBorderResize = ['north', 'west', 'east', 'south'];
var targetElement;
var selectedHandler;
var originalWidth = 0;
var originalHeight = 0;
var originalX = 0;
var originalY = 0;
var originalMouseX = 0;
var originalMouseY = 0;
var minHeight;
var maxHeight;
var minWidth;
var maxWidth;
var containerElement;
/* eslint-disable */
var resizeStart = null;
var resize = null;
var resizeEnd = null;
/* eslint-enable */
var resizeWestWidth;
var setLeft = true;
var previousWidth = 0;
var setWidth = true;
// eslint-disable-next-line
var proxy;
/**
 *
 * @param {ResizeArgs} args - specifies the resize args
 * @returns {void}
 */
function createResize(args) {
    resizeStart = args.resizeBegin;
    resize = args.resizing;
    resizeEnd = args.resizeComplete;
    targetElement = getDOMElement(args.element);
    containerElement = getDOMElement(args.boundary);
    var directions = args.direction.split(' ');
    for (var i = 0; i < directions.length; i++) {
        if (dialogBorderResize.indexOf(directions[i]) >= 0 && directions[i]) {
            setBorderResizeElm(directions[i]);
        }
        else if (directions[i].trim() !== '') {
            var resizeHandler = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-icons ' + RESIZE_HANDLER + ' ' + 'e-' + directions[i] });
            targetElement.appendChild(resizeHandler);
        }
    }
    minHeight = args.minHeight;
    minWidth = args.minWidth;
    maxWidth = args.maxWidth;
    maxHeight = args.maxHeight;
    if (args.proxy && args.proxy.element && args.proxy.element.classList.contains('e-dialog')) {
        wireEvents(args.proxy);
    }
    else {
        wireEvents();
    }
}
/**
 *
 * @param {string} direction - specifies the string
 * @returns {void}
 */
function setBorderResizeElm(direction) {
    calculateValues();
    var borderBottom = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', {
        attrs: {
            'unselectable': 'on', 'contenteditable': 'false'
        }
    });
    borderBottom.setAttribute('class', 'e-dialog-border-resize e-' + direction);
    if (direction === 'south') {
        borderBottom.style.height = '2px';
        borderBottom.style.width = '100%';
        borderBottom.style.bottom = '0px';
        borderBottom.style.left = '0px';
    }
    if (direction === 'north') {
        borderBottom.style.height = '2px';
        borderBottom.style.width = '100%';
        borderBottom.style.top = '0px';
        borderBottom.style.left = '0px';
    }
    if (direction === 'east') {
        borderBottom.style.height = '100%';
        borderBottom.style.width = '2px';
        borderBottom.style.right = '0px';
        borderBottom.style.top = '0px';
    }
    if (direction === 'west') {
        borderBottom.style.height = '100%';
        borderBottom.style.width = '2px';
        borderBottom.style.left = '0px';
        borderBottom.style.top = '0px';
    }
    targetElement.appendChild(borderBottom);
}
/**
 *
 * @param {string} element - specifies the element
 * @returns {HTMLElement} - returns the element
 */
function getDOMElement(element) {
    var domElement;
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element)) {
        if (typeof (element) === 'string') {
            domElement = document.querySelector(element);
        }
        else {
            domElement = element;
        }
    }
    return domElement;
}
// eslint-disable-next-line
function wireEvents(args) {
    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args)) {
        args = this;
    }
    var resizers = targetElement.querySelectorAll('.' + RESIZE_HANDLER);
    for (var i = 0; i < resizers.length; i++) {
        selectedHandler = resizers[i];
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(selectedHandler, 'mousedown', onMouseDown, args);
        var eventName = (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(selectedHandler, eventName, onTouchStart, args);
    }
    var borderResizers = targetElement.querySelectorAll('.e-dialog-border-resize');
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(borderResizers)) {
        for (var i = 0; i < borderResizers.length; i++) {
            selectedHandler = borderResizers[i];
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(selectedHandler, 'mousedown', onMouseDown, args);
            var eventName = (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(selectedHandler, eventName, onTouchStart, args);
        }
    }
}
/* istanbul ignore next */
/**
 *
 * @param {string} e - specifies the string
 * @returns {string} - returns the string
 */
function getEventType(e) {
    return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';
}
/* istanbul ignore next */
/**
 *
 * @param {MouseEvent} e - specifies the mouse event
 * @returns {void}
 */
function onMouseDown(e) {
    e.preventDefault();
    targetElement = e.target.parentElement;
    calculateValues();
    originalMouseX = e.pageX;
    originalMouseY = e.pageY;
    e.target.classList.add(FOCUSED_HANDLER);
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(resizeStart)) {
        proxy = this;
        if (resizeStart(e, proxy) === true) {
            return;
        }
    }
    if (this.targetEle && targetElement && targetElement.querySelector('.' + DIALOG_RESIZABLE)) {
        containerElement = this.target === 'body' || 'document.body' || 0 ? null : 0;
        maxWidth = this.targetEle.clientWidth;
        maxHeight = this.targetEle.clientHeight;
    }
    var target = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) ? document : containerElement;
    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(target, 'mousemove', onMouseMove, this);
    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document, 'mouseup', onMouseUp, this);
    for (var i = 0; i < RESTRICT_LEFT.length; i++) {
        if (targetElement.classList.contains(RESTRICT_LEFT[i])) {
            setLeft = false;
        }
        else {
            setLeft = true;
        }
    }
}
/* istanbul ignore next */
/**
 *
 * @param {MouseEvent} e - specifies the event
 * @returns {void}
 */
function onMouseUp(e) {
    var touchMoveEvent = (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';
    var touchEndEvent = (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'msie') ? 'pointerup' : 'touchend';
    var target = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) ? document : containerElement;
    var eventName = (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';
    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(target, 'mousemove', onMouseMove);
    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(target, touchMoveEvent, onMouseMove);
    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(target, eventName, onMouseMove);
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(document.body.querySelector('.' + FOCUSED_HANDLER))) {
        document.body.querySelector('.' + FOCUSED_HANDLER).classList.remove(FOCUSED_HANDLER);
    }
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(resizeEnd)) {
        proxy = this;
        resizeEnd(e, proxy);
    }
    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document, 'mouseup', onMouseUp);
    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document, touchEndEvent, onMouseUp);
}
/* istanbul ignore next */
/**
 * @returns {void}
 */
function calculateValues() {
    originalWidth = parseFloat(getComputedStyle(targetElement, null).getPropertyValue('width').replace('px', ''));
    originalHeight = parseFloat(getComputedStyle(targetElement, null).getPropertyValue('height').replace('px', ''));
    originalX = targetElement.getBoundingClientRect().left;
    originalY = targetElement.getBoundingClientRect().top;
}
/* istanbul ignore next */
/**
 *
 * @param {MouseEvent} e - specifies the event
 * @returns {void}
 */
function onTouchStart(e) {
    targetElement = e.target.parentElement;
    calculateValues();
    var coordinates = e.touches ? e.changedTouches[0] : e;
    originalMouseX = coordinates.pageX;
    originalMouseY = coordinates.pageY;
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(resizeStart)) {
        proxy = this;
        if (resizeStart(e, proxy) === true) {
            return;
        }
    }
    var touchMoveEvent = (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';
    var touchEndEvent = (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'msie') ? 'pointerup' : 'touchend';
    var target = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) ? document : containerElement;
    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(target, touchMoveEvent, onMouseMove, this);
    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document, touchEndEvent, onMouseUp);
}
/* istanbul ignore next */
/**
 *
 * @param {MouseEvent} e - specifies the event
 * @returns {void}
 */
function onMouseMove(e) {
    if (e.target.classList.contains(RESIZE_HANDLER) && e.target.classList.contains(FOCUSED_HANDLER)) {
        selectedHandler = e.target;
    }
    else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(document.body.querySelector('.' + FOCUSED_HANDLER))) {
        selectedHandler = document.body.querySelector('.' + FOCUSED_HANDLER);
    }
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(selectedHandler)) {
        var resizeTowards = '';
        for (var i = 0; i < elementClass.length; i++) {
            if (selectedHandler.classList.contains('e-' + elementClass[i])) {
                resizeTowards = elementClass[i];
            }
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(resize)) {
            proxy = this;
            resize(e, proxy);
        }
        switch (resizeTowards) {
            case 'south':
                resizeSouth(e);
                break;
            case 'north':
                resizeNorth(e);
                break;
            case 'west':
                resizeWest(e);
                break;
            case 'east':
                resizeEast(e);
                break;
            case 'south-east':
                resizeSouth(e);
                resizeEast(e);
                break;
            case 'south-west':
                resizeSouth(e);
                resizeWest(e);
                break;
            case 'north-east':
                resizeNorth(e);
                resizeEast(e);
                break;
            case 'north-west':
                resizeNorth(e);
                resizeWest(e);
                break;
            default: break;
        }
    }
}
/* istanbul ignore next */
/**
 *
 * @param {HTMLElement} element - specifies the eleemnt
 * @returns {ClientRect} - returns the client
 */
function getClientRectValues(element) {
    return element.getBoundingClientRect();
}
/* istanbul ignore next */
// eslint-disable-next-line
function resizeSouth(e) {
    var documentHeight = document.documentElement.clientHeight;
    var calculateValue = false;
    var coordinates = e.touches ? e.changedTouches[0] : e;
    var currentpageY = coordinates.pageY;
    var targetRectValues = getClientRectValues(targetElement);
    var containerRectValues;
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) {
        containerRectValues = getClientRectValues(containerElement);
    }
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) {
        calculateValue = true;
    }
    else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) && ((documentHeight - currentpageY) >= 0 || (targetRectValues.top < 0))) {
        calculateValue = true;
    }
    var calculatedHeight = originalHeight + (currentpageY - originalMouseY);
    calculatedHeight = (calculatedHeight > minHeight) ? calculatedHeight : minHeight;
    var containerTop = 0;
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) {
        containerTop = containerRectValues.top;
    }
    var borderValue = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) ? 0 : containerElement.offsetHeight - containerElement.clientHeight;
    var topWithoutborder = (targetRectValues.top - containerTop) - (borderValue / 2);
    topWithoutborder = (topWithoutborder < 0) ? 0 : topWithoutborder;
    if (targetRectValues.top > 0 && (topWithoutborder + calculatedHeight) > maxHeight) {
        calculateValue = false;
        if (targetElement.classList.contains(RESIZE_WITHIN_VIEWPORT)) {
            return;
        }
        targetElement.style.height = (maxHeight - parseInt(topWithoutborder.toString(), 10)) + 'px';
        return;
    }
    var targetTop = 0;
    if (calculateValue) {
        if (targetRectValues.top < 0 && (documentHeight + (targetRectValues.height + targetRectValues.top) > 0)) {
            targetTop = targetRectValues.top;
            if ((calculatedHeight + targetTop) <= 30) {
                calculatedHeight = (targetRectValues.height - (targetRectValues.height + targetRectValues.top)) + 30;
            }
        }
        if (((calculatedHeight + targetRectValues.top) >= maxHeight)) {
            targetElement.style.height = targetRectValues.height +
                (documentHeight - (targetRectValues.height + targetRectValues.top)) + 'px';
        }
        var calculatedTop = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) ? targetTop : topWithoutborder;
        if (calculatedHeight >= minHeight && ((calculatedHeight + calculatedTop) <= maxHeight)) {
            targetElement.style.height = calculatedHeight + 'px';
        }
    }
}
/* istanbul ignore next */
// eslint-disable-next-line
function resizeNorth(e) {
    var calculateValue = false;
    var boundaryRectValues;
    var pageY = (getEventType(e.type) === 'mouse') ? e.pageY : e.touches[0].pageY;
    var targetRectValues = getClientRectValues(targetElement);
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) {
        boundaryRectValues = getClientRectValues(containerElement);
    }
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) && (targetRectValues.top - boundaryRectValues.top) > 0) {
        calculateValue = true;
    }
    else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) && pageY > 0) {
        calculateValue = true;
    }
    var currentHeight = originalHeight - (pageY - originalMouseY);
    if (calculateValue) {
        if (currentHeight >= minHeight && currentHeight <= maxHeight) {
            var containerTop = 0;
            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) {
                containerTop = boundaryRectValues.top;
            }
            var top_1 = (originalY - containerTop) + (pageY - originalMouseY);
            top_1 = top_1 > 0 ? top_1 : 1;
            targetElement.style.height = currentHeight + 'px';
            targetElement.style.top = top_1 + 'px';
        }
    }
}
/* istanbul ignore next */
// eslint-disable-next-line
function resizeWest(e) {
    var documentWidth = document.documentElement.clientWidth;
    var calculateValue = false;
    var rectValues;
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) {
        rectValues = getClientRectValues(containerElement);
    }
    var pageX = (getEventType(e.type) === 'mouse') ? e.pageX : e.touches[0].pageX;
    var targetRectValues = getClientRectValues(targetElement);
    var borderValue = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) ? 0 : containerElement.offsetWidth - containerElement.clientWidth;
    /* eslint-disable */
    var left = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) ? 0 : rectValues.left;
    var containerWidth = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) ? 0 : rectValues.width;
    /* eslint-enable */
    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(resizeWestWidth)) {
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) {
            resizeWestWidth = (((targetRectValues.left - left) - borderValue / 2)) + targetRectValues.width;
            resizeWestWidth = resizeWestWidth + (containerWidth - borderValue - resizeWestWidth);
        }
        else {
            resizeWestWidth = documentWidth;
        }
    }
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) &&
        (Math.floor((targetRectValues.left - rectValues.left) + targetRectValues.width +
            (rectValues.right - targetRectValues.right)) - borderValue) <= maxWidth) {
        calculateValue = true;
    }
    else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) && pageX >= 0) {
        calculateValue = true;
    }
    var calculatedWidth = originalWidth - (pageX - originalMouseX);
    if (setLeft) {
        calculatedWidth = (calculatedWidth > resizeWestWidth) ? resizeWestWidth : calculatedWidth;
    }
    if (calculateValue) {
        if (calculatedWidth >= minWidth && calculatedWidth <= maxWidth) {
            var containerLeft = 0;
            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) {
                containerLeft = rectValues.left;
            }
            var left_1 = (originalX - containerLeft) + (pageX - originalMouseX);
            left_1 = (left_1 > 0) ? left_1 : 1;
            if (calculatedWidth !== previousWidth && setWidth) {
                targetElement.style.width = calculatedWidth + 'px';
            }
            if (setLeft) {
                targetElement.style.left = left_1 + 'px';
                if (left_1 === 1) {
                    setWidth = false;
                }
                else {
                    setWidth = true;
                }
            }
        }
    }
    previousWidth = calculatedWidth;
}
/* istanbul ignore next */
// eslint-disable-next-line
function resizeEast(e) {
    var documentWidth = document.documentElement.clientWidth;
    var calculateValue = false;
    var containerRectValues;
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) {
        containerRectValues = getClientRectValues(containerElement);
    }
    var coordinates = e.touches ? e.changedTouches[0] : e;
    var pageX = coordinates.pageX;
    var targetRectValues = getClientRectValues(targetElement);
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) && (((targetRectValues.left - containerRectValues.left) + targetRectValues.width) <= maxWidth
        || (targetRectValues.right - containerRectValues.left) >= targetRectValues.width)) {
        calculateValue = true;
    }
    else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement) && (documentWidth - pageX) > 0) {
        calculateValue = true;
    }
    var calculatedWidth = originalWidth + (pageX - originalMouseX);
    var containerLeft = 0;
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(containerElement)) {
        containerLeft = containerRectValues.left;
    }
    if (((targetRectValues.left - containerLeft) + calculatedWidth) > maxWidth) {
        calculateValue = false;
        if (targetElement.classList.contains(RESIZE_WITHIN_VIEWPORT)) {
            return;
        }
        targetElement.style.width = maxWidth - (targetRectValues.left - containerLeft) + 'px';
    }
    if (calculateValue) {
        if (calculatedWidth >= minWidth && calculatedWidth <= maxWidth) {
            targetElement.style.width = calculatedWidth + 'px';
        }
    }
}
/* istanbul ignore next */
/**
 *
 * @param {number} minimumHeight - specifies the number
 * @returns {void}
 */
function setMinHeight(minimumHeight) {
    minHeight = minimumHeight;
}
/**
 *
 * @param {number} value - specifies the number value
 * @returns {void}
 */
function setMaxWidth(value) {
    maxWidth = value;
}
/**
 *
 * @param {number} value - specifies the number value
 * @returns {void}
 */
function setMaxHeight(value) {
    maxHeight = value;
}
/**
 * @returns {void}
 */
function removeResize() {
    var handlers = targetElement.querySelectorAll('.' + RESIZE_HANDLER);
    for (var i = 0; i < handlers.length; i++) {
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(handlers[i]);
    }
    var borderResizers = targetElement.querySelectorAll('.e-dialog-border-resize');
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(borderResizers)) {
        for (var i = 0; i < borderResizers.length; i++) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(borderResizers[i]);
        }
    }
}

var __extends$1 = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate$1 = ( false) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ButtonProps = /** @__PURE__ @class */ (function (_super) {
    __extends$1(ButtonProps, _super);
    function ButtonProps() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)
    ], ButtonProps.prototype, "isFlat", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()
    ], ButtonProps.prototype, "buttonModel", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Button')
    ], ButtonProps.prototype, "type", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], ButtonProps.prototype, "click", void 0);
    return ButtonProps;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));
/**
 * Configures the animation properties for both open and close the dialog.
 */
var AnimationSettings = /** @__PURE__ @class */ (function (_super) {
    __extends$1(AnimationSettings, _super);
    function AnimationSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Fade')
    ], AnimationSettings.prototype, "effect", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(400)
    ], AnimationSettings.prototype, "duration", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)
    ], AnimationSettings.prototype, "delay", void 0);
    return AnimationSettings;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));
var ROOT = 'e-dialog';
var RTL = 'e-rtl';
var DLG_HEADER_CONTENT = 'e-dlg-header-content';
var DLG_HEADER = 'e-dlg-header';
var DLG_FOOTER_CONTENT = 'e-footer-content';
var MODAL_DLG = 'e-dlg-modal';
var DLG_CONTENT = 'e-dlg-content';
var DLG_CLOSE_ICON = 'e-icon-dlg-close';
var DLG_OVERLAY = 'e-dlg-overlay';
var DLG_TARGET = 'e-dlg-target';
var DLG_CONTAINER = 'e-dlg-container';
var SCROLL_DISABLED = 'e-scroll-disabled';
var DLG_PRIMARY_BUTTON = 'e-primary';
var ICON = 'e-icons';
var POPUP_ROOT = 'e-popup';
var DEVICE = 'e-device';
var FULLSCREEN = 'e-dlg-fullscreen';
var DLG_CLOSE_ICON_BTN = 'e-dlg-closeicon-btn';
var DLG_HIDE = 'e-popup-close';
var DLG_SHOW = 'e-popup-open';
var DLG_UTIL_DEFAULT_TITLE = 'Information';
var DLG_UTIL_ROOT = 'e-scroll-disabled';
var DLG_UTIL_ALERT = 'e-alert-dialog';
var DLG_UTIL_CONFIRM = 'e-confirm-dialog';
var DLG_RESIZABLE = 'e-dlg-resizable';
var DLG_RESTRICT_LEFT_VALUE = 'e-restrict-left';
var DLG_RESTRICT_WIDTH_VALUE = 'e-resize-viewport';
var DLG_REF_ELEMENT = 'e-dlg-ref-element';
var DLG_USER_ACTION_CLOSED = 'user action';
var DLG_CLOSE_ICON_CLOSED = 'close icon';
var DLG_ESCAPE_CLOSED = 'escape';
var DLG_OVERLAYCLICK_CLOSED = 'overlayClick';
var DLG_DRAG = 'e-draggable';
/**
 * Represents the dialog component that displays the information and get input from the user.
 * Two types of dialog components are `Modal and Modeless (non-modal)` depending on its interaction with parent application.
 * ```html
 * <div id="dialog"></div>
 * ```
 * ```typescript
 * <script>
 *   var dialogObj = new Dialog({ header: 'Dialog' });
 *   dialogObj.appendTo("#dialog");
 * </script>
 * ```
 */
var Dialog = /** @__PURE__ @class */ (function (_super) {
    __extends$1(Dialog, _super);
    /*
     * * Constructor for creating the widget
     *
     * @param
     * @param
     * @hidden
     */
    function Dialog(options, element) {
        var _this = _super.call(this, options, element) || this;
        _this.needsID = true;
        return _this;
    }
    /**
     *Initialize the control rendering
     *
     * @returns {void}
     * @private
     */
    Dialog.prototype.render = function () {
        this.initialize();
        this.initRender();
        this.wireEvents();
        if (this.width === '100%') {
            this.element.style.width = '';
        }
        if (this.minHeight !== '') {
            this.element.style.minHeight = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.minHeight);
        }
        if (this.enableResize) {
            this.setResize();
            if (this.animationSettings.effect === 'None') {
                this.getMinHeight();
            }
        }
        this.renderComplete();
    };
    Dialog.prototype.initializeValue = function () {
        this.dlgClosedBy = DLG_USER_ACTION_CLOSED;
    };
    /**
     *Initialize the event handler
     *
     * @returns {void}
     * @private
     */
    Dialog.prototype.preRender = function () {
        var _this = this;
        this.initializeValue();
        this.headerContent = null;
        this.allowMaxHeight = true;
        this.preventVisibility = true;
        this.clonedEle = this.element.cloneNode(true);
        this.closeIconClickEventHandler = function (event) {
            _this.dlgClosedBy = DLG_CLOSE_ICON_CLOSED;
            _this.hide(event);
        };
        // eslint-disable-next-line
        this.dlgOverlayClickEventHandler = function (event) {
            _this.dlgClosedBy = DLG_OVERLAYCLICK_CLOSED;
            event.preventFocus = false;
            _this.trigger('overlayClick', event, function (overlayClickEventArgs) {
                if (!overlayClickEventArgs.preventFocus) {
                    _this.focusContent();
                }
                _this.dlgClosedBy = DLG_USER_ACTION_CLOSED;
            });
        };
        // eslint-disable-next-line
        var localeText = { close: 'Close' };
        this.l10n = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n('dialog', localeText, this.locale);
        this.checkPositionData();
        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.target)) {
            var prevOnChange = this.isProtectedOnChange;
            this.isProtectedOnChange = true;
            this.target = document.body;
            this.isProtectedOnChange = prevOnChange;
        }
    };
    Dialog.prototype.isNumberValue = function (value) {
        var isNumber = /^[-+]?\d*\.?\d+$/.test(value);
        return isNumber;
    };
    Dialog.prototype.checkPositionData = function () {
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.position)) {
            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.position.X) && (typeof (this.position.X) !== 'number')) {
                var isNumber = this.isNumberValue(this.position.X);
                if (isNumber) {
                    var prevOnChange = this.isProtectedOnChange;
                    this.isProtectedOnChange = true;
                    this.position.X = parseFloat(this.position.X);
                    this.isProtectedOnChange = prevOnChange;
                }
            }
            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.position.Y) && (typeof (this.position.Y) !== 'number')) {
                var isNumber = this.isNumberValue(this.position.Y);
                if (isNumber) {
                    var prevOnChange = this.isProtectedOnChange;
                    this.isProtectedOnChange = true;
                    this.position.Y = parseFloat(this.position.Y);
                    this.isProtectedOnChange = prevOnChange;
                }
            }
        }
    };
    Dialog.prototype.getEle = function (list, selector) {
        var element = undefined;
        for (var i = 0; i < list.length; i++) {
            if (list[i].classList.contains(selector)) {
                element = list[i];
                break;
            }
        }
        return element;
    };
    /* istanbul ignore next */
    Dialog.prototype.getMinHeight = function () {
        var computedHeaderHeight = '0px';
        var computedFooterHeight = '0px';
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element.querySelector('.' + DLG_HEADER_CONTENT))) {
            computedHeaderHeight = getComputedStyle(this.headerContent).height;
        }
        var footerEle = this.getEle(this.element.children, DLG_FOOTER_CONTENT);
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(footerEle)) {
            computedFooterHeight = getComputedStyle(footerEle).height;
        }
        var headerHeight = parseInt(computedHeaderHeight.slice(0, computedHeaderHeight.indexOf('p')), 10);
        var footerHeight = parseInt(computedFooterHeight.slice(0, computedFooterHeight.indexOf('p')), 10);
        setMinHeight(headerHeight + 30 + (isNaN(footerHeight) ? 0 : footerHeight));
        return (headerHeight + 30 + footerHeight);
    };
    Dialog.prototype.onResizeStart = function (args, dialogObj) {
        dialogObj.trigger('resizeStart', args);
        return args.cancel;
    };
    Dialog.prototype.onResizing = function (args, dialogObj) {
        dialogObj.trigger('resizing', args);
    };
    Dialog.prototype.onResizeComplete = function (args, dialogObj) {
        dialogObj.trigger('resizeStop', args);
    };
    Dialog.prototype.setResize = function () {
        if (this.enableResize) {
            if (this.isBlazorServerRender() && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element.querySelector('.e-icons.e-resize-handle'))) {
                return;
            }
            this.element.classList.add(DLG_RESIZABLE);
            var computedHeight = getComputedStyle(this.element).minHeight;
            var computedWidth = getComputedStyle(this.element).minWidth;
            var direction = '';
            for (var i = 0; i < this.resizeHandles.length; i++) {
                if (this.resizeHandles[i] === 'All') {
                    direction = 'south north east west north-east north-west south-east south-west';
                    break;
                }
                else {
                    var directionValue = '';
                    switch (this.resizeHandles[i].toString()) {
                        case 'SouthEast':
                            directionValue = 'south-east';
                            break;
                        case 'SouthWest':
                            directionValue = 'south-west';
                            break;
                        case 'NorthEast':
                            directionValue = 'north-east';
                            break;
                        case 'NorthWest':
                            directionValue = 'north-west';
                            break;
                        default:
                            directionValue = this.resizeHandles[i].toString();
                            break;
                    }
                    direction += directionValue.toLocaleLowerCase() + ' ';
                }
            }
            if (this.enableRtl && direction.trim() === 'south-east') {
                direction = 'south-west';
            }
            else if (this.enableRtl && direction.trim() === 'south-west') {
                direction = 'south-east';
            }
            if (this.isModal && this.enableRtl) {
                this.element.classList.add(DLG_RESTRICT_LEFT_VALUE);
            }
            else if (this.isModal && this.target === document.body) {
                this.element.classList.add(DLG_RESTRICT_WIDTH_VALUE);
            }
            createResize({
                element: this.element,
                direction: direction,
                minHeight: parseInt(computedHeight.slice(0, computedWidth.indexOf('p')), 10),
                maxHeight: this.targetEle.clientHeight,
                minWidth: parseInt(computedWidth.slice(0, computedWidth.indexOf('p')), 10),
                maxWidth: this.targetEle.clientWidth,
                boundary: this.target === document.body ? null : this.targetEle,
                resizeBegin: this.onResizeStart.bind(this),
                resizeComplete: this.onResizeComplete.bind(this),
                resizing: this.onResizing.bind(this),
                proxy: this
            });
            this.wireWindowResizeEvent();
        }
        else {
            removeResize();
            this.unWireWindowResizeEvent();
            if (this.isModal) {
                this.element.classList.remove(DLG_RESTRICT_LEFT_VALUE);
            }
            else {
                this.element.classList.remove(DLG_RESTRICT_WIDTH_VALUE);
            }
            this.element.classList.remove(DLG_RESIZABLE);
        }
    };
    Dialog.prototype.getFocusElement = function (target) {
        var value = 'input,select,textarea,button:enabled,a,[contenteditable="true"],[tabindex]';
        var items = target.querySelectorAll(value);
        return { element: items[items.length - 1] };
    };
    /* istanbul ignore next */
    Dialog.prototype.keyDown = function (event) {
        var _this = this;
        if (event.keyCode === 9) {
            if (this.isModal) {
                var buttonObj = void 0;
                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.btnObj)) {
                    buttonObj = this.btnObj[this.btnObj.length - 1];
                }
                if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.btnObj)) && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.ftrTemplateContent))) {
                    buttonObj = this.getFocusElement(this.ftrTemplateContent);
                }
                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.btnObj) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.ftrTemplateContent) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.contentEle)) {
                    buttonObj = this.getFocusElement(this.contentEle);
                }
                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(buttonObj) && document.activeElement === buttonObj.element && !event.shiftKey) {
                    event.preventDefault();
                    this.focusableElements(this.element).focus();
                }
                if (document.activeElement === this.focusableElements(this.element) && event.shiftKey) {
                    event.preventDefault();
                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(buttonObj)) {
                        buttonObj.element.focus();
                    }
                }
            }
        }
        var element = document.activeElement;
        var isTagName = (['input', 'textarea'].indexOf(element.tagName.toLowerCase()) > -1);
        var isContentEdit = false;
        if (!isTagName) {
            isContentEdit = element.hasAttribute('contenteditable') && element.getAttribute('contenteditable') === 'true';
        }
        if (event.keyCode === 27 && this.closeOnEscape) {
            this.dlgClosedBy = DLG_ESCAPE_CLOSED;
            // 'document.querySelector' is used to find the elements rendered based on body
            if (!document.querySelector('.e-popup-open:not(.e-dialog)')) {
                this.hide(event);
            }
        }
        if ((event.keyCode === 13 && !event.ctrlKey && element.tagName.toLowerCase() !== 'textarea' &&
            isTagName && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.primaryButtonEle)) ||
            (event.keyCode === 13 && event.ctrlKey && (element.tagName.toLowerCase() === 'textarea' ||
                isContentEdit)) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.primaryButtonEle)) {
            var buttonIndex_1;
            // eslint-disable-next-line
            var firstPrimary = this.buttons.some(function (data, index) {
                buttonIndex_1 = index;
                // eslint-disable-next-line
                var buttonModel = data.buttonModel;
                return !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(buttonModel) && buttonModel.isPrimary === true;
            });
            if (firstPrimary && typeof (this.buttons[buttonIndex_1].click) === 'function') {
                setTimeout(function () {
                    _this.buttons[buttonIndex_1].click.call(_this, event);
                });
            }
        }
    };
    /**
     * Initialize the control rendering
     *
     * @returns {void}
     * @private
     */
    Dialog.prototype.initialize = function () {
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.target)) {
            this.targetEle = ((typeof this.target) === 'string') ?
                document.querySelector(this.target) : this.target;
        }
        if (!this.isBlazorServerRender()) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], ROOT);
        }
        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], DEVICE);
        }
        if (!this.isBlazorServerRender()) {
            this.setCSSClass();
        }
        this.setMaxHeight();
    };
    /**
     * Initialize the rendering
     *
     * @returns {void}
     * @private
     */
    Dialog.prototype.initRender = function () {
        var _this = this;
        this.initialRender = true;
        if (!this.isBlazorServerRender()) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.element, { role: 'dialog' });
        }
        if (this.zIndex === 1000) {
            this.setzIndex(this.element, false);
            this.calculatezIndex = true;
        }
        else {
            this.calculatezIndex = false;
        }
        if (this.isBlazorServerRender() && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.headerContent)) {
            this.headerContent = this.element.getElementsByClassName('e-dlg-header-content')[0];
        }
        if (this.isBlazorServerRender() && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.contentEle)) {
            this.contentEle = this.element.querySelector('#' + this.element.id + '_dialog-content');
        }
        if (!this.isBlazorServerRender()) {
            this.setTargetContent();
            if (this.header !== '' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.header)) {
                this.setHeader();
            }
            this.renderCloseIcon();
            this.setContent();
            if (this.footerTemplate !== '' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.footerTemplate)) {
                this.setFooterTemplate();
            }
            else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.buttons[0].buttonModel)) {
                this.setButton();
            }
        }
        if (this.isBlazorServerRender()) {
            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.buttons[0].buttonModel) && this.footerTemplate === '') {
                this.setButton();
            }
        }
        if (this.allowDragging && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.headerContent))) {
            this.setAllowDragging();
        }
        if (!this.isBlazorServerRender()) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.element, { 'aria-modal': (this.isModal ? 'true' : 'false') });
            if (this.isModal) {
                this.setIsModal();
            }
        }
        if (this.isBlazorServerRender() && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.dlgContainer)) {
            this.dlgContainer = this.element.parentElement;
            for (var i = 0, childNodes = this.dlgContainer.children; i < childNodes.length; i++) {
                if (childNodes[i].classList.contains('e-dlg-overlay')) {
                    this.dlgOverlay = childNodes[i];
                }
            }
        }
        if (this.element.classList.contains(DLG_UTIL_ALERT) !== true && this.element.classList.contains(DLG_UTIL_CONFIRM) !== true
            && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element.parentElement)) {
            var parentEle = this.isModal ? this.dlgContainer.parentElement : this.element.parentElement;
            this.refElement = this.createElement('div', { className: DLG_REF_ELEMENT });
            parentEle.insertBefore(this.refElement, (this.isModal ? this.dlgContainer : this.element));
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.targetEle)) {
            // eslint-disable-next-line
            this.isModal ? this.targetEle.appendChild(this.dlgContainer) : this.targetEle.appendChild(this.element);
        }
        this.popupObj = new Popup(this.element, {
            height: this.height,
            width: this.width,
            zIndex: this.zIndex,
            relateTo: this.target,
            actionOnScroll: 'none',
            enableRtl: this.enableRtl,
            // eslint-disable-next-line
            open: function (event) {
                // eslint-disable-next-line
                var eventArgs = {
                    container: _this.isModal ? _this.dlgContainer : _this.element,
                    element: _this.element,
                    target: _this.target,
                    preventFocus: false
                };
                if (_this.enableResize) {
                    _this.resetResizeIcon();
                }
                // eslint-disable-next-line
                _this.trigger('open', eventArgs, function (openEventArgs) {
                    if (!openEventArgs.preventFocus) {
                        _this.focusContent();
                    }
                });
            },
            // eslint-disable-next-line
            close: function (event) {
                if (_this.isModal) {
                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([_this.dlgOverlay], 'e-fade');
                }
                _this.unBindEvent(_this.element);
                if (_this.isModal) {
                    _this.dlgContainer.style.display = 'none';
                }
                _this.trigger('close', _this.closeArgs);
                var activeEle = document.activeElement;
                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(activeEle) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((activeEle).blur)) {
                    activeEle.blur();
                }
                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.storeActiveElement) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.storeActiveElement.focus)) {
                    _this.storeActiveElement.focus();
                }
            }
        });
        this.positionChange();
        this.setEnableRTL();
        if (!this.isBlazorServerRender()) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], DLG_HIDE);
            if (this.isModal) {
                this.setOverlayZindex();
            }
        }
        if (this.visible) {
            this.show();
        }
        else {
            if (this.isModal) {
                this.dlgOverlay.style.display = 'none';
            }
        }
        this.initialRender = false;
    };
    Dialog.prototype.resetResizeIcon = function () {
        var dialogConHeight = this.getMinHeight();
        if (this.targetEle.offsetHeight < dialogConHeight) {
            var className = this.enableRtl ? 'e-south-west' : 'e-south-east';
            var resizeIcon = this.element.querySelector('.' + className);
            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(resizeIcon)) {
                resizeIcon.style.bottom = '-' + dialogConHeight.toString() + 'px';
            }
        }
    };
    Dialog.prototype.setOverlayZindex = function (zIndexValue) {
        var zIndex;
        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(zIndexValue)) {
            zIndex = parseInt(this.element.style.zIndex, 10) ? parseInt(this.element.style.zIndex, 10) : this.zIndex;
        }
        else {
            zIndex = zIndexValue;
        }
        this.dlgOverlay.style.zIndex = (zIndex - 1).toString();
        this.dlgContainer.style.zIndex = zIndex.toString();
    };
    Dialog.prototype.positionChange = function () {
        if (this.isModal) {
            if (!isNaN(parseFloat(this.position.X)) && !isNaN(parseFloat(this.position.Y))) {
                this.setPopupPosition();
            }
            else if ((!isNaN(parseFloat(this.position.X)) && isNaN(parseFloat(this.position.Y)))
                || (isNaN(parseFloat(this.position.X)) && !isNaN(parseFloat(this.position.Y)))) {
                this.setPopupPosition();
            }
            else {
                this.element.style.top = '0px';
                this.element.style.left = '0px';
                this.dlgContainer.classList.add('e-dlg-' + this.position.X + '-' + this.position.Y);
            }
        }
        else {
            this.setPopupPosition();
        }
    };
    Dialog.prototype.setPopupPosition = function () {
        this.popupObj.setProperties({
            position: {
                X: this.position.X, Y: this.position.Y
            }
        });
    };
    Dialog.prototype.setAllowDragging = function () {
        var _this = this;
        var handleContent = '.' + DLG_HEADER_CONTENT;
        if (!this.element.classList.contains(DLG_DRAG)) {
            this.dragObj = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Draggable(this.element, {
                clone: false,
                isDragScroll: true,
                abort: '.e-dlg-closeicon-btn',
                handle: handleContent,
                // eslint-disable-next-line
                dragStart: function (event) {
                    // eslint-disable-next-line
                    _this.trigger('dragStart', event, function (dragEventArgs) {
                        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {
                            dragEventArgs.bindEvents(event.dragElement);
                        }
                    });
                },
                // eslint-disable-next-line
                dragStop: function (event) {
                    if (_this.isModal) {
                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.position)) {
                            _this.dlgContainer.classList.remove('e-dlg-' + _this.position.X + '-' + _this.position.Y);
                        }
                        // Reset the dialog position after drag completion.
                        _this.element.style.position = 'relative';
                    }
                    _this.trigger('dragStop', event);
                    _this.element.classList.remove(DLG_RESTRICT_LEFT_VALUE);
                },
                // eslint-disable-next-line
                drag: function (event) {
                    _this.trigger('drag', event);
                }
            });
            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.targetEle)) {
                this.dragObj.dragArea = this.targetEle;
            }
        }
    };
    Dialog.prototype.setButton = function () {
        if (!this.isBlazorServerRender()) {
            this.buttonContent = [];
            this.btnObj = [];
            // eslint-disable-next-line
            for (var i = 0; i < this.buttons.length; i++) {
                var buttonType = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.buttons[i].type) ? this.buttons[i].type.toLowerCase() : 'button';
                var btn = this.createElement('button', { className: this.cssClass, attrs: { type: buttonType } });
                this.buttonContent.push(btn.outerHTML);
            }
            this.setFooterTemplate();
        }
        var footerBtn;
        for (var i = 0, childNodes = this.element.children; i < childNodes.length; i++) {
            if (childNodes[i].classList.contains(DLG_FOOTER_CONTENT)) {
                footerBtn = childNodes[i].querySelectorAll('button');
            }
        }
        for (var i = 0; i < this.buttons.length; i++) {
            if (!this.isBlazorServerRender()) {
                this.btnObj[i] = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_1__.Button(this.buttons[i].buttonModel);
            }
            if (this.isBlazorServerRender()) {
                this.ftrTemplateContent = this.element.querySelector('.' + DLG_FOOTER_CONTENT);
            }
            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.ftrTemplateContent) && footerBtn.length > 0) {
                if (typeof (this.buttons[i].click) === 'function') {
                    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(footerBtn[i], 'click', this.buttons[i].click, this);
                }
                if (typeof (this.buttons[i].click) === 'object') {
                    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(footerBtn[i], 'click', this.buttonClickHandler.bind(this, i), this);
                }
            }
            if (!this.isBlazorServerRender() && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.ftrTemplateContent)) {
                this.btnObj[i].appendTo(this.ftrTemplateContent.children[i]);
                if (this.buttons[i].isFlat) {
                    this.btnObj[i].element.classList.add('e-flat');
                }
                this.primaryButtonEle = this.element.getElementsByClassName('e-primary')[0];
            }
        }
    };
    Dialog.prototype.buttonClickHandler = function (index) {
        this.trigger('buttons[' + index + '].click', {});
    };
    Dialog.prototype.setContent = function () {
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.element, { 'aria-describedby': this.element.id + '_dialog-content' });
        this.contentEle = this.createElement('div', { className: DLG_CONTENT, id: this.element.id + '_dialog-content' });
        if (this.innerContentElement) {
            this.contentEle.appendChild(this.innerContentElement);
        }
        else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.content) && this.content !== '' || !this.initialRender) {
            // eslint-disable-next-line
            if (typeof (this.content) === 'string' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {
                this.setTemplate(this.content, this.contentEle, 'content');
            }
            else if (this.content instanceof HTMLElement) {
                this.contentEle.appendChild(this.content);
            }
            else {
                this.setTemplate(this.content, this.contentEle, 'content');
            }
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.headerContent)) {
            this.element.insertBefore(this.contentEle, this.element.children[1]);
        }
        else {
            this.element.insertBefore(this.contentEle, this.element.children[0]);
        }
        if (this.height === 'auto') {
            if (!this.isBlazorServerRender() && _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isIE && this.element.style.width === '' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.width)) {
                this.element.style.width = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.width);
            }
            this.setMaxHeight();
        }
    };
    Dialog.prototype.setTemplate = function (template, toElement, prop) {
        // eslint-disable-next-line
        var templateFn;
        var templateProps;
        // eslint-disable-next-line
        if (toElement.classList.contains(DLG_HEADER)) {
            templateProps = this.element.id + 'header';
        }
        else if (toElement.classList.contains(DLG_FOOTER_CONTENT)) {
            templateProps = this.element.id + 'footerTemplate';
        }
        else {
            templateProps = this.element.id + 'content';
        }
        var templateValue;
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(template.outerHTML)) {
            toElement.appendChild(template);
        }
        else if ((typeof template === 'string') || (typeof template !== 'string') || ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)() && !this.isStringTemplate)) {
            if ((typeof template === 'string')) {
                template = this.sanitizeHelper(template);
            }
            if (this.isVue || typeof template !== 'string') {
                templateFn = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(template);
                templateValue = template;
            }
            else {
                toElement.innerHTML = template;
            }
        }
        var fromElements = [];
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(templateFn)) {
            var isString = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)() &&
                !this.isStringTemplate && (templateValue).indexOf('<div>Blazor') === 0) ?
                this.isStringTemplate : true;
            for (var _i = 0, _a = templateFn({}, this, prop, templateProps, isString); _i < _a.length; _i++) {
                var item = _a[_i];
                fromElements.push(item);
            }
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.append)([].slice.call(fromElements), toElement);
        }
    };
    /*
     * @returns {void}
     * @hidden
     * @value
     */
    Dialog.prototype.sanitizeHelper = function (value) {
        if (this.enableHtmlSanitizer) {
            var dialogItem = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlHelper.beforeSanitize();
            var beforeEvent = {
                cancel: false,
                helper: null
            };
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(dialogItem, dialogItem, beforeEvent);
            this.trigger('beforeSanitizeHtml', dialogItem);
            if (dialogItem.cancel && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(dialogItem.helper)) {
                value = dialogItem.helper(value);
            }
            else if (!dialogItem.cancel) {
                value = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlHelper.serializeValue(dialogItem, value);
            }
        }
        return value;
    };
    Dialog.prototype.setMaxHeight = function () {
        if (!this.allowMaxHeight) {
            return;
        }
        var display = this.element.style.display;
        this.element.style.display = 'none';
        this.element.style.maxHeight = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.target)) && (this.targetEle.offsetHeight < window.innerHeight) ?
            (this.targetEle.offsetHeight - 20) + 'px' : (window.innerHeight - 20) + 'px';
        this.element.style.display = display;
        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isIE && this.height === 'auto' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.contentEle)
            && this.element.offsetHeight < this.contentEle.offsetHeight) {
            this.element.style.height = 'inherit';
        }
    };
    Dialog.prototype.setEnableRTL = function () {
        if (!this.isBlazorServerRender()) {
            // eslint-disable-next-line
            this.enableRtl ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], RTL) : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], RTL);
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element.querySelector('.e-resize-handle'))) {
            removeResize();
            this.setResize();
        }
    };
    Dialog.prototype.setTargetContent = function () {
        var _this = this;
        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.content) || this.content === '') {
            var isContent = this.element.innerHTML.replace(/\s|<(\/?|\/?)(!--!--)>/g, '') !== '';
            if (this.element.children.length > 0 || isContent) {
                this.innerContentElement = document.createDocumentFragment();
                [].slice.call(this.element.childNodes).forEach(function (el) {
                    if (el.nodeType !== 8) {
                        _this.innerContentElement.appendChild(el);
                    }
                });
            }
        }
    };
    Dialog.prototype.setHeader = function () {
        if (this.headerEle) {
            this.headerEle.innerHTML = '';
        }
        else {
            this.headerEle = this.createElement('div', { id: this.element.id + '_title', className: DLG_HEADER });
        }
        this.createHeaderContent();
        this.headerContent.appendChild(this.headerEle);
        this.setTemplate(this.header, this.headerEle, 'header');
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.element, { 'aria-labelledby': this.element.id });
        this.element.insertBefore(this.headerContent, this.element.children[0]);
        if (this.allowDragging && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.headerContent))) {
            this.setAllowDragging();
        }
    };
    Dialog.prototype.setFooterTemplate = function () {
        if (this.ftrTemplateContent) {
            this.ftrTemplateContent.innerHTML = '';
        }
        else {
            this.ftrTemplateContent = this.createElement('div', {
                className: DLG_FOOTER_CONTENT
            });
        }
        if (this.footerTemplate !== '' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.footerTemplate)) {
            this.setTemplate(this.footerTemplate, this.ftrTemplateContent, 'footerTemplate');
        }
        else {
            this.ftrTemplateContent.innerHTML = this.buttonContent.join('');
        }
        this.element.appendChild(this.ftrTemplateContent);
    };
    Dialog.prototype.createHeaderContent = function () {
        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.headerContent)) {
            this.headerContent = this.createElement('div', { id: this.element.id + '_dialog-header', className: DLG_HEADER_CONTENT });
        }
    };
    Dialog.prototype.renderCloseIcon = function () {
        if (this.showCloseIcon) {
            this.closeIcon = this.createElement('button', { className: DLG_CLOSE_ICON_BTN, attrs: { type: 'button' } });
            this.closeIconBtnObj = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_1__.Button({ cssClass: 'e-flat', iconCss: DLG_CLOSE_ICON + ' ' + ICON });
            this.closeIconTitle();
            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.headerContent)) {
                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.prepend)([this.closeIcon], this.headerContent);
            }
            else {
                this.createHeaderContent();
                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.prepend)([this.closeIcon], this.headerContent);
                this.element.insertBefore(this.headerContent, this.element.children[0]);
            }
            this.closeIconBtnObj.appendTo(this.closeIcon);
        }
    };
    Dialog.prototype.closeIconTitle = function () {
        this.l10n.setLocale(this.locale);
        var closeIconTitle = this.l10n.getConstant('close');
        this.closeIcon.setAttribute('title', closeIconTitle);
        this.closeIcon.setAttribute('aria-label', closeIconTitle);
    };
    Dialog.prototype.setCSSClass = function (oldCSSClass) {
        if (oldCSSClass) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], oldCSSClass.split(' '));
            if (this.isModal && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.dlgContainer)) {
                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.dlgContainer], oldCSSClass.split(' '));
            }
        }
        if (this.cssClass) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], this.cssClass.split(' '));
            if (this.isModal && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.dlgContainer)) {
                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.dlgContainer], this.cssClass.split(' '));
            }
        }
    };
    Dialog.prototype.setIsModal = function () {
        this.dlgContainer = this.createElement('div', { className: DLG_CONTAINER });
        this.setCSSClass();
        this.element.classList.remove(DLG_SHOW);
        this.element.parentNode.insertBefore(this.dlgContainer, this.element);
        this.dlgContainer.appendChild(this.element);
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], MODAL_DLG);
        this.dlgOverlay = this.createElement('div', { className: DLG_OVERLAY });
        this.dlgOverlay.style.zIndex = (this.zIndex - 1).toString();
        this.dlgContainer.appendChild(this.dlgOverlay);
    };
    Dialog.prototype.getValidFocusNode = function (items) {
        var node;
        for (var u = 0; u < items.length; u++) {
            node = items[u];
            if ((node.clientHeight > 0 || (node.tagName.toLowerCase() === 'a' && node.hasAttribute('href'))) && node.tabIndex > -1 &&
                !node.disabled && !this.disableElement(node, '[disabled],[aria-disabled="true"],[type="hidden"]')) {
                return node;
            }
            else {
                node = null;
            }
        }
        return node;
    };
    Dialog.prototype.focusableElements = function (content) {
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(content)) {
            var value = 'input,select,textarea,button,a,[contenteditable="true"],[tabindex]';
            var items = content.querySelectorAll(value);
            return this.getValidFocusNode(items);
        }
        return null;
    };
    Dialog.prototype.getAutoFocusNode = function (container) {
        var node = container.querySelector('.' + DLG_CLOSE_ICON_BTN);
        var value = '[autofocus]';
        var items = container.querySelectorAll(value);
        var validNode = this.getValidFocusNode(items);
        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)()) {
            this.primaryButtonEle = this.element.getElementsByClassName('e-primary')[0];
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(validNode)) {
            node = validNode;
        }
        else {
            validNode = this.focusableElements(this.contentEle);
            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(validNode)) {
                return node = validNode;
            }
            else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.primaryButtonEle)) {
                return this.element.querySelector('.' + DLG_PRIMARY_BUTTON);
            }
        }
        return node;
    };
    Dialog.prototype.disableElement = function (element, t) {
        // eslint-disable-next-line
        var elementMatch = element ? element.matches || element.webkitMatchesSelector || element.msGetRegionContent : null;
        if (elementMatch) {
            for (; element; element = element.parentNode) {
                if (element instanceof Element && elementMatch.call(element, t)) {
                    /* istanbul ignore next */
                    return element;
                }
            }
        }
        return null;
    };
    Dialog.prototype.focusContent = function () {
        var element = this.getAutoFocusNode(this.element);
        var node = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element) ? element : this.element;
        var userAgent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.userAgent;
        if (userAgent.indexOf('MSIE ') > 0 || userAgent.indexOf('Trident/') > 0) {
            this.element.focus();
        }
        node.focus();
        this.bindEvent(this.element);
    };
    Dialog.prototype.bindEvent = function (element) {
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(element, 'keydown', this.keyDown, this);
    };
    Dialog.prototype.unBindEvent = function (element) {
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(element, 'keydown', this.keyDown);
    };
    Dialog.prototype.updateSanitizeContent = function () {
        if (!this.isBlazorServerRender()) {
            this.contentEle.innerHTML = this.sanitizeHelper(this.content);
        }
    };
    Dialog.prototype.isBlazorServerRender = function () {
        return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)() && this.isServerRendered;
    };
    /**
     * Module required function
     *
     * @returns {void}
     * @private
     */
    Dialog.prototype.getModuleName = function () {
        return 'dialog';
    };
    /**
     * Called internally if any of the property value changed
     *
     * @param {DialogModel} newProp - specifies the new property
     * @param {DialogModel} oldProp - specifies the old property
     * @private
     * @returns {void}
     */
    Dialog.prototype.onPropertyChanged = function (newProp, oldProp) {
        if (!this.element.classList.contains(ROOT)) {
            return;
        }
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'content':
                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.content) && this.content !== '') {
                        if (this.isBlazorServerRender()) {
                            this.contentEle = this.element.querySelector('.e-dlg-content');
                        }
                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.contentEle) && this.contentEle.getAttribute('role') !== 'dialog') {
                            if (!this.isBlazorServerRender()) {
                                this.contentEle.innerHTML = '';
                            }
                            // eslint-disable-next-line
                            if (typeof (this.content) === 'function') {
                                this.clearTemplate(['content']);
                                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.contentEle);
                                this.contentEle = null;
                                this.setContent();
                            }
                            else {
                                typeof (this.content) === 'string' ? (this.isBlazorServerRender() && (this.contentEle.innerText === '')) ?
                                    this.contentEle.insertAdjacentHTML('beforeend', this.sanitizeHelper(this.content)) :
                                    this.updateSanitizeContent() : this.contentEle.appendChild(this.content);
                            }
                            this.setMaxHeight();
                        }
                        else {
                            if (!this.isBlazorServerRender() ||
                                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element.querySelector('.e-dlg-content'))) {
                                this.setContent();
                            }
                        }
                    }
                    else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.contentEle)) {
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.contentEle);
                        this.contentEle = null;
                    }
                    break;
                case 'header':
                    if (this.header === '' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.header)) {
                        if (this.headerEle) {
                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.headerEle);
                            this.headerEle = null;
                        }
                    }
                    else {
                        if (!this.isBlazorServerRender() ||
                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element.querySelector('.e-dlg-header-content'))) {
                            this.setHeader();
                        }
                    }
                    break;
                case 'footerTemplate':
                    if (this.footerTemplate === '' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.footerTemplate)) {
                        if (!this.ftrTemplateContent) {
                            return;
                        }
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.ftrTemplateContent);
                        this.ftrTemplateContent = null;
                        this.buttons = [{}];
                    }
                    else {
                        if (!this.isBlazorServerRender() ||
                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element.querySelector('.e-footer-content'))) {
                            this.setFooterTemplate();
                        }
                        this.buttons = [{}];
                    }
                    break;
                case 'showCloseIcon':
                    if (this.element.getElementsByClassName(DLG_CLOSE_ICON).length > 0) {
                        if (!this.showCloseIcon && (this.header === '' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.header))) {
                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.headerContent);
                            this.headerContent = null;
                        }
                        else if (!this.showCloseIcon) {
                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.closeIcon);
                        }
                        else {
                            if (this.isBlazorServerRender()) {
                                this.wireEvents();
                            }
                        }
                    }
                    else {
                        if (!this.isBlazorServerRender()) {
                            this.renderCloseIcon();
                        }
                        this.wireEvents();
                    }
                    break;
                case 'locale':
                    if (this.showCloseIcon) {
                        this.closeIconTitle();
                    }
                    break;
                case 'visible':
                    // eslint-disable-next-line
                    this.visible ? this.show() : this.hide();
                    break;
                case 'isModal':
                    this.updateIsModal();
                    break;
                case 'height':
                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.element, { 'height': (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(newProp.height) });
                    break;
                case 'width':
                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.element, { 'width': (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(newProp.width) });
                    break;
                case 'zIndex':
                    this.popupObj.zIndex = this.zIndex;
                    if (this.isModal) {
                        this.setOverlayZindex(this.zIndex);
                    }
                    if (this.element.style.zIndex !== this.zIndex.toString()) {
                        this.calculatezIndex = false;
                    }
                    break;
                case 'cssClass':
                    this.setCSSClass(oldProp.cssClass);
                    break;
                case 'buttons': {
                    var buttonCount = this.buttons.length;
                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.ftrTemplateContent) && !this.isBlazorServerRender()) {
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.ftrTemplateContent);
                        this.ftrTemplateContent = null;
                    }
                    for (var i = 0; i < buttonCount; i++) {
                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.buttons[i].buttonModel)) {
                            this.footerTemplate = '';
                            this.setButton();
                        }
                    }
                    break;
                }
                case 'allowDragging':
                    if (this.allowDragging && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.headerContent))) {
                        this.setAllowDragging();
                    }
                    else {
                        this.dragObj.destroy();
                    }
                    break;
                case 'target':
                    this.setTarget(newProp.target);
                    break;
                case 'position':
                    this.checkPositionData();
                    if (this.isModal) {
                        var positionX = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(oldProp.position.X) ? this.position.X : oldProp.position.X;
                        var positionY = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(oldProp.position.Y) ? this.position.Y : oldProp.position.Y;
                        if (this.dlgContainer.classList.contains('e-dlg-' + positionX + '-' + positionY)) {
                            this.dlgContainer.classList.remove('e-dlg-' + positionX + '-' + positionY);
                        }
                    }
                    this.positionChange();
                    break;
                case 'enableRtl':
                    this.setEnableRTL();
                    break;
                case 'enableResize':
                    this.setResize();
                    break;
                case 'minHeight':
                    if (this.minHeight !== '') {
                        this.element.style.minHeight = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.minHeight);
                    }
                    break;
            }
        }
    };
    Dialog.prototype.setTarget = function (target) {
        this.popupObj.relateTo = target;
        this.target = target;
        this.targetEle = ((typeof this.target) === 'string') ?
            document.querySelector(this.target) : this.target;
        if (this.dragObj) {
            this.dragObj.dragArea = this.targetEle;
        }
        this.setMaxHeight();
        if (this.isModal) {
            this.updateIsModal();
        }
        if (this.enableResize) {
            this.setResize();
        }
    };
    Dialog.prototype.updateIsModal = function () {
        this.element.setAttribute('aria-modal', this.isModal ? 'true' : 'false');
        if (this.isModal) {
            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.dlgOverlay)) {
                this.setIsModal();
                this.element.style.top = '0px';
                this.element.style.left = '0px';
                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.targetEle)) {
                    this.targetEle.appendChild(this.dlgContainer);
                }
            }
        }
        else {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], MODAL_DLG);
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([document.body], [DLG_TARGET, SCROLL_DISABLED]);
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.dlgOverlay);
            while (this.dlgContainer.firstChild) {
                this.dlgContainer.parentElement.insertBefore(this.dlgContainer.firstChild, this.dlgContainer);
            }
            this.dlgContainer.parentElement.removeChild(this.dlgContainer);
        }
        if (this.visible) {
            this.show();
        }
        this.positionChange();
        if (this.isModal && this.dlgOverlay) {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.dlgOverlay, 'click', this.dlgOverlayClickEventHandler, this);
        }
    };
    Dialog.prototype.setzIndex = function (zIndexElement, setPopupZindex) {
        var prevOnChange = this.isProtectedOnChange;
        this.isProtectedOnChange = true;
        this.zIndex = getZindexPartial(zIndexElement);
        this.isProtectedOnChange = prevOnChange;
        if (setPopupZindex) {
            this.popupObj.zIndex = this.zIndex;
        }
    };
    Dialog.prototype.windowResizeHandler = function () {
        setMaxWidth(this.targetEle.clientWidth);
        setMaxHeight(this.targetEle.clientHeight);
        this.setMaxHeight();
    };
    /**
     * Get the properties to be maintained in the persisted state.
     *
     * @returns {void}
     * @private
     */
    Dialog.prototype.getPersistData = function () {
        return this.addOnPersist([]);
    };
    /**
     * To destroy the widget
     *
     * @returns {void}
     */
    Dialog.prototype.destroy = function () {
        if (this.isDestroyed) {
            return;
        }
        var classArray = [RTL, MODAL_DLG, DLG_RESIZABLE, DLG_RESTRICT_LEFT_VALUE, FULLSCREEN, DEVICE];
        var attrs = ['role', 'aria-modal', 'aria-labelledby', 'aria-describedby', 'aria-grabbed', 'tabindex', 'style'];
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.targetEle], [DLG_TARGET, SCROLL_DISABLED]);
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element) && this.element.classList.contains(FULLSCREEN)) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([document.body], [DLG_TARGET, SCROLL_DISABLED]);
        }
        if (this.isModal) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([(!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.targetEle) ? this.targetEle : document.body)], SCROLL_DISABLED);
        }
        this.unWireEvents();
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.btnObj)) {
            for (var i = 0; i < this.btnObj.length; i++) {
                this.btnObj[i].destroy();
            }
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.dragObj)) {
            this.dragObj.destroy();
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.popupObj.element) && this.popupObj.element.classList.contains(POPUP_ROOT)) {
            this.popupObj.destroy();
        }
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], classArray);
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.cssClass) && this.cssClass !== '') {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], this.cssClass.split(' '));
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.refElement) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.refElement.parentElement)) {
            this.refElement.parentElement.insertBefore((this.isModal ? this.dlgContainer : this.element), this.refElement);
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.refElement);
            this.refElement = undefined;
        }
        if (this.isModal && !this.isBlazorServerRender()) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.dlgOverlay);
            this.dlgContainer.parentNode.insertBefore(this.element, this.dlgContainer);
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.dlgContainer);
        }
        if (!this.isBlazorServerRender()) {
            this.element.innerHTML = this.clonedEle.innerHTML;
        }
        if (this.isBlazorServerRender()) {
            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element.children)) {
                for (var i = 0; i <= this.element.children.length; i++) {
                    i = i - i;
                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(this.element.children[i]);
                }
            }
        }
        for (var i = 0; i < attrs.length; i++) {
            this.element.removeAttribute(attrs[i]);
        }
        if (!this.isBlazorServerRender()) {
            _super.prototype.destroy.call(this);
        }
        else {
            this.isDestroyed = true;
        }
        // eslint-disable-next-line
        if (this.isReact) {
            this.clearTemplate();
        }
    };
    Dialog.prototype.wireWindowResizeEvent = function () {
        window.addEventListener('resize', this.windowResizeHandler.bind(this));
    };
    Dialog.prototype.unWireWindowResizeEvent = function () {
        window.removeEventListener('resize', this.windowResizeHandler.bind(this));
    };
    /**
     * Binding event to the element while widget creation
     *
     * @returns {void}
     * @hidden
     */
    Dialog.prototype.wireEvents = function () {
        if (this.isBlazorServerRender() && this.showCloseIcon) {
            this.closeIcon = this.element.getElementsByClassName('e-dlg-closeicon-btn')[0];
        }
        if (this.showCloseIcon) {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.closeIcon, 'click', this.closeIconClickEventHandler, this);
        }
        if (this.isModal && this.dlgOverlay) {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.dlgOverlay, 'click', this.dlgOverlayClickEventHandler, this);
        }
    };
    /**
     * Unbinding event to the element while widget destroy
     *
     * @returns {void}
     * @hidden
     */
    Dialog.prototype.unWireEvents = function () {
        if (this.showCloseIcon) {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.closeIcon, 'click', this.closeIconClickEventHandler);
        }
        if (this.isModal) {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.dlgOverlay, 'click', this.dlgOverlayClickEventHandler);
        }
        if (this.buttons.length > 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.buttons[0].buttonModel) && this.footerTemplate === '') {
            for (var i = 0; i < this.buttons.length; i++) {
                if (typeof (this.buttons[i].click) === 'function') {
                    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.ftrTemplateContent.children[i], 'click', this.buttons[i].click);
                }
            }
        }
    };
    /**
     * Refreshes the dialog's position when the user changes its header and footer height/width dynamically.
     *
     * @returns {void}
     */
    Dialog.prototype.refreshPosition = function () {
        this.popupObj.refreshPosition();
    };
    /**
     * Returns the current width and height of the Dialog
     *
     * @returns {DialogDimension}
     * @public
     */
    Dialog.prototype.getDimension = function () {
        var dialogWidth = this.element.offsetWidth;
        var dialogHeight = this.element.offsetHeight;
        return { width: dialogWidth, height: dialogHeight };
    };
    /**
     * Opens the dialog if it is in hidden state.
     * To open the dialog with full screen width, set the parameter to true.
     *
     * @param { boolean } isFullScreen - Enable the fullScreen Dialog.
     * @returns {void}
     */
    Dialog.prototype.show = function (isFullScreen) {
        var _this = this;
        if (!this.element.classList.contains(ROOT)) {
            return;
        }
        if (!this.element.classList.contains(DLG_SHOW) || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isFullScreen))) {
            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isFullScreen)) {
                this.fullScreen(isFullScreen);
            }
            var eventArgs_1 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)() ? {
                cancel: false,
                element: this.element,
                container: this.isModal ? this.dlgContainer : this.element,
                maxHeight: this.element.style.maxHeight
            } : {
                cancel: false,
                element: this.element,
                container: this.isModal ? this.dlgContainer : this.element,
                target: this.target,
                maxHeight: this.element.style.maxHeight
            };
            this.trigger('beforeOpen', eventArgs_1, function (beforeOpenArgs) {
                if (!beforeOpenArgs.cancel) {
                    if (_this.element.style.maxHeight !== eventArgs_1.maxHeight) {
                        _this.allowMaxHeight = false;
                        _this.element.style.maxHeight = eventArgs_1.maxHeight;
                    }
                    _this.storeActiveElement = document.activeElement;
                    _this.element.tabIndex = -1;
                    if (_this.isModal && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.dlgOverlay))) {
                        _this.dlgOverlay.style.display = 'block';
                        _this.dlgContainer.style.display = 'flex';
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([_this.dlgOverlay], 'e-fade');
                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.targetEle)) {
                            if (_this.targetEle === document.body) {
                                _this.dlgContainer.style.position = 'fixed';
                            }
                            else {
                                _this.dlgContainer.style.position = 'absolute';
                            }
                            _this.dlgOverlay.style.position = 'absolute';
                            _this.element.style.position = 'relative';
                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([_this.targetEle], [DLG_TARGET, SCROLL_DISABLED]);
                        }
                        else {
                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([document.body], [DLG_TARGET, SCROLL_DISABLED]);
                        }
                    }
                    // eslint-disable-next-line
                    var openAnimation = {
                        name: _this.animationSettings.effect + 'In',
                        duration: _this.animationSettings.duration,
                        delay: _this.animationSettings.delay
                    };
                    var zIndexElement = (_this.isModal) ? _this.element.parentElement : _this.element;
                    if (_this.calculatezIndex) {
                        _this.setzIndex(zIndexElement, true);
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(_this.element, { 'zIndex': _this.zIndex });
                        if (_this.isModal) {
                            _this.setOverlayZindex(_this.zIndex);
                        }
                    }
                    // eslint-disable-next-line
                    _this.animationSettings.effect === 'None' ? _this.popupObj.show() : _this.popupObj.show(openAnimation);
                    _this.dialogOpen = true;
                    var prevOnChange = _this.isProtectedOnChange;
                    _this.isProtectedOnChange = true;
                    _this.visible = true;
                    _this.preventVisibility = true;
                    _this.isProtectedOnChange = prevOnChange;
                }
            });
        }
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        if (this.isReact) {
            this.renderReactTemplates();
        }
    };
    /**
     * Closes the dialog if it is in visible state.
     *
     * @param { Event } event - specifies the event
     * @returns {void}
     */
    Dialog.prototype.hide = function (event) {
        var _this = this;
        if (!this.element.classList.contains(ROOT)) {
            return;
        }
        if (this.preventVisibility) {
            var eventArgs = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isBlazor)() ? {
                cancel: false,
                isInteracted: event ? true : false,
                element: this.element,
                container: this.isModal ? this.dlgContainer : this.element,
                event: event
            } : {
                cancel: false,
                isInteracted: event ? true : false,
                element: this.element,
                target: this.target,
                container: this.isModal ? this.dlgContainer : this.element,
                event: event,
                closedBy: this.dlgClosedBy
            };
            this.closeArgs = eventArgs;
            this.trigger('beforeClose', eventArgs, function (beforeCloseArgs) {
                if (!beforeCloseArgs.cancel) {
                    if (_this.isModal) {
                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.targetEle)) {
                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([_this.targetEle], [DLG_TARGET, SCROLL_DISABLED]);
                        }
                    }
                    if (document.body.classList.contains(DLG_TARGET) &&
                        document.body.classList.contains(SCROLL_DISABLED)) {
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([document.body], [DLG_TARGET, SCROLL_DISABLED]);
                    }
                    // eslint-disable-next-line
                    var closeAnimation = {
                        name: _this.animationSettings.effect + 'Out',
                        duration: _this.animationSettings.duration,
                        delay: _this.animationSettings.delay
                    };
                    // eslint-disable-next-line
                    _this.animationSettings.effect === 'None' ? _this.popupObj.hide() : _this.popupObj.hide(closeAnimation);
                    _this.dialogOpen = false;
                    var prevOnChange = _this.isProtectedOnChange;
                    _this.isProtectedOnChange = true;
                    _this.visible = false;
                    _this.preventVisibility = false;
                    _this.isProtectedOnChange = prevOnChange;
                }
                _this.dlgClosedBy = DLG_USER_ACTION_CLOSED;
            });
        }
    };
    // eslint-disable-next-line
    /**
     * Specifies to view the Full screen Dialog.
     *
     * @returns {void}
     * @private
     */
    Dialog.prototype.fullScreen = function (args) {
        /* eslint-disable */
        var top = this.element.offsetTop;
        var left = this.element.offsetLeft;
        /* eslint-enable */
        if (args) {
            this.element.style.top = document.scrollingElement.scrollTop + 'px';
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], FULLSCREEN);
            var display = this.element.style.display;
            this.element.style.display = 'none';
            this.element.style.maxHeight = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.target)) ?
                (this.targetEle.offsetHeight) + 'px' : (window.innerHeight) + 'px';
            this.element.style.display = display;
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([document.body], [DLG_TARGET, SCROLL_DISABLED]);
            if (this.allowDragging && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.dragObj)) {
                this.dragObj.destroy();
            }
        }
        else {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], FULLSCREEN);
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([document.body], [DLG_TARGET, SCROLL_DISABLED]);
            if (this.allowDragging && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.headerContent))) {
                this.setAllowDragging();
            }
        }
        return args;
    };
    /**
     * Returns the dialog button instances.
     * Based on that, you can dynamically change the button states.
     *
     * @param { number } index - Index of the button.
     * @returns {Button} - returns the button element
     */
    Dialog.prototype.getButtons = function (index) {
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(index)) {
            return this.btnObj[index];
        }
        return this.btnObj;
    };
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], Dialog.prototype, "content", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)
    ], Dialog.prototype, "enableHtmlSanitizer", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], Dialog.prototype, "showCloseIcon", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], Dialog.prototype, "isModal", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], Dialog.prototype, "header", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)
    ], Dialog.prototype, "visible", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], Dialog.prototype, "enableResize", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(['South-East'])
    ], Dialog.prototype, "resizeHandles", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('auto')
    ], Dialog.prototype, "height", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], Dialog.prototype, "minHeight", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('100%')
    ], Dialog.prototype, "width", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], Dialog.prototype, "cssClass", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(1000)
    ], Dialog.prototype, "zIndex", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)
    ], Dialog.prototype, "target", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')
    ], Dialog.prototype, "footerTemplate", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], Dialog.prototype, "allowDragging", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Collection)([{}], ButtonProps)
    ], Dialog.prototype, "buttons", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)
    ], Dialog.prototype, "closeOnEscape", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, AnimationSettings)
    ], Dialog.prototype, "animationSettings", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({ X: 'center', Y: 'center' }, PositionData)
    ], Dialog.prototype, "position", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Dialog.prototype, "created", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Dialog.prototype, "open", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Dialog.prototype, "beforeSanitizeHtml", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Dialog.prototype, "beforeOpen", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Dialog.prototype, "close", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Dialog.prototype, "beforeClose", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Dialog.prototype, "dragStart", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Dialog.prototype, "dragStop", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Dialog.prototype, "drag", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Dialog.prototype, "overlayClick", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Dialog.prototype, "resizeStart", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Dialog.prototype, "resizing", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Dialog.prototype, "resizeStop", void 0);
    __decorate$1([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Dialog.prototype, "destroyed", void 0);
    Dialog = __decorate$1([
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges
    ], Dialog);
    return Dialog;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));
/**
 * Base for creating Alert and Confirmation Dialog through util method.
 */
// eslint-disable-next-line
var DialogUtility;
(function (DialogUtility) {
    /**
     * An alert dialog box is used to display warning like messages to the users.
     * ```
     * Eg : DialogUtility.alert('Alert message');
     *
     * ```
     */
    /* istanbul ignore next */
    /**
     *
     * @param {AlertDialogArgs} args - specifies the string
     * @returns {Dialog} - returns the dialog element.
     */
    function alert(args) {
        // eslint-disable-next-line
        var dialogElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { 'className': DLG_UTIL_ALERT });
        document.body.appendChild(dialogElement);
        var alertDialogObj;
        var okButtonModel = [{
                buttonModel: { isPrimary: true, content: 'OK' },
                click: function () {
                    this.hide();
                }
            }];
        if (typeof (args) === 'string') {
            alertDialogObj = createDialog({ content: args,
                position: { X: 'center', Y: 'top' },
                isModal: true, header: DLG_UTIL_DEFAULT_TITLE,
                buttons: okButtonModel }, dialogElement);
        }
        else {
            alertDialogObj = createDialog(alertOptions(args), dialogElement);
        }
        alertDialogObj.close = function () {
            if (args && args.close) {
                args.close.apply(alertDialogObj);
            }
            alertDialogObj.destroy();
            if (alertDialogObj.element.classList.contains('e-dlg-modal')) {
                alertDialogObj.element.parentElement.remove();
                alertDialogObj.target.classList.remove(DLG_UTIL_ROOT);
            }
            else {
                alertDialogObj.element.remove();
            }
        };
        return alertDialogObj;
    }
    DialogUtility.alert = alert;
    /**
     * A confirm dialog displays a specified message along with ‘OK’ and ‘Cancel’ button.
     * ```
     * Eg : DialogUtility.confirm('Confirm dialog message');
     *
     * ```
     */
    /* istanbul ignore next */
    /**
     *
     * @param {ConfirmDialogArgs} args - specifies the args
     * @returns {Dialog} - returns te element
     */
    function confirm(args) {
        // eslint-disable-next-line
        var dialogElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { 'className': DLG_UTIL_CONFIRM });
        document.body.appendChild(dialogElement);
        var confirmDialogObj;
        var okCancelButtonModel = [{
                buttonModel: { isPrimary: true, content: 'OK' },
                click: function () {
                    this.hide();
                }
            }, {
                buttonModel: { content: 'Cancel' },
                click: function () {
                    this.hide();
                }
            }];
        if (typeof (args) === 'string') {
            confirmDialogObj = createDialog({ position: { X: 'center', Y: 'top' }, content: args, isModal: true,
                header: DLG_UTIL_DEFAULT_TITLE, buttons: okCancelButtonModel
            }, dialogElement);
        }
        else {
            confirmDialogObj = createDialog(confirmOptions(args), dialogElement);
        }
        confirmDialogObj.close = function () {
            if (args && args.close) {
                args.close.apply(confirmDialogObj);
            }
            confirmDialogObj.destroy();
            if (confirmDialogObj.element.classList.contains('e-dlg-modal')) {
                confirmDialogObj.element.parentElement.remove();
                confirmDialogObj.target.classList.remove(DLG_UTIL_ROOT);
            }
            else {
                confirmDialogObj.element.remove();
            }
        };
        return confirmDialogObj;
    }
    DialogUtility.confirm = confirm;
    // eslint-disable-next-line
    function createDialog(options, element) {
        var dialogObject = new Dialog(options);
        dialogObject.appendTo(element);
        return dialogObject;
    }
    // eslint-disable-next-line
    function alertOptions(option) {
        var options = {};
        options.buttons = [];
        options = formOptions(options, option);
        options = setAlertButtonModel(options, option);
        return options;
    }
    // eslint-disable-next-line
    function confirmOptions(option) {
        var options = {};
        options.buttons = [];
        options = formOptions(options, option);
        options = setConfirmButtonModel(options, option);
        return options;
    }
    // eslint-disable-next-line
    function formOptions(options, option) {
        options.header = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(option.title) ? option.title : DLG_UTIL_DEFAULT_TITLE;
        options.content = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(option.content) ? option.content : '';
        options.isModal = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(option.isModal) ? option.isModal : true;
        options.showCloseIcon = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(option.showCloseIcon) ? option.showCloseIcon : false;
        options.allowDragging = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(option.isDraggable) ? option.isDraggable : false;
        options.closeOnEscape = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(option.closeOnEscape) ? option.closeOnEscape : false;
        options.position = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(option.position) ? option.position : { X: 'center', Y: 'top' };
        options.animationSettings = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(option.animationSettings) ? option.animationSettings :
            { effect: 'Fade', duration: 400, delay: 0 };
        options.cssClass = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(option.cssClass) ? option.cssClass : '';
        options.zIndex = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(option.zIndex) ? option.zIndex : 1000;
        options.open = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(option.open) ? option.open : null;
        options.width = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(option.width) ? option.width : '100%';
        options.height = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(option.height) ? option.height : 'auto';
        return options;
    }
    // eslint-disable-next-line
    function setAlertButtonModel(options, option) {
        var alertButtonModel = [{
                buttonModel: { isPrimary: true, content: 'OK' },
                click: function () {
                    this.hide();
                }
            }];
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(option.okButton)) {
            options.buttons[0] = formButtonModel(options.buttons[0], option.okButton, alertButtonModel[0]);
        }
        else {
            options.buttons = alertButtonModel;
        }
        return options;
    }
    // eslint-disable-next-line
    function setConfirmButtonModel(options, option) {
        var okButtonModel = {
            buttonModel: { isPrimary: true, content: 'OK' },
            click: function () {
                this.hide();
            }
        };
        var cancelButtonModel = {
            buttonModel: { content: 'Cancel' },
            click: function () {
                this.hide();
            }
        };
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(option.okButton)) {
            options.buttons[0] = formButtonModel(options.buttons[0], option.okButton, okButtonModel);
        }
        else {
            options.buttons[0] = okButtonModel;
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(option.cancelButton)) {
            options.buttons[1] = formButtonModel(options.buttons[1], option.cancelButton, cancelButtonModel);
        }
        else {
            options.buttons[1] = cancelButtonModel;
        }
        return options;
    }
    // eslint-disable-next-line
    function formButtonModel(buttonModel, option, buttonPropModel) {
        var buttonProps = buttonPropModel;
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(option.text)) {
            buttonProps.buttonModel.content = option.text;
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(option.icon)) {
            buttonProps.buttonModel.iconCss = option.icon;
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(option.cssClass)) {
            buttonProps.buttonModel.cssClass = option.cssClass;
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(option.click)) {
            buttonProps.click = option.click;
        }
        return buttonProps;
    }
})(DialogUtility || (DialogUtility = {}));

/**
 * Dialog Component
 */

var __extends$2 = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate$2 = ( false) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TOUCHEND_HIDE_DELAY = 1500;
var TAPHOLD_THRESHOLD = 500;
var SHOW_POINTER_TIP_GAP = 0;
var HIDE_POINTER_TIP_GAP = 8;
var MOUSE_TRAIL_GAP = 2;
var POINTER_ADJUST = 2;
var ROOT$1 = 'e-tooltip';
var RTL$1 = 'e-rtl';
var DEVICE$1 = 'e-bigger';
var ICON$1 = 'e-icons';
var CLOSE = 'e-tooltip-close';
var TOOLTIP_WRAP = 'e-tooltip-wrap';
var CONTENT = 'e-tip-content';
var ARROW_TIP = 'e-arrow-tip';
var ARROW_TIP_OUTER = 'e-arrow-tip-outer';
var ARROW_TIP_INNER = 'e-arrow-tip-inner';
var TIP_BOTTOM = 'e-tip-bottom';
var TIP_TOP = 'e-tip-top';
var TIP_LEFT = 'e-tip-left';
var TIP_RIGHT = 'e-tip-right';
var POPUP_ROOT$1 = 'e-popup';
var POPUP_OPEN = 'e-popup-open';
var POPUP_CLOSE = 'e-popup-close';
var POPUP_LIB = 'e-lib';
var HIDE_POPUP = 'e-hidden';
var POPUP_CONTAINER = 'e-tooltip-popup-container';
var Animation$1 = /** @__PURE__ @class */ (function (_super) {
    __extends$2(Animation$$1, _super);
    function Animation$$1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)({ effect: 'FadeIn', duration: 150, delay: 0 })
    ], Animation$$1.prototype, "open", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)({ effect: 'FadeOut', duration: 150, delay: 0 })
    ], Animation$$1.prototype, "close", void 0);
    return Animation$$1;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));
/**
 * Represents the Tooltip component that displays a piece of information about the target element on mouse hover.
 * ```html
 * <div id="tooltip">Show Tooltip</div>
 * ```
 * ```typescript
 * <script>
 *   var tooltipObj = new Tooltip({ content: 'Tooltip text' });
 *   tooltipObj.appendTo("#tooltip");
 * </script>
 * ```
 */
var Tooltip = /** @__PURE__ @class */ (function (_super) {
    __extends$2(Tooltip, _super);
    /* eslint-enable */
    /**
     * Constructor for creating the Tooltip Component
     *
     * @param {TooltipModel} options - specifies the options for the constructor
     * @param {string| HTMLElement} element - specifies the element for the constructor
     *
     */
    function Tooltip(options, element) {
        var _this = _super.call(this, options, element) || this;
        _this.mouseMoveEvent = null;
        _this.mouseMoveTarget = null;
        _this.containerElement = null;
        _this.isBodyContainer = true;
        return _this;
    }
    Tooltip.prototype.initialize = function () {
        this.formatPosition();
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], ROOT$1);
    };
    Tooltip.prototype.formatPosition = function () {
        var _a, _b;
        if (this.position.indexOf('Top') === 0 || this.position.indexOf('Bottom') === 0) {
            _a = this.position.split(/(?=[A-Z])/), this.tooltipPositionY = _a[0], this.tooltipPositionX = _a[1];
        }
        else {
            _b = this.position.split(/(?=[A-Z])/), this.tooltipPositionX = _b[0], this.tooltipPositionY = _b[1];
        }
    };
    Tooltip.prototype.renderArrow = function () {
        this.setTipClass(this.position);
        var tip = this.createElement('div', { className: ARROW_TIP + ' ' + this.tipClass });
        tip.appendChild(this.createElement('div', { className: ARROW_TIP_OUTER + ' ' + this.tipClass }));
        tip.appendChild(this.createElement('div', { className: ARROW_TIP_INNER + ' ' + this.tipClass }));
        this.tooltipEle.appendChild(tip);
    };
    Tooltip.prototype.setTipClass = function (position) {
        if (position.indexOf('Right') === 0) {
            this.tipClass = TIP_LEFT;
        }
        else if (position.indexOf('Bottom') === 0) {
            this.tipClass = TIP_TOP;
        }
        else if (position.indexOf('Left') === 0) {
            this.tipClass = TIP_RIGHT;
        }
        else {
            this.tipClass = TIP_BOTTOM;
        }
    };
    Tooltip.prototype.renderPopup = function (target) {
        var elePos = this.mouseTrail ? { top: 0, left: 0 } : this.getTooltipPosition(target);
        this.tooltipEle.classList.remove(POPUP_LIB);
        this.popupObj = new Popup(this.tooltipEle, {
            height: this.height,
            width: this.width,
            position: { X: elePos.left, Y: elePos.top },
            enableRtl: this.enableRtl,
            open: this.openPopupHandler.bind(this),
            close: this.closePopupHandler.bind(this)
        });
    };
    Tooltip.prototype.getTooltipPosition = function (target) {
        this.tooltipEle.style.display = 'block';
        var pos = calculatePosition(target, this.tooltipPositionX, this.tooltipPositionY, !this.isBodyContainer, this.isBodyContainer ? null : this.containerElement.getBoundingClientRect());
        var offsetPos = this.calculateTooltipOffset(this.position);
        var collisionPosition = this.calculateElementPosition(pos, offsetPos);
        var collisionLeft = collisionPosition[0];
        var collisionTop = collisionPosition[1];
        var elePos = this.collisionFlipFit(target, collisionLeft, collisionTop);
        this.tooltipEle.style.display = '';
        return elePos;
    };
    Tooltip.prototype.windowResize = function () {
        this.reposition(this.findTarget());
    };
    Tooltip.prototype.reposition = function (target) {
        if (this.popupObj && target) {
            var elePos = this.getTooltipPosition(target);
            this.popupObj.position = { X: elePos.left, Y: elePos.top };
            this.popupObj.dataBind();
        }
    };
    Tooltip.prototype.openPopupHandler = function () {
        if (!this.mouseTrail && this.needTemplateReposition()) {
            this.reposition(this.findTarget());
        }
        this.trigger('afterOpen', this.tooltipEventArgs);
    };
    Tooltip.prototype.closePopupHandler = function () {
        this.clearTemplate(['content']);
        this.clear();
        this.trigger('afterClose', this.tooltipEventArgs);
    };
    Tooltip.prototype.calculateTooltipOffset = function (position) {
        var pos = { top: 0, left: 0 };
        var tooltipEleWidth = this.tooltipEle.offsetWidth;
        var tooltipEleHeight = this.tooltipEle.offsetHeight;
        var arrowEle = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('.' + ARROW_TIP, this.tooltipEle);
        var tipWidth = arrowEle ? arrowEle.offsetWidth : 0;
        var tipHeight = arrowEle ? arrowEle.offsetHeight : 0;
        var tipAdjust = (this.showTipPointer ? SHOW_POINTER_TIP_GAP : HIDE_POINTER_TIP_GAP);
        var tipHeightAdjust = (tipHeight / 2) + POINTER_ADJUST + (this.tooltipEle.offsetHeight - this.tooltipEle.clientHeight);
        var tipWidthAdjust = (tipWidth / 2) + POINTER_ADJUST + (this.tooltipEle.offsetWidth - this.tooltipEle.clientWidth);
        if (this.mouseTrail) {
            tipAdjust += MOUSE_TRAIL_GAP;
        }
        switch (position) {
            case 'RightTop':
                pos.left += tipWidth + tipAdjust;
                pos.top -= tooltipEleHeight - tipHeightAdjust;
                break;
            case 'RightCenter':
                pos.left += tipWidth + tipAdjust;
                pos.top -= (tooltipEleHeight / 2);
                break;
            case 'RightBottom':
                pos.left += tipWidth + tipAdjust;
                pos.top -= (tipHeightAdjust);
                break;
            case 'BottomRight':
                pos.top += (tipHeight + tipAdjust);
                pos.left -= (tipWidthAdjust);
                break;
            case 'BottomCenter':
                pos.top += (tipHeight + tipAdjust);
                pos.left -= (tooltipEleWidth / 2);
                break;
            case 'BottomLeft':
                pos.top += (tipHeight + tipAdjust);
                pos.left -= (tooltipEleWidth - tipWidthAdjust);
                break;
            case 'LeftBottom':
                pos.left -= (tipWidth + tooltipEleWidth + tipAdjust);
                pos.top -= (tipHeightAdjust);
                break;
            case 'LeftCenter':
                pos.left -= (tipWidth + tooltipEleWidth + tipAdjust);
                pos.top -= (tooltipEleHeight / 2);
                break;
            case 'LeftTop':
                pos.left -= (tipWidth + tooltipEleWidth + tipAdjust);
                pos.top -= (tooltipEleHeight - tipHeightAdjust);
                break;
            case 'TopLeft':
                pos.top -= (tooltipEleHeight + tipHeight + tipAdjust);
                pos.left -= (tooltipEleWidth - tipWidthAdjust);
                break;
            case 'TopRight':
                pos.top -= (tooltipEleHeight + tipHeight + tipAdjust);
                pos.left -= (tipWidthAdjust);
                break;
            default:
                pos.top -= (tooltipEleHeight + tipHeight + tipAdjust);
                pos.left -= (tooltipEleWidth / 2);
                break;
        }
        pos.left += this.offsetX;
        pos.top += this.offsetY;
        return pos;
    };
    Tooltip.prototype.updateTipPosition = function (position) {
        var selEle = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)('.' + ARROW_TIP + ',.' + ARROW_TIP_OUTER + ',.' + ARROW_TIP_INNER, this.tooltipEle);
        var removeList = [TIP_BOTTOM, TIP_TOP, TIP_LEFT, TIP_RIGHT];
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(selEle, removeList);
        this.setTipClass(position);
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)(selEle, this.tipClass);
    };
    Tooltip.prototype.adjustArrow = function (target, position, tooltipPositionX, tooltipPositionY) {
        if (this.showTipPointer === false) {
            return;
        }
        this.updateTipPosition(position);
        var leftValue;
        var topValue;
        this.tooltipEle.style.display = 'block';
        var tooltipWidth = this.tooltipEle.clientWidth;
        var tooltipHeight = this.tooltipEle.clientHeight;
        var arrowEle = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('.' + ARROW_TIP, this.tooltipEle);
        var arrowInnerELe = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('.' + ARROW_TIP_INNER, this.tooltipEle);
        var tipWidth = arrowEle.offsetWidth;
        var tipHeight = arrowEle.offsetHeight;
        this.tooltipEle.style.display = '';
        if (this.tipClass === TIP_BOTTOM || this.tipClass === TIP_TOP) {
            if (this.tipClass === TIP_BOTTOM) {
                topValue = '99.9%';
                // Arrow icon aligned -2px height from ArrowOuterTip div
                arrowInnerELe.style.top = '-' + (tipHeight - 2) + 'px';
            }
            else {
                topValue = -(tipHeight - 1) + 'px';
                // Arrow icon aligned -6px height from ArrowOuterTip div
                arrowInnerELe.style.top = '-' + (tipHeight - 6) + 'px';
            }
            if (target) {
                var tipPosExclude = tooltipPositionX !== 'Center' || (tooltipWidth > target.offsetWidth) || this.mouseTrail;
                if ((tipPosExclude && tooltipPositionX === 'Left') || (!tipPosExclude && this.tipPointerPosition === 'End')) {
                    leftValue = (tooltipWidth - tipWidth - POINTER_ADJUST) + 'px';
                }
                else if ((tipPosExclude && tooltipPositionX === 'Right') || (!tipPosExclude && this.tipPointerPosition === 'Start')) {
                    leftValue = POINTER_ADJUST + 'px';
                }
                else if ((tipPosExclude) && (this.tipPointerPosition === 'End' || this.tipPointerPosition === 'Start')) {
                    leftValue = (this.tipPointerPosition === 'End') ? ((target.offsetWidth + ((this.tooltipEle.offsetWidth - target.offsetWidth) / 2)) - (tipWidth / 2)) - POINTER_ADJUST + 'px'
                        : ((this.tooltipEle.offsetWidth - target.offsetWidth) / 2) - (tipWidth / 2) + POINTER_ADJUST + 'px';
                }
                else {
                    leftValue = ((tooltipWidth / 2) - (tipWidth / 2)) + 'px';
                }
            }
        }
        else {
            if (this.tipClass === TIP_RIGHT) {
                leftValue = '99.9%';
                // Arrow icon aligned -2px left from ArrowOuterTip div
                arrowInnerELe.style.left = '-' + (tipWidth - 2) + 'px';
            }
            else {
                leftValue = -(tipWidth - 1) + 'px';
                // Arrow icon aligned -2px from ArrowOuterTip width
                arrowInnerELe.style.left = (-(tipWidth) + (tipWidth - 2)) + 'px';
            }
            var tipPosExclude = tooltipPositionY !== 'Center' || (tooltipHeight > target.offsetHeight) || this.mouseTrail;
            if ((tipPosExclude && tooltipPositionY === 'Top') || (!tipPosExclude && this.tipPointerPosition === 'End')) {
                topValue = (tooltipHeight - tipHeight - POINTER_ADJUST) + 'px';
            }
            else if ((tipPosExclude && tooltipPositionY === 'Bottom') || (!tipPosExclude && this.tipPointerPosition === 'Start')) {
                topValue = POINTER_ADJUST + 'px';
            }
            else {
                topValue = ((tooltipHeight / 2) - (tipHeight / 2)) + 'px';
            }
        }
        arrowEle.style.top = topValue;
        arrowEle.style.left = leftValue;
    };
    Tooltip.prototype.renderContent = function (target) {
        var tooltipContent = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('.' + CONTENT, this.tooltipEle);
        if (this.cssClass) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.tooltipEle], this.cssClass.split(' '));
        }
        if (target && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(target.getAttribute('title'))) {
            target.setAttribute('data-content', target.getAttribute('title'));
            target.removeAttribute('title');
        }
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.content)) {
            tooltipContent.innerHTML = '';
            if (this.content instanceof HTMLElement) {
                tooltipContent.appendChild(this.content);
            }
            else if (typeof this.content === 'string') {
                if (this.enableHtmlSanitizer) {
                    this.setProperties({ content: _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlHelper.sanitize(this.content) }, true);
                }
                // eslint-disable-next-line
                var tempFunction = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(this.content);
                var tempArr = tempFunction({}, this, 'content', this.element.id + 'content', undefined, undefined, tooltipContent);
                if (tempArr) {
                    if (this.enableHtmlParse) {
                        var nodeList = tempArr.length;
                        for (var i = 0; i < nodeList; i++) {
                            tooltipContent[(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.append)(tempArr, tooltipContent), 'innerHTML'] = this.content;
                        }
                    }
                    else {
                        tooltipContent['textContent'] = this.content;
                    }
                }
            }
            else {
                // eslint-disable-next-line
                var templateFunction = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(this.content);
                var tempArr = templateFunction({}, this, 'content', this.element.id + 'content', undefined, undefined, tooltipContent);
                if (tempArr) {
                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.append)(tempArr, tooltipContent);
                }
                this.renderReactTemplates();
            }
        }
        else {
            if (target && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(target.getAttribute('data-content'))) {
                tooltipContent.innerHTML = target.getAttribute('data-content');
            }
        }
    };
    Tooltip.prototype.renderCloseIcon = function () {
        if (!this.isSticky) {
            return;
        }
        var tipClose = this.createElement('div', { className: ICON$1 + ' ' + CLOSE });
        this.tooltipEle.appendChild(tipClose);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(tipClose, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchStartEvent, this.onStickyClose, this);
    };
    Tooltip.prototype.addDescribedBy = function (target, id) {
        var describedby = (target.getAttribute('aria-describedby') || '').split(/\s+/);
        if (describedby.indexOf(id) < 0) {
            describedby.push(id);
        }
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(target, { 'aria-describedby': describedby.join(' ').trim(), 'data-tooltip-id': id });
    };
    Tooltip.prototype.removeDescribedBy = function (target) {
        var id = target.getAttribute('data-tooltip-id');
        var describedby = (target.getAttribute('aria-describedby') || '').split(/\s+/);
        var index = describedby.indexOf(id);
        if (index !== -1) {
            describedby.splice(index, 1);
        }
        target.removeAttribute('data-tooltip-id');
        var orgdescribedby = describedby.join(' ').trim();
        if (orgdescribedby) {
            target.setAttribute('aria-describedby', orgdescribedby);
        }
        else {
            target.removeAttribute('aria-describedby');
        }
    };
    Tooltip.prototype.tapHoldHandler = function (evt) {
        clearTimeout(this.autoCloseTimer);
        this.targetHover(evt.originalEvent);
    };
    Tooltip.prototype.touchEndHandler = function (e) {
        var _this = this;
        if (this.isSticky) {
            return;
        }
        // eslint-disable-next-line
        var close = function () {
            _this.close();
        };
        this.autoCloseTimer = setTimeout(close, TOUCHEND_HIDE_DELAY);
    };
    Tooltip.prototype.targetClick = function (e) {
        var target;
        if (this.target) {
            target = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, this.target);
        }
        else {
            target = this.element;
        }
        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(target)) {
            return;
        }
        if (target.getAttribute('data-tooltip-id') === null) {
            this.targetHover(e);
        }
        else if (!this.isSticky) {
            this.hideTooltip(this.animation.close, e, target);
        }
    };
    Tooltip.prototype.targetHover = function (e) {
        var target;
        if (this.target) {
            target = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, this.target);
        }
        else {
            target = this.element;
        }
        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(target) || (target.getAttribute('data-tooltip-id') !== null && this.closeDelay === 0)) {
            return;
        }
        var targetList = [].slice.call((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)('[data-tooltip-id= "' + this.ctrlId + '_content"]', document));
        for (var _i = 0, targetList_1 = targetList; _i < targetList_1.length; _i++) {
            var target_1 = targetList_1[_i];
            this.restoreElement(target_1);
        }
        this.showTooltip(target, this.animation.open, e);
    };
    Tooltip.prototype.mouseMoveBeforeOpen = function (e) {
        this.mouseMoveEvent = e;
    };
    Tooltip.prototype.mouseMoveBeforeRemove = function () {
        if (this.mouseMoveTarget) {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.mouseMoveTarget, 'mousemove touchstart', this.mouseMoveBeforeOpen);
        }
    };
    Tooltip.prototype.showTooltip = function (target, showAnimation, e) {
        var _this = this;
        clearTimeout(this.showTimer);
        clearTimeout(this.hideTimer);
        if (this.openDelay && this.mouseTrail) {
            this.mouseMoveBeforeRemove();
            this.mouseMoveTarget = target;
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.mouseMoveTarget, 'mousemove touchstart', this.mouseMoveBeforeOpen, this);
        }
        this.tooltipEventArgs = {
            type: e ? e.type : null, cancel: false, target: target, event: e ? e : null,
            element: this.tooltipEle, isInteracted: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e)
        };
        // eslint-disable-next-line
        var observeCallback = function (beforeRenderArgs) {
            _this.beforeRenderCallback(beforeRenderArgs, target, e, showAnimation);
        };
        this.trigger('beforeRender', this.tooltipEventArgs, observeCallback.bind(this));
    };
    Tooltip.prototype.beforeRenderCallback = function (beforeRenderArgs, target, e, showAnimation) {
        if (beforeRenderArgs.cancel) {
            this.isHidden = true;
            this.clear();
            this.mouseMoveBeforeRemove();
        }
        else {
            this.isHidden = false;
            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.tooltipEle)) {
                this.ctrlId = this.element.getAttribute('id') ?
                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getUniqueID)(this.element.getAttribute('id')) : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getUniqueID)('tooltip');
                this.tooltipEle = this.createElement('div', {
                    className: TOOLTIP_WRAP + ' ' + POPUP_ROOT$1 + ' ' + POPUP_LIB, attrs: {
                        role: 'tooltip', 'aria-hidden': 'false', 'id': this.ctrlId + '_content'
                    }, styles: 'width:' +
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.width) + ';height:' + (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.height) + ';position:absolute;'
                });
                this.tooltipBeforeRender(target, this);
                this.tooltipAfterRender(target, e, showAnimation, this);
            }
            else {
                if (target) {
                    this.adjustArrow(target, this.position, this.tooltipPositionX, this.tooltipPositionY);
                    this.addDescribedBy(target, this.ctrlId + '_content');
                    this.renderContent(target);
                    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Animation.stop(this.tooltipEle);
                    this.reposition(target);
                    this.tooltipAfterRender(target, e, showAnimation, this);
                }
            }
        }
    };
    Tooltip.prototype.appendContainer = function (ctrlObj) {
        if (typeof this.container == 'string') {
            if (this.container === 'body') {
                this.containerElement = document.body;
            }
            else {
                this.isBodyContainer = false;
                this.containerElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)(this.container, document);
            }
        }
        else if (this.container instanceof HTMLElement) {
            this.containerElement = this.container;
            this.isBodyContainer = this.containerElement.tagName === 'BODY';
        }
        if (!this.isBodyContainer) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.containerElement], POPUP_CONTAINER);
        }
        this.containerElement.appendChild(ctrlObj.tooltipEle);
    };
    Tooltip.prototype.tooltipBeforeRender = function (target, ctrlObj) {
        if (target) {
            if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {
                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([ctrlObj.tooltipEle], DEVICE$1);
            }
            if (ctrlObj.width !== 'auto') {
                ctrlObj.tooltipEle.style.maxWidth = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(ctrlObj.width);
            }
            ctrlObj.tooltipEle.appendChild(ctrlObj.createElement('div', { className: CONTENT }));
            this.appendContainer(ctrlObj);
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([ctrlObj.tooltipEle], HIDE_POPUP);
            ctrlObj.addDescribedBy(target, ctrlObj.ctrlId + '_content');
            ctrlObj.renderContent(target);
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([ctrlObj.tooltipEle], POPUP_OPEN);
            if (ctrlObj.showTipPointer) {
                ctrlObj.renderArrow();
            }
            ctrlObj.renderCloseIcon();
            ctrlObj.renderPopup(target);
            ctrlObj.adjustArrow(target, ctrlObj.position, ctrlObj.tooltipPositionX, ctrlObj.tooltipPositionY);
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Animation.stop(ctrlObj.tooltipEle);
            ctrlObj.reposition(target);
        }
    };
    Tooltip.prototype.tooltipAfterRender = function (target, e, showAnimation, ctrlObj) {
        if (target) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([ctrlObj.tooltipEle], POPUP_OPEN);
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([ctrlObj.tooltipEle], POPUP_CLOSE);
            ctrlObj.tooltipEventArgs = {
                type: e ? e.type : null, cancel: false, target: target, event: e ? e : null,
                element: ctrlObj.tooltipEle, isInteracted: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e)
            };
            if (ctrlObj.needTemplateReposition() && !ctrlObj.mouseTrail) {
                ctrlObj.tooltipEle.style.display = 'none';
            }
            // eslint-disable-next-line
            var observeCallback = function (observedArgs) {
                ctrlObj.beforeOpenCallback(observedArgs, target, showAnimation, e);
            };
            ctrlObj.trigger('beforeOpen', ctrlObj.tooltipEventArgs, observeCallback.bind(ctrlObj));
        }
    };
    Tooltip.prototype.beforeOpenCallback = function (observedArgs, target, showAnimation, e) {
        var _this = this;
        if (observedArgs.cancel) {
            this.isHidden = true;
            this.clear();
            this.mouseMoveBeforeRemove();
            this.restoreElement(target);
        }
        else {
            // eslint-disable-next-line
            var openAnimation_1 = {
                name: showAnimation.effect,
                duration: showAnimation.duration,
                delay: showAnimation.delay,
                timingFunction: 'easeOut'
            };
            if (showAnimation.effect === 'None') {
                openAnimation_1 = undefined;
            }
            if (this.openDelay > 0) {
                // eslint-disable-next-line
                var show = function () {
                    if (_this.mouseTrail) {
                        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(target, 'mousemove touchstart mouseenter', _this.onMouseMove, _this);
                    }
                    if (_this.popupObj) {
                        _this.popupObj.show(openAnimation_1, target);
                        if (_this.mouseMoveEvent && _this.mouseTrail) {
                            _this.onMouseMove(_this.mouseMoveEvent);
                        }
                    }
                };
                this.showTimer = setTimeout(show, this.openDelay);
            }
            else {
                if (this.popupObj) {
                    this.popupObj.show(openAnimation_1, target);
                }
            }
        }
        if (e) {
            this.wireMouseEvents(e, target);
        }
    };
    Tooltip.prototype.needTemplateReposition = function () {
        // eslint-disable-next-line
        var tooltip = this;
        return !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tooltip.viewContainerRef)
            && typeof tooltip.viewContainerRef !== 'string';
    };
    Tooltip.prototype.checkCollision = function (target, x, y) {
        var elePos = {
            left: x, top: y, position: this.position,
            horizontal: this.tooltipPositionX, vertical: this.tooltipPositionY
        };
        var affectedPos = isCollide(this.tooltipEle, this.checkCollideTarget(), x, y);
        if (affectedPos.length > 0) {
            elePos.horizontal = affectedPos.indexOf('left') >= 0 ? 'Right' : affectedPos.indexOf('right') >= 0 ? 'Left' :
                this.tooltipPositionX;
            elePos.vertical = affectedPos.indexOf('top') >= 0 ? 'Bottom' : affectedPos.indexOf('bottom') >= 0 ? 'Top' :
                this.tooltipPositionY;
        }
        return elePos;
    };
    Tooltip.prototype.calculateElementPosition = function (pos, offsetPos) {
        return [this.isBodyContainer ? pos.left + offsetPos.left :
                (pos.left - this.containerElement.offsetLeft) + offsetPos.left + window.pageXOffset + this.containerElement.scrollLeft,
            this.isBodyContainer ? pos.top + offsetPos.top :
                (pos.top - this.containerElement.offsetTop) + offsetPos.top + window.pageYOffset + this.containerElement.scrollTop];
    };
    Tooltip.prototype.collisionFlipFit = function (target, x, y) {
        var elePos = this.checkCollision(target, x, y);
        var newpos = elePos.position;
        if (this.tooltipPositionY !== elePos.vertical) {
            newpos = ((this.position.indexOf('Bottom') === 0 || this.position.indexOf('Top') === 0) ?
                elePos.vertical + this.tooltipPositionX : this.tooltipPositionX + elePos.vertical);
        }
        if (this.tooltipPositionX !== elePos.horizontal) {
            if (newpos.indexOf('Left') === 0) {
                elePos.vertical = (newpos === 'LeftTop' || newpos === 'LeftCenter') ? 'Top' : 'Bottom';
                newpos = (elePos.vertical + 'Left');
            }
            if (newpos.indexOf('Right') === 0) {
                elePos.vertical = (newpos === 'RightTop' || newpos === 'RightCenter') ? 'Top' : 'Bottom';
                newpos = (elePos.vertical + 'Right');
            }
            elePos.horizontal = this.tooltipPositionX;
        }
        this.tooltipEventArgs = {
            type: null, cancel: false, target: target, event: null,
            element: this.tooltipEle, collidedPosition: newpos
        };
        this.trigger('beforeCollision', this.tooltipEventArgs);
        var elePosVertical = elePos.vertical;
        var elePosHorizontal = elePos.horizontal;
        if (elePos.position !== newpos) {
            var pos = calculatePosition(target, elePosHorizontal, elePosVertical, !this.isBodyContainer, this.isBodyContainer ? null : this.containerElement.getBoundingClientRect());
            this.adjustArrow(target, newpos, elePosHorizontal, elePosVertical);
            var offsetPos = this.calculateTooltipOffset(newpos);
            offsetPos.top -= this.getOffSetPosition('TopBottom', newpos, this.offsetY);
            offsetPos.left -= this.getOffSetPosition('RightLeft', newpos, this.offsetX);
            elePos.position = newpos;
            var elePosition = this.calculateElementPosition(pos, offsetPos);
            elePos.left = elePosition[0];
            elePos.top = elePosition[1];
        }
        else {
            this.adjustArrow(target, newpos, elePosHorizontal, elePosVertical);
        }
        var eleOffset = { left: elePos.left, top: elePos.top };
        var left = this.isBodyContainer ?
            fit(this.tooltipEle, this.checkCollideTarget(), { X: true, Y: false }, eleOffset).left : eleOffset.left;
        this.tooltipEle.style.display = 'block';
        if (this.showTipPointer && (newpos.indexOf('Bottom') === 0 || newpos.indexOf('Top') === 0)) {
            var arrowEle = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('.' + ARROW_TIP, this.tooltipEle);
            var arrowleft = parseInt(arrowEle.style.left, 10) - (left - elePos.left);
            if (arrowleft < 0) {
                arrowleft = 0;
            }
            else if ((arrowleft + arrowEle.offsetWidth) > this.tooltipEle.clientWidth) {
                arrowleft = this.tooltipEle.clientWidth - arrowEle.offsetWidth;
            }
            arrowEle.style.left = arrowleft.toString() + 'px';
        }
        this.tooltipEle.style.display = '';
        eleOffset.left = left;
        return eleOffset;
    };
    Tooltip.prototype.getOffSetPosition = function (positionString, newPos, offsetType) {
        return ((positionString.indexOf(this.position.split(/(?=[A-Z])/)[0]) !== -1) &&
            (positionString.indexOf(newPos.split(/(?=[A-Z])/)[0]) !== -1)) ? (2 * offsetType) : 0;
    };
    Tooltip.prototype.checkCollideTarget = function () {
        return !this.windowCollision && this.target ? this.element : null;
    };
    Tooltip.prototype.hideTooltip = function (hideAnimation, e, targetElement) {
        var _this = this;
        if (this.closeDelay > 0) {
            clearTimeout(this.hideTimer);
            clearTimeout(this.showTimer);
            // eslint-disable-next-line
            var hide = function () {
                if (_this.closeDelay && _this.tooltipEle && _this.isTooltipOpen) {
                    return;
                }
                _this.tooltipHide(hideAnimation, e, targetElement);
            };
            this.hideTimer = setTimeout(hide, this.closeDelay);
        }
        else {
            this.tooltipHide(hideAnimation, e, targetElement);
        }
    };
    Tooltip.prototype.tooltipHide = function (hideAnimation, e, targetElement) {
        var _this = this;
        var target;
        if (e) {
            target = this.target ? (targetElement || e.target) : this.element;
        }
        else {
            target = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('[data-tooltip-id= "' + this.ctrlId + '_content"]', document);
        }
        this.tooltipEventArgs = {
            type: e ? e.type : null, cancel: false, target: target, event: e ? e : null,
            element: this.tooltipEle, isInteracted: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e)
        };
        // this line commented for close the tooltip popup element even the target element destroyed in a page.
        //if (isNullOrUndefined(target)) { return; }
        this.trigger('beforeClose', this.tooltipEventArgs, function (observedArgs) {
            if (!observedArgs.cancel) {
                _this.mouseMoveBeforeRemove();
                _this.popupHide(hideAnimation, target);
            }
            else {
                _this.isHidden = false;
            }
        });
    };
    Tooltip.prototype.popupHide = function (hideAnimation, target) {
        if (target) {
            this.restoreElement(target);
        }
        this.isHidden = true;
        // eslint-disable-next-line
        var closeAnimation = {
            name: hideAnimation.effect,
            duration: hideAnimation.duration,
            delay: hideAnimation.delay,
            timingFunction: 'easeIn'
        };
        if (hideAnimation.effect === 'None') {
            closeAnimation = undefined;
        }
        if (this.popupObj) {
            this.popupObj.hide(closeAnimation);
        }
    };
    Tooltip.prototype.restoreElement = function (target) {
        this.unwireMouseEvents(target);
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(target.getAttribute('data-content'))) {
            target.setAttribute('title', target.getAttribute('data-content'));
            target.removeAttribute('data-content');
        }
        this.removeDescribedBy(target);
    };
    Tooltip.prototype.clear = function () {
        if (this.tooltipEle) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.tooltipEle], POPUP_CLOSE);
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.tooltipEle], POPUP_OPEN);
        }
        if (this.isHidden) {
            if (this.popupObj) {
                this.popupObj.destroy();
            }
            if (this.tooltipEle) {
                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.tooltipEle);
            }
            this.tooltipEle = null;
            this.popupObj = null;
        }
    };
    Tooltip.prototype.tooltipHover = function (e) {
        if (this.tooltipEle) {
            this.isTooltipOpen = true;
        }
    };
    Tooltip.prototype.tooltipMouseOut = function (e) {
        this.isTooltipOpen = false;
        this.hideTooltip(this.animation.close, e, this.findTarget());
    };
    Tooltip.prototype.onMouseOut = function (e) {
        var enteredElement = e.relatedTarget;
        // don't close the tooltip only if it is tooltip content element
        if (enteredElement && !this.mouseTrail) {
            var checkForTooltipElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(enteredElement, "." + TOOLTIP_WRAP + "." + POPUP_LIB + "." + POPUP_ROOT$1);
            if (checkForTooltipElement) {
                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(checkForTooltipElement, 'mouseleave', this.tooltipElementMouseOut, this);
            }
            else {
                this.hideTooltip(this.animation.close, e, this.findTarget());
                if (this.closeDelay === 0) {
                    this.clear();
                }
            }
        }
        else {
            this.hideTooltip(this.animation.close, e, this.findTarget());
            this.clear();
        }
    };
    Tooltip.prototype.tooltipElementMouseOut = function (e) {
        this.hideTooltip(this.animation.close, e, this.findTarget());
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'mouseleave', this.tooltipElementMouseOut);
        this.clear();
    };
    Tooltip.prototype.onStickyClose = function (e) {
        this.close();
    };
    Tooltip.prototype.onMouseMove = function (event) {
        var eventPageX = 0;
        var eventPageY = 0;
        if (event.type.indexOf('touch') > -1) {
            event.preventDefault();
            eventPageX = event.touches[0].pageX;
            eventPageY = event.touches[0].pageY;
        }
        else {
            eventPageX = event.pageX;
            eventPageY = event.pageY;
        }
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Animation.stop(this.tooltipEle);
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.tooltipEle], POPUP_CLOSE);
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.tooltipEle], POPUP_OPEN);
        this.adjustArrow(event.target, this.position, this.tooltipPositionX, this.tooltipPositionY);
        var pos = this.calculateTooltipOffset(this.position);
        var x = eventPageX + pos.left + this.offsetX;
        var y = eventPageY + pos.top + this.offsetY;
        var elePos = this.checkCollision(event.target, x, y);
        if (this.tooltipPositionX !== elePos.horizontal || this.tooltipPositionY !== elePos.vertical) {
            var newpos = (this.position.indexOf('Bottom') === 0 || this.position.indexOf('Top') === 0) ?
                elePos.vertical + elePos.horizontal : elePos.horizontal + elePos.vertical;
            elePos.position = newpos;
            this.adjustArrow(event.target, elePos.position, elePos.horizontal, elePos.vertical);
            var colpos = this.calculateTooltipOffset(elePos.position);
            elePos.left = eventPageX + colpos.left - this.offsetX;
            elePos.top = eventPageY + colpos.top - this.offsetY;
        }
        this.tooltipEle.style.left = elePos.left + 'px';
        this.tooltipEle.style.top = elePos.top + 'px';
    };
    Tooltip.prototype.keyDown = function (event) {
        if (this.tooltipEle && event.keyCode === 27) {
            this.close();
        }
    };
    Tooltip.prototype.touchEnd = function (e) {
        if (this.tooltipEle && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.' + ROOT$1) === null && !this.isSticky) {
            this.close();
        }
    };
    Tooltip.prototype.scrollHandler = function (e) {
        if (this.tooltipEle) {
            if (!((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, "." + TOOLTIP_WRAP + "." + POPUP_LIB + "." + POPUP_ROOT$1))) {
                this.close();
            }
        }
    };
    /**
     * Core method that initializes the control rendering.
     *
     * @private
     * @returns {void}
     */
    Tooltip.prototype.render = function () {
        this.initialize();
        this.wireEvents(this.opensOn);
        this.renderComplete();
    };
    /**
     * Initializes the values of private members.
     *
     * @private
     * @returns {void}
     */
    Tooltip.prototype.preRender = function () {
        this.tipClass = TIP_BOTTOM;
        this.tooltipPositionX = 'Center';
        this.tooltipPositionY = 'Top';
        this.isHidden = true;
    };
    /**
     * Binding events to the Tooltip element.
     *
     * @hidden
     * @param {string} trigger - specify the trigger string to the function
     * @returns {void}
     *
     */
    Tooltip.prototype.wireEvents = function (trigger) {
        var triggerList = this.getTriggerList(trigger);
        for (var _i = 0, triggerList_1 = triggerList; _i < triggerList_1.length; _i++) {
            var opensOn = triggerList_1[_i];
            if (opensOn === 'Custom') {
                return;
            }
            if (opensOn === 'Focus') {
                this.wireFocusEvents();
            }
            if (opensOn === 'Click') {
                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchStartEvent, this.targetClick, this);
            }
            if (opensOn === 'Hover') {
                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {
                    this.touchModule = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Touch(this.element, {
                        tapHoldThreshold: TAPHOLD_THRESHOLD,
                        tapHold: this.tapHoldHandler.bind(this)
                    });
                    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchEndEvent, this.touchEndHandler, this);
                }
                else {
                    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'mouseover', this.targetHover, this);
                }
            }
        }
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document, 'touchend', this.touchEnd, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document, 'scroll wheel', this.scrollHandler, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(window, 'resize', this.windowResize, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document, 'keydown', this.keyDown, this);
    };
    Tooltip.prototype.getTriggerList = function (trigger) {
        if (trigger === 'Auto') {
            trigger = (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) ? 'Hover' : 'Hover Focus';
        }
        return trigger.split(' ');
    };
    Tooltip.prototype.wireFocusEvents = function () {
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.target)) {
            var targetList = [].slice.call((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)(this.target, this.element));
            for (var _i = 0, targetList_2 = targetList; _i < targetList_2.length; _i++) {
                var target = targetList_2[_i];
                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(target, 'focus', this.targetHover, this);
            }
        }
        else {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'focus', this.targetHover, this);
        }
    };
    Tooltip.prototype.wireMouseEvents = function (e, target) {
        if (this.tooltipEle) {
            if (!this.isSticky) {
                if (e.type === 'focus') {
                    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(target, 'blur', this.onMouseOut, this);
                }
                if (e.type === 'mouseover') {
                    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(target, 'mouseleave', this.onMouseOut, this);
                }
                if (this.closeDelay) {
                    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.tooltipEle, 'mouseenter', this.tooltipHover, this);
                    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.tooltipEle, 'mouseleave', this.tooltipMouseOut, this);
                }
            }
            if (this.mouseTrail && this.openDelay === 0) {
                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(target, 'mousemove touchstart mouseenter', this.onMouseMove, this);
            }
        }
    };
    /**
     * Unbinding events from the element on widget destroy.
     *
     * @hidden
     *
     * @param {string} trigger - specify the trigger string to the function
     * @returns {void}
     *
     */
    Tooltip.prototype.unwireEvents = function (trigger) {
        var triggerList = this.getTriggerList(trigger);
        for (var _i = 0, triggerList_2 = triggerList; _i < triggerList_2.length; _i++) {
            var opensOn = triggerList_2[_i];
            if (opensOn === 'Custom') {
                return;
            }
            if (opensOn === 'Focus') {
                this.unwireFocusEvents();
            }
            if (opensOn === 'Click') {
                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchStartEvent, this.targetClick);
            }
            if (opensOn === 'Hover') {
                if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {
                    if (this.touchModule) {
                        this.touchModule.destroy();
                    }
                    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.touchEndEvent, this.touchEndHandler);
                }
                else {
                    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'mouseover', this.targetHover);
                }
            }
        }
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document, 'touchend', this.touchEnd);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document, 'scroll wheel', this.scrollHandler);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(window, 'resize', this.windowResize);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document, 'keydown', this.keyDown);
    };
    Tooltip.prototype.unwireFocusEvents = function () {
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.target)) {
            var targetList = [].slice.call((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)(this.target, this.element));
            for (var _i = 0, targetList_3 = targetList; _i < targetList_3.length; _i++) {
                var target = targetList_3[_i];
                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(target, 'focus', this.targetHover);
            }
        }
        else {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'focus', this.targetHover);
        }
    };
    Tooltip.prototype.unwireMouseEvents = function (target) {
        if (!this.isSticky) {
            var triggerList = this.getTriggerList(this.opensOn);
            for (var _i = 0, triggerList_3 = triggerList; _i < triggerList_3.length; _i++) {
                var opensOn = triggerList_3[_i];
                if (opensOn === 'Focus') {
                    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(target, 'blur', this.onMouseOut);
                }
                if (opensOn === 'Hover' && !_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {
                    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(target, 'mouseleave', this.onMouseOut);
                }
            }
            if (this.closeDelay) {
                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(target, 'mouseenter', this.tooltipHover);
                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(target, 'mouseleave', this.tooltipMouseOut);
            }
        }
        if (this.mouseTrail) {
            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(target, 'mousemove touchstart mouseenter', this.onMouseMove);
        }
    };
    Tooltip.prototype.findTarget = function () {
        var target = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('[data-tooltip-id= "' + this.ctrlId + '_content"]', document);
        return target;
    };
    /**
     * Core method to return the component name.
     *
     * @private
     *
     * @returns {string} - this method returns module name.
     */
    Tooltip.prototype.getModuleName = function () {
        return 'tooltip';
    };
    /**
     * Returns the properties to be maintained in the persisted state.
     *
     * @private
     *
     * @returns {string} - this method returns persisted data.
     */
    Tooltip.prototype.getPersistData = function () {
        return this.addOnPersist([]);
    };
    /**
     * Called internally, if any of the property value changed.
     *
     * @private
     *
     * @param {TooltipModel} newProp - this param gives new property values to the method
     * @param {TooltipModel} oldProp - this param gives old property values to the method
     * @returns {void}
     *
     */
    Tooltip.prototype.onPropertyChanged = function (newProp, oldProp) {
        var targetElement = this.findTarget();
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'width':
                    if (this.tooltipEle && targetElement) {
                        this.tooltipEle.style.width = this.tooltipEle.style.maxWidth = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(newProp.width);
                        this.reposition(targetElement);
                    }
                    break;
                case 'height':
                    if (this.tooltipEle && targetElement) {
                        this.tooltipEle.style.height = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(newProp.height);
                        this.reposition(targetElement);
                    }
                    break;
                case 'content':
                    if (this.tooltipEle) {
                        this.renderContent();
                    }
                    break;
                case 'opensOn':
                    this.unwireEvents(oldProp.opensOn);
                    this.wireEvents(newProp.opensOn);
                    break;
                case 'position':
                    this.formatPosition();
                    if (this.tooltipEle && targetElement) {
                        var arrowInnerELe = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('.' + ARROW_TIP_INNER, this.tooltipEle);
                        arrowInnerELe.style.top = arrowInnerELe.style.left = null;
                        this.reposition(targetElement);
                    }
                    break;
                case 'tipPointerPosition':
                    if (this.tooltipEle && targetElement) {
                        this.reposition(targetElement);
                    }
                    break;
                case 'offsetX':
                    if (this.tooltipEle) {
                        var x = newProp.offsetX - oldProp.offsetX;
                        this.tooltipEle.style.left = (parseInt(this.tooltipEle.style.left, 10) + (x)).toString() + 'px';
                    }
                    break;
                case 'offsetY':
                    if (this.tooltipEle) {
                        var y = newProp.offsetY - oldProp.offsetY;
                        this.tooltipEle.style.top = (parseInt(this.tooltipEle.style.top, 10) + (y)).toString() + 'px';
                    }
                    break;
                case 'cssClass':
                    if (this.tooltipEle) {
                        if (oldProp.cssClass) {
                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.tooltipEle], oldProp.cssClass.split(' '));
                        }
                        if (newProp.cssClass) {
                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.tooltipEle], newProp.cssClass.split(' '));
                        }
                    }
                    break;
                case 'enableRtl':
                    if (this.tooltipEle) {
                        if (this.enableRtl) {
                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.tooltipEle], RTL$1);
                        }
                        else {
                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.tooltipEle], RTL$1);
                        }
                    }
                    break;
                case 'container':
                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.containerElement)) {
                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.containerElement], POPUP_CONTAINER);
                    }
                    this.container = newProp.container;
                    if (this.tooltipEle && targetElement) {
                        this.appendContainer(this);
                        this.reposition(targetElement);
                    }
            }
        }
    };
    /**
     * It is used to show the Tooltip on the specified target with specific animation settings.
     *
     * @param {HTMLElement} element - Target element where the Tooltip is to be displayed. (It is an optional parameter)
     * @param {TooltipAnimationSettings} animation - Sets the specific animation, while showing the Tooltip on the screen. (It is an optional parameter)
     * @returns {void}
     */
    Tooltip.prototype.open = function (element, animation) {
        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(animation)) {
            animation = this.animation.open;
        }
        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element)) {
            element = this.element;
        }
        if (element.style.display === 'none') {
            return;
        }
        this.showTooltip(element, animation);
    };
    /**
     * It is used to hide the Tooltip with specific animation effect.
     *
     * @param {TooltipAnimationSettings} animation - Sets the specific animation when hiding Tooltip from the screen. (It is an optional parameter)
     * @returns {void}
     */
    Tooltip.prototype.close = function (animation) {
        if (!animation) {
            animation = this.animation.close;
        }
        this.hideTooltip(animation);
    };
    /**
     * It is used to refresh the Tooltip content and its position.
     *
     * @param {HTMLElement} target - Target element where the Tooltip content or position needs to be refreshed.
     * @returns {void}
     */
    Tooltip.prototype.refresh = function (target) {
        if (this.tooltipEle) {
            this.renderContent(target);
        }
        if (this.popupObj && target) {
            this.reposition(target);
        }
    };
    /**
     * It is used to destroy the Tooltip component.
     * @method destroy
     * @returns {void}
     * @memberof Tooltip
     */
    Tooltip.prototype.destroy = function () {
        _super.prototype.destroy.call(this);
        if (this.tooltipEle) {
            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.tooltipEle);
        }
        if (this.popupObj) {
            this.popupObj.destroy();
        }
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], ROOT$1);
        this.unwireEvents(this.opensOn);
        this.unwireMouseEvents(this.element);
        this.tooltipEle = null;
        this.popupObj = null;
    };
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('auto')
    ], Tooltip.prototype, "width", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('auto')
    ], Tooltip.prototype, "height", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()
    ], Tooltip.prototype, "content", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('body')
    ], Tooltip.prototype, "container", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()
    ], Tooltip.prototype, "target", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('TopCenter')
    ], Tooltip.prototype, "position", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)
    ], Tooltip.prototype, "offsetX", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)
    ], Tooltip.prototype, "offsetY", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)
    ], Tooltip.prototype, "showTipPointer", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)
    ], Tooltip.prototype, "enableHtmlParse", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], Tooltip.prototype, "windowCollision", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Auto')
    ], Tooltip.prototype, "tipPointerPosition", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Auto')
    ], Tooltip.prototype, "opensOn", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], Tooltip.prototype, "mouseTrail", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], Tooltip.prototype, "isSticky", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, Animation$1)
    ], Tooltip.prototype, "animation", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)
    ], Tooltip.prototype, "openDelay", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)
    ], Tooltip.prototype, "closeDelay", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()
    ], Tooltip.prototype, "cssClass", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)
    ], Tooltip.prototype, "enableHtmlSanitizer", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Tooltip.prototype, "beforeRender", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Tooltip.prototype, "beforeOpen", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Tooltip.prototype, "afterOpen", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Tooltip.prototype, "beforeClose", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Tooltip.prototype, "afterClose", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Tooltip.prototype, "beforeCollision", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Tooltip.prototype, "created", void 0);
    __decorate$2([
        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()
    ], Tooltip.prototype, "destroyed", void 0);
    Tooltip = __decorate$2([
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges
    ], Tooltip);
    return Tooltip;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));

/**
 * Tooltip modules
 */

var globalTimeOut = {};
var DEFT_MAT_WIDTH = 30;
var DEFT_FAB_WIDTH = 30;
var DEFT_FLUENT_WIDTH = 30;
var DEFT_BOOT_WIDTH = 30;
var DEFT_BOOT4_WIDTH = 36;
var DEFT_BOOT5_WIDTH = 36;
var CLS_SHOWSPIN = 'e-spin-show';
var CLS_HIDESPIN = 'e-spin-hide';
var CLS_MATERIALSPIN = 'e-spin-material';
var CLS_FABRICSPIN = 'e-spin-fabric';
var CLS_FLUENTSPIN = 'e-spin-fluent';
var CLS_TAILWINDSPIN = 'e-spin-tailwind';
var CLS_BOOTSPIN = 'e-spin-bootstrap';
var CLS_BOOT4SPIN = 'e-spin-bootstrap4';
var CLS_BOOT5SPIN = 'e-spin-bootstrap5';
var CLS_HIGHCONTRASTSPIN = 'e-spin-high-contrast';
var CLS_SPINWRAP = 'e-spinner-pane';
var CLS_SPININWRAP = 'e-spinner-inner';
var CLS_SPINCIRCLE = 'e-path-circle';
var CLS_SPINARC = 'e-path-arc';
var CLS_SPINLABEL = 'e-spin-label';
var CLS_SPINTEMPLATE = 'e-spin-template';
var spinTemplate = null;
var spinCSSClass = null;
// eslint-disable-next-line
/**
  * Function to change the Spinners in a page globally from application end.
  * ```
  * E.g : blazorSpinner({ action: "Create", options: {target: targetElement}, type: "" });
  * ```
  *
  * @param {string} action - specifies the string
  * @param {CreateArgs} options - specifies the args
  * @param {string} target - specifies the target
  * @param {string} type - specifes the type
  * @returns {void}
  * @private
  */
function Spinner(action, options, target, type) {
    switch (action) {
        case 'Create':
            /* eslint-disable */
            var element = document.querySelector(options.target);
            var args = { type: type, target: element, cssClass: options.cssClass,
                label: options.label, width: options.width };
            /* eslint-enable */
            createSpinner(args);
            break;
        case 'Show':
            showSpinner(document.querySelector(target));
            break;
        case 'Hide':
            hideSpinner(document.querySelector(target));
            break;
        case 'Set':
            // eslint-disable-next-line
            var setArgs = { cssClass: options.cssClass, type: type };
            setSpinner(setArgs);
            break;
    }
}
/**
 * Create a spinner for the specified target element.
 * ```
 * E.g : createSpinner({ target: targetElement, width: '34px', label: 'Loading..' });
 * ```
 *
 * @param {SpinnerArgs} args - specifies the args
 * @param {CreateElementArgs} internalCreateElement - specifis the element args
 * @returns {void}
 * @private
 */
function createSpinner(args, internalCreateElement) {
    if (!args.target) {
        return;
    }
    var radius;
    var makeElement = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(internalCreateElement) ? internalCreateElement : _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement;
    // eslint-disable-next-line
    var container = create_spinner_container(args.target, makeElement);
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.cssClass)) {
        container.wrap.classList.add(args.cssClass);
    }
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.template) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(spinTemplate)) {
        var template = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.template) ? args.template : spinTemplate;
        container.wrap.classList.add(CLS_SPINTEMPLATE);
        replaceContent(container.wrap, template, spinCSSClass);
    }
    else {
        var theme = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.type) ? args.type : getTheme(container.wrap);
        var width = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.width) ? args.width : undefined;
        radius = calculateRadius(width, theme);
        setTheme(theme, container.wrap, radius, makeElement);
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.label)) {
            createLabel(container.inner_wrap, args.label, makeElement);
        }
    }
    container.wrap.classList.add(CLS_HIDESPIN);
    container = null;
}
/**
 *
 * @param {HTMLElement} container - specifies the element
 * @param {string} label - specifies the string
 * @param {createElementParams} makeElement - specifies the element
 * @returns {HTMLElement} - returns the element
 */
function createLabel(container, label, makeElement) {
    var labelEle = makeElement('div', {});
    labelEle.classList.add(CLS_SPINLABEL);
    labelEle.innerHTML = label;
    container.appendChild(labelEle);
    return labelEle;
}
/**
 *
 * @param {HTMLElement} container - specifies the element
 * @param {number} radius - specifies the radius
 * @param {createElementParams} makeElement - specifies the element
 * @returns {void}
 */
function createMaterialSpinner(container, radius, makeElement) {
    var uniqueID = random_generator();
    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Material', radius: radius };
    create_material_element(container, uniqueID, makeElement, CLS_MATERIALSPIN);
    mat_calculate_attributes(radius, container, 'Material', CLS_MATERIALSPIN);
}
/**
 *
 * @param {HTMLElement} container - specifies the element
 * @param {number} radius - specifies the radius
 * @param {createElementParams} makeElement - specifies the element
 * @returns {void}
 */
function createBootstrap4Spinner(container, radius, makeElement) {
    var uniqueID = random_generator();
    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Bootstrap4', radius: radius };
    create_material_element(container, uniqueID, makeElement, CLS_BOOT4SPIN);
    mat_calculate_attributes(radius, container, 'Bootstrap4', CLS_BOOT4SPIN);
}
/**
 *
 * @param {HTMLElement} container - specifies the element
 * @param {number} radius - specifies the radius
 * @param {createElementParams} makeElement - specifies the element
 * @returns {void}
 */
function createBootstrap5Spinner(container, radius, makeElement) {
    var uniqueID = random_generator();
    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Bootstrap5', radius: radius };
    create_material_element(container, uniqueID, makeElement, CLS_BOOT5SPIN);
    mat_calculate_attributes(radius, container, 'Bootstrap5', CLS_BOOT5SPIN);
}
/**
 *
 * @param {HTMLElement} container - specifies the element
 * @param {string} uniqueID - specifies the id.
 * @param {number} radius - specifies the radius
 * @returns {void}
 */
function startMatAnimate(container, uniqueID, radius) {
    var globalObject = {};
    var timeOutVar = 0;
    globalTimeOut[uniqueID].timeOut = 0;
    globalObject[uniqueID] = globalVariables(uniqueID, radius, 0, 0);
    // eslint-disable-next-line
    var spinnerInfo = { uniqueID: uniqueID, container: container, globalInfo: globalObject, timeOutVar: timeOutVar };
    animateMaterial(spinnerInfo);
}
/**
 *
 * @param {HTMLElement} container - specifies the element
 * @param {number} radius - specifies the radius
 * @param {createElementParams} makeElement - specifies the element
 * @returns {void}
 */
function createFabricSpinner(container, radius, makeElement) {
    var uniqueID = random_generator();
    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Fabric', radius: radius };
    create_fabric_element(container, uniqueID, CLS_FABRICSPIN, makeElement);
    fb_calculate_attributes(radius, container, CLS_FABRICSPIN);
}
/**
 *
 * @param {HTMLElement} container - specifies the element
 * @param {number} radius - specifies the radius
 * @param {createElementParams} makeElement - specifies the element
 * @returns {void}
 */
function createFluentSinner(container, radius, makeElement) {
    var uniqueID = random_generator();
    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Fluent', radius: radius };
    create_fabric_element(container, uniqueID, CLS_FLUENTSPIN, makeElement);
    fb_calculate_attributes(radius, container, CLS_FLUENTSPIN);
}
function createTailwindSpinner(container, radius, makeElement) {
    var uniqueID = random_generator();
    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Tailwind', radius: radius };
    create_fabric_element(container, uniqueID, CLS_TAILWINDSPIN, makeElement);
    fb_calculate_attributes(radius, container, CLS_TAILWINDSPIN);
}
/**
 *
 * @param {HTMLElement} container - specifies the element
 * @param {number} radius - specifies the radius
 * @param {createElementParams} makeElement - specifies the element
 * @returns {void}
 */
function createHighContrastSpinner(container, radius, makeElement) {
    var uniqueID = random_generator();
    globalTimeOut[uniqueID] = { timeOut: 0, type: 'HighContrast', radius: radius };
    create_fabric_element(container, uniqueID, CLS_HIGHCONTRASTSPIN, makeElement);
    fb_calculate_attributes(radius, container, CLS_HIGHCONTRASTSPIN);
}
/**
 *
 * @param {HTMLElement} container - specifies the element
 * @returns {string} - returns the string
 */
function getTheme(container) {
    var theme = window.getComputedStyle(container, ':after').getPropertyValue('content');
    return theme.replace(/['"]+/g, '');
}
/**
 *
 * @param {string} theme - specifies the theme
 * @param {HTMLElement} container - specifies the element
 * @param {number} radius - specifies the radius
 * @param {createElementParams} makeElement - specifies the element
 * @returns {void}
 */
function setTheme(theme, container, radius, makeElement) {
    var innerContainer = container.querySelector('.' + CLS_SPININWRAP);
    var svg = innerContainer.querySelector('svg');
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(svg)) {
        innerContainer.removeChild(svg);
    }
    switch (theme) {
        case 'Material':
            createMaterialSpinner(innerContainer, radius, makeElement);
            break;
        case 'Fabric':
            createFabricSpinner(innerContainer, radius, makeElement);
            break;
        case 'Fluent':
            createFluentSinner(innerContainer, radius, makeElement);
            break;
        case 'Bootstrap':
            createBootstrapSpinner(innerContainer, radius, makeElement);
            break;
        case 'HighContrast':
            createHighContrastSpinner(innerContainer, radius, makeElement);
            break;
        case 'Bootstrap4':
            createBootstrap4Spinner(innerContainer, radius, makeElement);
            break;
        case 'Bootstrap5':
            createBootstrap5Spinner(innerContainer, radius, makeElement);
            break;
        case 'Tailwind':
        case 'Tailwind-dark':
            createTailwindSpinner(innerContainer, radius, makeElement);
            break;
    }
}
/**
 *
 * @param {HTMLElement} innerContainer - specifies the element
 * @param {number} radius - specifies the radius
 * @param {createElementParams} makeElement - specifies the element
 * @returns {void}
 */
function createBootstrapSpinner(innerContainer, radius, makeElement) {
    var uniqueID = random_generator();
    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Bootstrap', radius: radius };
    create_bootstrap_element(innerContainer, uniqueID, makeElement);
    boot_calculate_attributes(innerContainer, radius);
}
/**
 *
 * @param {HTMLElement} innerContainer - specifies the element
 * @param {string} uniqueID - specifies the id
 * @param {createElementParams} makeElement - specifies the element
 * @returns {void}
 */
// eslint-disable-next-line
function create_bootstrap_element(innerContainer, uniqueID, makeElement) {
    var svgBoot = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
    var viewBoxValue = 64;
    var trans = 32;
    var defaultRadius = 2;
    svgBoot.setAttribute('id', uniqueID);
    svgBoot.setAttribute('class', CLS_BOOTSPIN);
    svgBoot.setAttribute('viewBox', '0 0 ' + viewBoxValue + ' ' + viewBoxValue);
    innerContainer.insertBefore(svgBoot, innerContainer.firstChild);
    for (var item = 0; item <= 7; item++) {
        var bootCircle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
        bootCircle.setAttribute('class', CLS_SPINCIRCLE + '_' + item);
        bootCircle.setAttribute('r', defaultRadius + '');
        bootCircle.setAttribute('transform', 'translate(' + trans + ',' + trans + ')');
        svgBoot.appendChild(bootCircle);
    }
}
/**
 *
 * @param {HTMLElement} innerContainer - specifies the element
 * @param {number} radius - specifies the radius
 * @returns {void}
 */
// eslint-disable-next-line
function boot_calculate_attributes(innerContainer, radius) {
    var svg = innerContainer.querySelector('svg.e-spin-bootstrap');
    var x = 0;
    var y = 0;
    var rad = 24;
    svg.style.width = svg.style.height = radius + 'px';
    var startArc = 90;
    for (var item = 0; item <= 7; item++) {
        var start = defineArcPoints(x, y, rad, startArc);
        var circleEle = svg.querySelector('.' + CLS_SPINCIRCLE + '_' + item);
        circleEle.setAttribute('cx', start.x + '');
        circleEle.setAttribute('cy', start.y + '');
        startArc = startArc >= 360 ? 0 : startArc;
        startArc = startArc + 45;
    }
}
/**
 *
 * @param {number} begin - specifies the number
 * @param {number} stop  - specifirs the number
 * @returns {number[]} - returns the array of number
 */
function generateSeries(begin, stop) {
    var series = [];
    var start = begin;
    var end = stop;
    // eslint-disable-next-line
    var increment = false, count = 1;
    formSeries(start);
    /**
     *
     * @param {number} i - specifies the number
     * @returns {void}
     */
    function formSeries(i) {
        series.push(i);
        if (i !== end || count === 1) {
            if (i <= start && i > 1 && !increment) {
                i = parseFloat((i - 0.2).toFixed(2));
            }
            else if (i === 1) {
                i = 7;
                i = parseFloat((i + 0.2).toFixed(2));
                increment = true;
            }
            else if (i < 8 && increment) {
                i = parseFloat((i + 0.2).toFixed(2));
                if (i === 8) {
                    increment = false;
                }
            }
            else if (i <= 8 && !increment) {
                i = parseFloat((i - 0.2).toFixed(2));
            }
            ++count;
            formSeries(i);
        }
    }
    return series;
}
/**
 *
 * @param {HTMLElement} innerContainer - specifies the element
 * @returns {void}
 */
function animateBootstrap(innerContainer) {
    var svg = innerContainer.querySelector('svg.e-spin-bootstrap');
    var id = svg.getAttribute('id');
    for (var i = 1; i <= 8; i++) {
        var circleEle = (innerContainer.getElementsByClassName('e-path-circle_' +
            (i === 8 ? 0 : i))[0]);
        rotation(circleEle, i, i, generateSeries(i, i), id);
    }
    /**
     *
     * @param {SVGCircleElement} circle - specifies the circl element
     * @param {number} start - specifies the number
     * @param {number} end - specifies the end number
     * @param {number} series - specifies the series
     * @param {string} id - specifies the id
     * @returns {void}
     */
    function rotation(circle, start, end, series, id) {
        var count = 0;
        boot_animate(start);
        // eslint-disable-next-line
        function boot_animate(radius) {
            if (globalTimeOut[id].isAnimate) {
                ++count;
                circle.setAttribute('r', radius + '');
                if (count >= series.length) {
                    count = 0;
                }
                // eslint-disable-next-line
                globalTimeOut[id].timeOut = setTimeout(boot_animate.bind(null, series[count]), 18);
            }
        }
    }
}
/**
 *
 * @param {HTMLElement} container - specifies the element
 * @param {string} template - specifies the template
 * @param {string} cssClass - specifies the css class.
 * @returns {void}
 */
function replaceContent(container, template, cssClass) {
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cssClass)) {
        container.classList.add(cssClass);
    }
    var inner = container.querySelector('.e-spinner-inner');
    inner.innerHTML = template;
}
/**
 *
 * @param {string} width - specifies the width
 * @param {string} theme - specifies the string
 * @returns {number} - returns the number
 */
function calculateRadius(width, theme) {
    var defaultSize;
    switch (theme) {
        case 'Material':
            defaultSize = DEFT_MAT_WIDTH;
            break;
        case 'Fabric':
            defaultSize = DEFT_FAB_WIDTH;
            break;
        case 'Tailwind':
        case 'Tailwind-dark':
            defaultSize = DEFT_FAB_WIDTH;
            break;
        case 'Fluent':
            defaultSize = DEFT_FLUENT_WIDTH;
            break;
        case 'Bootstrap4':
            defaultSize = DEFT_BOOT4_WIDTH;
            break;
        case 'Bootstrap5':
            defaultSize = DEFT_BOOT5_WIDTH;
            break;
        default:
            defaultSize = DEFT_BOOT_WIDTH;
    }
    width = width ? parseFloat(width + '') : defaultSize;
    return theme === 'Bootstrap' ? width : width / 2;
}
/**
 *
 * @param {string} id - specifies the id
 * @param {number} radius - specifies the radius
 * @param {number} count - specifies the number count
 * @param {number} previousId - specifies the previous id
 * @returns {GlobalVariables} - returns the variables
 */
function globalVariables(id, radius, count, previousId) {
    return {
        radius: radius,
        count: count,
        previousId: previousId
    };
}
/**
 * @returns {string} - returns the string
 */
// eslint-disable-next-line
function random_generator() {
    var random = '';
    var combine = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    for (var i = 0; i < 5; i++) {
        random += combine.charAt(Math.floor(Math.random() * combine.length));
    }
    return random;
}
/**
 *
 * @param {HTMLElement} innerCon - specifies the element
 * @param {string} uniqueID - specifies the unique id
 * @param {string} themeClass - specifies the string
 * @param {createElementParams} makeElement - specifies the element
 * @returns {void}
 */
// eslint-disable-next-line
function create_fabric_element(innerCon, uniqueID, themeClass, makeElement) {
    var svgFabric = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
    svgFabric.setAttribute('id', uniqueID);
    svgFabric.setAttribute('class', themeClass);
    var fabricCirclePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');
    fabricCirclePath.setAttribute('class', CLS_SPINCIRCLE);
    var fabricCircleArc = document.createElementNS('http://www.w3.org/2000/svg', 'path');
    fabricCircleArc.setAttribute('class', CLS_SPINARC);
    innerCon.insertBefore(svgFabric, innerCon.firstChild);
    svgFabric.appendChild(fabricCirclePath);
    svgFabric.appendChild(fabricCircleArc);
}
/**
 *
 * @param {HTMLElement} innerContainer - specifies the element
 * @param {string} uniqueID - specifies the unique id
 * @param {createElementParams} makeElement - specifies the element
 * @param {string} cls - specifies the string
 * @returns {void}
 */
// eslint-disable-next-line
function create_material_element(innerContainer, uniqueID, makeElement, cls) {
    var svgMaterial = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
    var matCirclePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');
    svgMaterial.setAttribute('class', cls);
    svgMaterial.setAttribute('id', uniqueID);
    matCirclePath.setAttribute('class', CLS_SPINCIRCLE);
    innerContainer.insertBefore(svgMaterial, innerContainer.firstChild);
    svgMaterial.appendChild(matCirclePath);
}
/**
 *
 * @param {HTMLElement} target - specifies the element
 * @param {createElementParams} makeElement - specifies the element
 * @returns {void}
 */
// eslint-disable-next-line
function create_spinner_container(target, makeElement) {
    var spinnerContainer = makeElement('div', {});
    var spinnerInnerContainer = makeElement('div', {});
    spinnerContainer.classList.add(CLS_SPINWRAP);
    spinnerInnerContainer.classList.add(CLS_SPININWRAP);
    target.appendChild(spinnerContainer);
    spinnerContainer.appendChild(spinnerInnerContainer);
    // eslint-disable-next-line
    return { wrap: spinnerContainer, inner_wrap: spinnerInnerContainer };
}
/**
 *
 * @param {SpinnerInfo} spinnerInfo - specifies the spinner
 * @returns {void}
 */
function animateMaterial(spinnerInfo) {
    var start = 1;
    var end = 149;
    var duration = 1333;
    var max = 75;
    createCircle(start, end, easeAnimation, duration, spinnerInfo.globalInfo[spinnerInfo.uniqueID].count, max, spinnerInfo);
    spinnerInfo.globalInfo[spinnerInfo.uniqueID].count = ++spinnerInfo.globalInfo[spinnerInfo.uniqueID].count % 4;
}
/**
 *
 * @param {number} start - specifies the number
 * @param {number} end - specifies the end number
 * @param {Function} easing - specifies the function
 * @param {number} duration - specifies the duration
 * @param {number} count - specifies the count
 * @param {number} max - specifies the max number
 * @param {SpinnerInfo} spinnerInfo - specifies the spinner info
 * @returns {void}
 */
// eslint-disable-next-line
function createCircle(start, end, easing, duration, count, max, spinnerInfo) {
    var id = ++spinnerInfo.globalInfo[spinnerInfo.uniqueID].previousId;
    var startTime = new Date().getTime();
    var change = end - start;
    var diameter = getSize((spinnerInfo.globalInfo[spinnerInfo.uniqueID].radius * 2) + '');
    var strokeSize = getStrokeSize(diameter);
    var rotate = -90 * (spinnerInfo.globalInfo[spinnerInfo.uniqueID].count || 0);
    mat_animation(spinnerInfo);
    // eslint-disable-next-line
    function mat_animation(spinnerInfo) {
        var currentTime = Math.max(0, Math.min(new Date().getTime() - startTime, duration));
        updatePath(easing(currentTime, start, change, duration), spinnerInfo.container);
        if (id === spinnerInfo.globalInfo[spinnerInfo.uniqueID].previousId && currentTime < duration) {
            // eslint-disable-next-line
            globalTimeOut[spinnerInfo.uniqueID].timeOut = setTimeout(mat_animation.bind(null, spinnerInfo), 1);
        }
        else {
            animateMaterial(spinnerInfo);
        }
    }
    /**
     *
     * @param {number} value - specifies the number value
     * @param {HTMLElement} container - specifies the container
     * @returns {void}
     */
    function updatePath(value, container) {
        if ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(container.querySelector('svg.e-spin-material')))
            && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(container.querySelector('svg.e-spin-material').querySelector('path.e-path-circle')))) {
            var svg = container.querySelector('svg.e-spin-material');
            var path = svg.querySelector('path.e-path-circle');
            path.setAttribute('stroke-dashoffset', getDashOffset(diameter, strokeSize, value, max) + '');
            path.setAttribute('transform', 'rotate(' + (rotate) + ' ' + diameter / 2 + ' ' + diameter / 2 + ')');
        }
    }
}
/**
 *
 * @param {number} radius - specifies the number
 * @param {HTMLElement} container - specifies the element
 * @param {string} type - specifies the string type
 * @param {string} cls - specifies the string
 * @returns {void}
 */
// eslint-disable-next-line
function mat_calculate_attributes(radius, container, type, cls) {
    var diameter = radius * 2;
    var svg = container.querySelector('svg.' + cls);
    var path = svg.querySelector('path.e-path-circle');
    var strokeSize = getStrokeSize(diameter);
    var transformOrigin = (diameter / 2) + 'px';
    svg.setAttribute('viewBox', '0 0 ' + diameter + ' ' + diameter);
    svg.style.width = svg.style.height = diameter + 'px';
    svg.style.transformOrigin = transformOrigin + ' ' + transformOrigin + ' ' + transformOrigin;
    path.setAttribute('d', drawArc(diameter, strokeSize));
    if (type === 'Material') {
        path.setAttribute('stroke-width', strokeSize + '');
        path.setAttribute('stroke-dasharray', ((diameter - strokeSize) * Math.PI * 0.75) + '');
        path.setAttribute('stroke-dashoffset', getDashOffset(diameter, strokeSize, 1, 75) + '');
    }
}
/**
 *
 * @param {string} value - specifies the value
 * @returns {number} - returns the number
 */
function getSize(value) {
    var parsed = parseFloat(value);
    return parsed;
}
/**
 *
 * @param {number} diameter - specifies the diameter
 * @param {number} strokeSize - specifies the size
 * @returns {string} - returns the string
 */
function drawArc(diameter, strokeSize) {
    var radius = diameter / 2;
    var offset = strokeSize / 2;
    return 'M' + radius + ',' + offset
        + 'A' + (radius - offset) + ',' + (radius - offset) + ' 0 1 1 ' + offset + ',' + radius;
}
/**
 *
 * @param {number} diameter - specifies the number
 * @returns {number} - returns the number
 */
function getStrokeSize(diameter) {
    return 10 / 100 * diameter;
}
/**
 *
 * @param {number} diameter - specifies the number
 * @param {number} strokeSize - specifies the stroke size
 * @param {number} value - specifies the value
 * @param {number} max - specifies the max number
 * @returns {number} - returns the number
 */
function getDashOffset(diameter, strokeSize, value, max) {
    return (diameter - strokeSize) * Math.PI * ((3 * (max) / 100) - (value / 100));
}
/**
 *
 * @param {number} current - specifies the number
 * @param {number} start - specifies the stroke size
 * @param {number} change - specifies the value
 * @param {number} duration - specifies the max number
 * @returns {number} - returns the number
 */
function easeAnimation(current, start, change, duration) {
    var timestamp = (current /= duration) * current;
    var timecount = timestamp * current;
    return start + change * (6 * timecount * timestamp + -15 * timestamp * timestamp + 10 * timecount);
}
/**
 *
 * @param {number} radius - specifies the number
 * @param {HTMLElement} innerConainer - specifies the element
 * @param {string} trgClass - specifies the class
 * @returns {void}
 */
// eslint-disable-next-line
function fb_calculate_attributes(radius, innerConainer, trgClass) {
    var centerX = radius;
    var centerY = radius;
    var diameter = radius * 2;
    // eslint-disable-next-line
    var startArc = 315, endArc = 45;
    var svg = innerConainer.querySelector('.' + trgClass);
    var circle = svg.querySelector('.e-path-circle');
    var path = svg.querySelector('.e-path-arc');
    var transformOrigin = (diameter / 2) + 'px';
    circle.setAttribute('d', defineCircle(centerX, centerY, radius));
    path.setAttribute('d', defineArc(centerX, centerY, radius, startArc, endArc));
    svg.setAttribute('viewBox', '0 0 ' + diameter + ' ' + diameter);
    svg.style.transformOrigin = transformOrigin + ' ' + transformOrigin + ' ' + transformOrigin;
    svg.style.width = svg.style.height = diameter + 'px';
}
/**
 *
 * @param {number} centerX - specifies the number
 * @param {number} centerY - specifies the stroke size
 * @param {number} radius - specifies the value
 * @param {number} angle - specifies the max number
 * @returns {number} - returns the number
 */
function defineArcPoints(centerX, centerY, radius, angle) {
    var radians = (angle - 90) * Math.PI / 180.0;
    return {
        x: centerX + (radius * Math.cos(radians)),
        y: centerY + (radius * Math.sin(radians))
    };
}
/**
 *
 * @param {number} x - specifies the number
 * @param {number} y - specifies the stroke size
 * @param {number} radius - specifies the radius
 * @param {number} startArc - specifies the value
 * @param {number} endArc - specifies the max number
 * @returns {number} - returns the number
 */
function defineArc(x, y, radius, startArc, endArc) {
    var start = defineArcPoints(x, y, radius, endArc);
    var end = defineArcPoints(x, y, radius, startArc);
    var d = [
        'M', start.x, start.y,
        'A', radius, radius, 0, 0, 0, end.x, end.y
    ].join(' ');
    return d;
}
/**
 *
 * @param {number} x - specifies the number
 * @param {number} y - specifies the stroke size
 * @param {number} radius - specifies the value
 * @returns {string} - returns the string
 */
function defineCircle(x, y, radius) {
    var d = [
        'M', x, y,
        'm', -radius, 0,
        'a', radius, radius, 0, 1, 0, radius * 2, 0,
        'a', radius, radius, 0, 1, 0, -radius * 2, 0
    ].join(' ');
    return d;
}
// eslint-disable-next-line
/**
 * Function to show the Spinner.
 *
 * @param {HTMLElement} container - Specify the target of the Spinner.
 * @returns {void}
 * @private
 */
function showSpinner(container) {
    showHideSpinner(container, false);
    container = null;
}
/**
 *
 * @param {HTMLElement} container - specifies the element
 * @param {boolean} isHide - specifies the boolean
 * @returns {void}
 */
function showHideSpinner(container, isHide) {
    var spinnerWrap;
    if (container) {
        spinnerWrap = container.classList.contains(CLS_SPINWRAP) ? container :
            container.querySelector('.' + CLS_SPINWRAP);
    }
    if (container && spinnerWrap) {
        var inner = spinnerWrap.querySelector('.' + CLS_SPININWRAP);
        var spinCheck = void 0;
        // eslint-disable-next-line
        spinCheck = isHide ? !spinnerWrap.classList.contains(CLS_SPINTEMPLATE) && !spinnerWrap.classList.contains(CLS_HIDESPIN) :
            !spinnerWrap.classList.contains(CLS_SPINTEMPLATE) && !spinnerWrap.classList.contains(CLS_SHOWSPIN);
        if (spinCheck) {
            var svgEle = spinnerWrap.querySelector('svg');
            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(svgEle)) {
                return;
            }
            var id = svgEle.getAttribute('id');
            globalTimeOut[id].isAnimate = !isHide;
            switch (globalTimeOut[id].type) {
                case 'Material':
                    // eslint-disable-next-line
                    isHide ? clearTimeout(globalTimeOut[id].timeOut) : startMatAnimate(inner, id, globalTimeOut[id].radius);
                    break;
                case 'Bootstrap':
                    // eslint-disable-next-line
                    isHide ? clearTimeout(globalTimeOut[id].timeOut) : animateBootstrap(inner);
                    break;
            }
        }
        // eslint-disable-next-line
        isHide ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(spinnerWrap, [CLS_HIDESPIN], [CLS_SHOWSPIN]) : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(spinnerWrap, [CLS_SHOWSPIN], [CLS_HIDESPIN]);
        container = null;
    }
}
/**
 * Function to hide the Spinner.
 *
 * @param {HTMLElement} container - Specify the target of the Spinner.
 * @returns {void}
 * @private
 */
function hideSpinner(container) {
    showHideSpinner(container, true);
    container = null;
}
// eslint-disable-next-line
/**
  * Function to change the Spinners in a page globally from application end.
  * ```
  * E.g : setSpinner({ cssClass: 'custom-css'; type: 'Material' });
  * ```
  *
  * @param {SetSpinnerArgs} args - specifies the args
  * @param {createElementParams} internalCreateElement - specifies the element params
  * @returns {void}
  * @private
  */
function setSpinner(args, internalCreateElement) {
    var makeElement = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(internalCreateElement) ? internalCreateElement : _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement;
    if (args.template !== undefined) {
        spinTemplate = args.template;
        if (args.template !== undefined) {
            spinCSSClass = args.cssClass;
        }
    }
    var container = document.querySelectorAll('.' + CLS_SPINWRAP);
    for (var index = 0; index < container.length; index++) {
        ensureTemplate(args.template, container[index], args.type, args.cssClass, makeElement);
    }
}
/**
 *
 * @param {string} template - specifies the string
 * @param {HTMLElement} container - specifies the container
 * @param {string} theme - specifies the theme
 * @param {string} cssClass - specifies the string class
 * @param {createElementParams} makeEle - specifies the params
 * @returns {void}
 */
function ensureTemplate(template, container, theme, cssClass, makeEle) {
    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(template) && !container.classList.contains(CLS_SPINTEMPLATE)) {
        replaceTheme(container, theme, cssClass, makeEle);
        if (container.classList.contains(CLS_SHOWSPIN)) {
            container.classList.remove(CLS_SHOWSPIN);
            showSpinner(container);
        }
        else {
            container.classList.remove(CLS_HIDESPIN);
            hideSpinner(container);
        }
    }
    else {
        spinTemplate = template;
        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cssClass)) {
            spinCSSClass = cssClass;
        }
    }
}
/**
 *
 * @param {HTMLElement} container - specifies the container
 * @param {string} theme - specifies the theme
 * @param {string} cssClass - specifies the string class
 * @param {createElementParams} makeEle - specifies the params
 * @returns {void}
 */
function replaceTheme(container, theme, cssClass, makeEle) {
    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cssClass)) {
        container.classList.add(cssClass);
    }
    var svgElement = container.querySelector('svg');
    var radius = theme === 'Bootstrap' ? parseFloat(svgElement.style.height) : parseFloat(svgElement.style.height) / 2;
    var classNames = svgElement.getAttribute('class');
    var svgClassList = classNames.split(/\s/);
    if (svgClassList.indexOf('e-spin-material') >= 0) {
        var id = svgElement.getAttribute('id');
        clearTimeout(globalTimeOut[id].timeOut);
    }
    setTheme(theme, container, radius, makeEle);
}

/**
 * spinner modules
 */

/**
 * Popup Components
 */




/***/ }),

/***/ 24794:
/*!**************************************************************************************!*\
  !*** ./node_modules/angular2-prettyjson/__ivy_ngcc__/esm2015/angular2-prettyjson.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PrettyJsonModule": () => (/* binding */ PrettyJsonModule),
/* harmony export */   "ɵa": () => (/* binding */ PrettyJsonComponent),
/* harmony export */   "ɵb": () => (/* binding */ PrettyJsonPipe),
/* harmony export */   "ɵc": () => (/* binding */ SafeJsonPipe)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);
/**
 * @license angular2-prettyjson
 * MIT license
 */



/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

class PrettyJsonComponent {
}
PrettyJsonComponent.ɵfac = function PrettyJsonComponent_Factory(t) { return new (t || PrettyJsonComponent)(); };
PrettyJsonComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: PrettyJsonComponent, selectors: [["prettyjson"]], inputs: { obj: "obj" }, decls: 3, vars: 3, consts: [[3, "innerHtml"]], template: function PrettyJsonComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "pre", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](1, "prettyjson");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "    ");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("innerHtml", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](1, 1, ctx.obj), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeHtml"]);
    } }, pipes: function () { return [PrettyJsonPipe]; }, styles: ["pre[_ngcontent-%COMP%] {outline: 1px solid #ccc; padding: 5px; margin: 5px; }\n    [_nghost-%COMP%]     span {white-space: normal;}\n    [_nghost-%COMP%]     .string { color: green; }\n    [_nghost-%COMP%]     .number { color: darkorange; }\n    [_nghost-%COMP%]     .boolean { color: blue; }\n    [_nghost-%COMP%]     .null { color: magenta; }\n    [_nghost-%COMP%]     .key { color: red; }"] });
/** @nocollapse */
PrettyJsonComponent.ctorParameters = () => [];
PrettyJsonComponent.propDecorators = {
    "obj": [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input },],
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](PrettyJsonComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
        args: [{
                selector: "prettyjson",
                styles: [
                    `pre {outline: 1px solid #ccc; padding: 5px; margin: 5px; }
    :host >>> span {white-space: normal;}
    :host >>> .string { color: green; }
    :host >>> .number { color: darkorange; }
    :host >>> .boolean { color: blue; }
    :host >>> .null { color: magenta; }
    :host >>> .key { color: red; }`
                ],
                template: `
    <pre [innerHtml]="obj | prettyjson">
    </pre>
  `
            }]
    }], null, { obj: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * @return {?}
 */
function serializer() {
    const /** @type {?} */ stack = [];
    const /** @type {?} */ keys = [];
    const /** @type {?} */ cycleReplacer = function (key, value) {
        if (stack[0] === value) {
            return "[Circular ~]";
        }
        return "[Circular ~." + keys.slice(0, stack.indexOf(value)).join(".") + "]";
    };
    return function (key, value) {
        if (stack.length > 0) {
            const /** @type {?} */ thisPos = stack.indexOf(this);
            ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);
            ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);
            if (~stack.indexOf(value)) {
                value = cycleReplacer.call(this, key, value);
            }
        }
        else {
            stack.push(value);
        }
        return value;
    };
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class PrettyJsonPipe {
    /**
     * @param {?} obj
     * @param {?=} spaces
     * @return {?}
     */
    transform(obj, spaces = 2) {
        return this._syntaxHighlight(obj, serializer(), spaces);
    }
    /**
     * @param {?} json
     * @param {?} serializer
     * @param {?} spacing
     * @return {?}
     */
    _syntaxHighlight(json, serializer$$1, spacing) {
        if (json === undefined) {
            return '<span class="undefined"></span>';
        }
        // Credits to the accepted answer here
        // http://stackoverflow.com/questions/4810841/how-can-i-pretty-print-json-using-javascript
        if (typeof json !== "string") {
            json = JSON.stringify(json, serializer$$1, spacing);
        }
        json = json.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
        return json.replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g, (match) => {
            let /** @type {?} */ cls = "number";
            if (/^"/.test(match)) {
                if (/:$/.test(match)) {
                    cls = "key";
                }
                else {
                    cls = "string";
                }
            }
            else if (/true|false/.test(match)) {
                cls = "boolean";
            }
            else if (/null/.test(match)) {
                cls = "null";
            }
            return `<span class="${cls}">${match}</span>`;
        });
    }
}
PrettyJsonPipe.ɵfac = function PrettyJsonPipe_Factory(t) { return new (t || PrettyJsonPipe)(); };
PrettyJsonPipe.ɵpipe = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefinePipe"]({ name: "prettyjson", type: PrettyJsonPipe, pure: false });
/** @nocollapse */
PrettyJsonPipe.ctorParameters = () => [];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](PrettyJsonPipe, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Pipe,
        args: [{
                name: "prettyjson",
                pure: false
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class SafeJsonPipe {
    /**
     * @param {?} obj
     * @param {?=} spaces
     * @return {?}
     */
    transform(obj, spaces = 2) {
        return JSON.stringify(obj, serializer(), spaces);
    }
}
SafeJsonPipe.ɵfac = function SafeJsonPipe_Factory(t) { return new (t || SafeJsonPipe)(); };
SafeJsonPipe.ɵpipe = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefinePipe"]({ name: "json", type: SafeJsonPipe, pure: false });
/** @nocollapse */
SafeJsonPipe.ctorParameters = () => [];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](SafeJsonPipe, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Pipe,
        args: [{
                name: "json",
                pure: false
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class PrettyJsonModule {
}
PrettyJsonModule.ɵfac = function PrettyJsonModule_Factory(t) { return new (t || PrettyJsonModule)(); };
PrettyJsonModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: PrettyJsonModule });
PrettyJsonModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({});
/** @nocollapse */
PrettyJsonModule.ctorParameters = () => [];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](PrettyJsonModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
        args: [{
                declarations: [
                    PrettyJsonComponent,
                    PrettyJsonPipe,
                    SafeJsonPipe
                ],
                exports: [
                    PrettyJsonComponent,
                    PrettyJsonPipe,
                    SafeJsonPipe
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](PrettyJsonModule, { declarations: [PrettyJsonComponent, PrettyJsonPipe, SafeJsonPipe], exports: [PrettyJsonComponent, PrettyJsonPipe, SafeJsonPipe] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
// Public classes.

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Angular library starter
 * Build an Angular library compatible with AoT compilation & Tree shaking
 * Copyright Roberto Simonetti
 * MIT license
 * https://github.com/robisim74/angular-library-starter
 */
/**
 * Entry point for all public APIs of the package.
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */





/***/ })

}]);
//# sourceMappingURL=src_app_admin_admin_module_ts.js.map