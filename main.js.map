{"version":3,"sources":["./src/app/components/base-angular.service.ts","./src/environments/environment.ts","./src/app/views/product-crud/product-crud.component.ts","./src/app/views/product-crud/product-crud.component.html","./src/app/components/product/product-create/product-create.component.ts","./src/app/components/product/product-create/product-create.component.html","./src/app/components/product/product-update/product-update.component.ts","./src/app/components/product/product-update/product-update.component.html","./src/app/components/product/product-read/product-read.component.ts","./src/app/components/product/product-read/product-read.component.html","./src/app/components/product/product.service.ts","./src/app/components/template/footer/footer.component.ts","./src/app/components/template/footer/footer.component.html","./src/app/directives/jumping.directive.ts","./src/app/views/home/home.component.ts","./src/app/views/home/home.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/template/header/header.service.ts","./src/app/app.module.ts","./src/app/directives/red.directive.ts","./src/app/components/product/product-read/product-read-datasource.ts","./src/app/components/template/nav/nav.component.ts","./src/app/components/template/nav/nav.component.html","./src/app/components/messages/message.service.ts","./src/app/directives/for.directive.ts","./src/app/components/template/header/header.component.ts","./src/app/components/template/header/header.component.html","./src/app/components/product/product-delete/product-delete.component.ts","./src/app/components/product/product-delete/product-delete.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { EMPTY, Observable } from 'rxjs';\nimport { MessageService } from './messages/message.service';\n\nexport abstract class BaseAngularService<T>{\n\n  constructor(protected messageService: MessageService) { }\n\n  errorHandler(e: any): Observable<any> {\n    console.log(e);\n    this.messageService.showMessage(\"Ocorreu um erro!\", true);\n    return EMPTY;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HeaderService } from 'src/app/components/template/header/header.service';\n\n@Component({\n  selector: 'app-product-crud',\n  templateUrl: './product-crud.component.html',\n  styleUrls: ['./product-crud.component.css']\n})\nexport class ProductCrudComponent implements OnInit {\n\n  constructor(private router: Router, private headerService: HeaderService) {\n    this.headerService.setHeaderData('Cadastro de Produtos', 'storefront', '/products');\n  }\n\n  ngOnInit(): void {\n  }\n\n  navigateToProductCreate(): void {\n    this.router.navigate(['/products/create']);\n  }\n}\n","<button mat-raised-button (click)=\"navigateToProductCreate()\">\n    Novo produto\n</button>\n\n<app-product-read></app-product-read>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MessageService } from '../../messages/message.service';\r\nimport { Product } from '../product.model';\r\nimport { ProductService } from '../product.service';\r\n\r\n@Component({\r\n  selector: 'app-product-create',\r\n  templateUrl: './product-create.component.html',\r\n  styleUrls: ['./product-create.component.css']\r\n})\r\nexport class ProductCreateComponent implements OnInit {\r\n\r\n  product: Product = {\r\n    name: '',\r\n    price: null\r\n  };\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private router: Router,\r\n    private messageService: MessageService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  createProduct(): void {\r\n    this.productService.create(this.product).subscribe(() => {\r\n      this.messageService.showMessage(`Produto ${this.product.name} criado!`);\r\n      this.cancel();\r\n    });\r\n  }\r\n\r\n  cancel(): void {\r\n    this.router.navigate(['/products']);\r\n  }\r\n}\r\n","<mat-card>\n    <mat-card-title>Novo produto</mat-card-title>\n    <form>\n        <mat-form-field>\n            <input matInput placeholder=\"Nome\" [(ngModel)]=\"product.name\" name=\"name\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Preço (R$)\" [(ngModel)]=\"product.price\" name=\"price\" ui-money-mask>\n        </mat-form-field>\n    </form>\n    <button mat-raised-button (click)=\"createProduct()\" color=\"primary\">\n        Salvar\n    </button>\n    <button mat-raised-button (click)=\"cancel()\">\n        Cancelar\n    </button>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MessageService } from '../../messages/message.service';\r\nimport { Product } from '../product.model';\r\nimport { ProductService } from '../product.service';\r\n\r\n@Component({\r\n  selector: 'app-product-update',\r\n  templateUrl: './product-update.component.html',\r\n  styleUrls: ['./product-update.component.css']\r\n})\r\nexport class ProductUpdateComponent implements OnInit {\r\n\r\n  product: Product = {\r\n    name: '',\r\n    price: null\r\n  };\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private messageService: MessageService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const id = this.route.snapshot.paramMap.get('id');\r\n    if (id != null) {\r\n      this.productService.readById(+id).subscribe(product => {\r\n        this.product = product;\r\n      });\r\n    }\r\n  }\r\n\r\n  updateProduct(): void {\r\n    this.productService.update(this.product).subscribe(() => {\r\n      this.messageService.showMessage(`Produto ${this.product.name} atualizado!`);\r\n      this.cancel();\r\n    });\r\n  }\r\n\r\n  cancel(): void {\r\n    this.router.navigate(['/products']);\r\n  }\r\n}\r\n","<mat-card>\n    <mat-card-title>Alterar produto</mat-card-title>\n    <form>\n        <mat-form-field>\n            <input matInput placeholder=\"Nome\" [(ngModel)]=\"product.name\" name=\"name\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Preço (R$)\" [(ngModel)]=\"product.price\" name=\"price\" ui-money-mask>\n        </mat-form-field>\n    </form>\n    <button mat-raised-button (click)=\"updateProduct()\" color=\"primary\">\n        Atualizar\n    </button>\n    <button mat-raised-button (click)=\"cancel()\">\n        Cancelar\n    </button>\n</mat-card>\n","import { MessageService } from './../../messages/message.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { ProductDeleteComponent } from '../product-delete/product-delete.component';\r\nimport { Product } from '../product.model';\r\nimport { ProductService } from '../product.service';\r\nimport { ProductReadDataSource } from './product-read-datasource';\r\n\r\n@Component({\r\n  selector: 'app-product-read',\r\n  templateUrl: './product-read.component.html',\r\n  styleUrls: ['./product-read.component.css']\r\n})\r\nexport class ProductReadComponent implements OnInit {\r\n  @ViewChild(MatPaginator)\r\n  paginator!: MatPaginator;\r\n  @ViewChild(MatSort)\r\n  sort!: MatSort;\r\n  @ViewChild(MatTable)\r\n  table!: MatTable<Product>;\r\n  dataSource!: ProductReadDataSource;\r\n\r\n  displayedColumns = ['id', 'name', 'price', 'action'];\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource = new ProductReadDataSource([]);\r\n    this.loadProducts();\r\n  }\r\n\r\n  loadProducts(): void {\r\n    this.productService.read().subscribe(products => {\r\n      this.setTableData(products);\r\n    });\r\n  }\r\n\r\n  setTableData(products: Product[]): void {\r\n    this.dataSource = new ProductReadDataSource(products);\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.table.dataSource = this.dataSource;\r\n  }\r\n\r\n  delete(id: string): void {\r\n    const dialogRef = this.dialog.open(ProductDeleteComponent, {\r\n      data: id\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.loadProducts();\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"mat-elevation-z4\">\r\n    <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\r\n      <!-- Id Column -->\r\n      <ng-container matColumnDef=\"id\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\r\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\r\n      </ng-container>\r\n  \r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Nome</th>\r\n        <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\r\n      </ng-container>\r\n  \r\n      <!-- Price Column -->\r\n      <ng-container matColumnDef=\"price\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Preço (R$)</th>\r\n        <td mat-cell *matCellDef=\"let row\">{{row.price | currency: 'BRL' }}</td>\r\n      </ng-container>\r\n  \r\n      <!-- Action Column -->\r\n      <ng-container matColumnDef=\"action\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Ações</th>\r\n        <td mat-cell *matCellDef=\"let row\">\r\n          <a routerLink=\"update/{{ row.id }}\" class=\"edit\">\r\n            <i class=\"material-icons\">edit</i>\r\n          </a>\r\n          <a (click)=\"delete(row.id)\" class=\"delete\">\r\n            <i class=\"material-icons\">delete</i>\r\n          </a>\r\n        </td>\r\n      </ng-container>\r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n  \r\n    <mat-paginator #paginator\r\n        [length]=\"dataSource?.data?.length\"\r\n        [pageIndex]=\"0\"\r\n        [pageSize]=\"10\"\r\n        [pageSizeOptions]=\"[5, 10, 50]\">\r\n    </mat-paginator>\r\n  </div>\r\n  ","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Product } from './product.model';\nimport { catchError, map } from 'rxjs/operators';\nimport { MessageService } from './../messages/message.service';\nimport { BaseAngularService } from '../base-angular.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService extends BaseAngularService<Product> {\n\n  baseUrl = 'http://localhost:3001/products';\n\n  constructor(\n    private http: HttpClient,\n    protected messageService: MessageService) {\n    super(messageService);\n  }\n\n  create(product: Product): Observable<Product> {\n    return this.http.post<Product>(this.baseUrl, product).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n  read(): Observable<Product[]> {\n    return this.http.get<Product[]>(this.baseUrl).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );;\n  }\n\n  readById(id: number): Observable<Product> {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.get<Product>(url).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );;\n  }\n\n  update(product: Product): Observable<Product> {\n    const url = `${this.baseUrl}/${product.id}`;\n    return this.http.put<Product>(url, product).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );;\n  }\n\n  delete(id: number): Observable<Product> {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.delete<Product>(url).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"footer\">\n    <span>\n        Desenvolvido por\n        <i class=\"material-icons v-middle\" appRed appJumping>\n            code\n        </i>\n        <strong> Danillo Pinheiro Neto</strong>\n    </span>\n</mat-toolbar>","import { Directive, ElementRef, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appJumping]'\n})\nexport class JumpingDirective {\n\n  constructor(private renderer: Renderer2, private el: ElementRef) {\n    this.renderer.addClass(this.el.nativeElement, \"jumping\");\n  }\n\n}\n","import { HeaderService } from './../../components/template/header/header.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private headerService: HeaderService) {\n    this.headerService.setHeaderData('My Pocket', 'home');\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card class=\"home mat-elevation-z3\">\n    <mat-card-title class=\"title\">\n        Bem Vindo!\n    </mat-card-title>\n    <mat-card-subtitle class=\"subtitle\">\n        Sistema para exemplificar a construção de um cadastro em Angular.\n    </mat-card-subtitle>\n</mat-card>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n  nome = 'Danillo';\n}\n","<app-header></app-header>\r\n<app-nav></app-nav>\r\n<app-footer></app-footer>","import { HeaderData } from './header-data.model';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeaderService {\n\n  private _headerData = new BehaviorSubject<HeaderData>({\n    title: 'My Pocket',\n    icon: 'home',\n    routeUrl: ''\n  })\n\n  constructor() { }\n\n  get headerData(): HeaderData {\n    return this._headerData.value;\n  }\n\n  set headerData(headerData: HeaderData) {\n    this._headerData.next(headerData);\n  }\n\n  setHeaderData(title: string, icon: string, routeUrl: string = ''){\n    this.headerData = {\n      title: title,\n      icon: icon,\n      routeUrl: routeUrl\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, LOCALE_ID } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport localePt from '@angular/common/locales/pt';\r\nimport { registerLocaleData } from '@angular/common';\r\n\r\nregisterLocaleData(localePt);\r\n\r\n/* App Components */\r\nimport { HeaderComponent } from './components/template/header/header.component';\r\nimport { NavComponent } from './components/template/nav/nav.component';\r\nimport { FooterComponent } from './components/template/footer/footer.component';\r\nimport { HomeComponent } from './views/home/home.component';\r\nimport { ProductCrudComponent } from './views/product-crud/product-crud.component';\r\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\r\nimport { ProductReadComponent } from './components/product/product-read/product-read.component';\r\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\r\n\r\n/* App Directives */\r\nimport { RedDirective } from './directives/red.directive';\r\nimport { JumpingDirective } from './directives/jumping.directive';\r\nimport { ForDirective } from './directives/for.directive';\r\n\r\n/* Material */\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatSidenavModule } from '@angular/material/sidenav'\r\nimport { MatCardModule } from '@angular/material/card'\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatDialogModule, MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material/dialog';\nimport { ProductDeleteComponent } from './components/product/product-delete/product-delete.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    ProductCrudComponent,\r\n    RedDirective,\r\n    JumpingDirective,\r\n    ForDirective,\r\n    ProductCreateComponent,\r\n    ProductReadComponent,\r\n    ProductUpdateComponent,\r\n    ProductDeleteComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatSnackBarModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: LOCALE_ID,\r\n      useValue: 'pt-BR'\r\n    },\r\n    {\r\n      provide: MAT_DIALOG_DEFAULT_OPTIONS,\r\n      useValue: { hasBackdrop: false }\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appRed]'\n})\nexport class RedDirective {\n\n  constructor(private renderer: Renderer2, private el: ElementRef) {\n    this.el.nativeElement.style.color = \"#e35e6b\";\n  }\n\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\nimport { Product } from '../product.model';\n\n/**\n * Data source for the ProductRead view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class ProductReadDataSource extends DataSource<Product> {\n  data: Product[] = this.products;\n  paginator!: MatPaginator;\n  sort!: MatSort;\n\n  constructor(private products: Product[]) {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<Product[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() { }\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: Product[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: Product[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+this.fixValue(a.id), +this.fixValue(b.id), isAsc);\n        case 'price': return compare(+this.fixValue(a.price), +this.fixValue(b.price), isAsc);\n        default: return 0;\n      }\n    });\n  }\n\n  private fixValue(value: number | undefined | null): number {\n    return value != null && value != undefined ? value : 0;\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-sidenav-container class=\"container\">\n    <mat-sidenav class=\"sidenav\" mode=\"side\" opened \n        fixedInViewport=\"true\" fixedTopGap=\"64\">\n        <mat-nav-list class=\"nav-list\">\n            <a mat-list-item routerLink=\"/\">\n                <i class=\"material-icons\">\n                    home\n                </i>\n                Início\n            </a>\n            <a mat-list-item routerLink=\"/products\">\n                <i class=\"material-icons\">\n                    storefront\n                </i>\n                Produtos\n            </a>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"content\">\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  showMessage(msg: string, isError: boolean = false, time?: number): void {\r\n    this.snackBar.open(msg, 'x', {\r\n      duration: time != null ? time : 3000,\r\n      horizontalPosition: 'right',\r\n      verticalPosition: 'top',\r\n      panelClass: isError ? 'msg-error' : 'msg-success'\r\n    });\r\n  }\r\n}\r\n","import { Directive, OnInit, Input, ViewContainerRef, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[myFor]'\n})\nexport class ForDirective implements OnInit {\n\n  @Input('myForEm')\n  numbers: number[] = [];\n\n  constructor(\n    private container: ViewContainerRef,\n    private template: TemplateRef<any>) {\n\n  }\n\n  ngOnInit(): void {\n    for (let number of this.numbers) {\n      this.container.createEmbeddedView(this.template, { $implicit: number });\n    }\n  }\n}\n","import { HeaderService } from './header.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private headerService: HeaderService) { }\n\n  ngOnInit(): void {\n  }\n\n  get title(): string {\n    return this.headerService.headerData.title;\n  }\n\n  get icon(): string {\n    return this.headerService.headerData.icon;\n  }\n\n  get routeUrl(): string {\n    return this.headerService.headerData.routeUrl;\n  }\n}\n","<mat-toolbar class=\"header mat-elevation-z4\">\n    <span>\n        <a routerLink=\"/\">\n            <img class=\"logo\" src=\"assets/img/logo.png\" alt=\"logo\" />\n        </a>\n    </span>\n    <span class=\"title-group\">\n        <a routerLink=\"{{ routeUrl }}\">\n            <i class=\"material-icons\">\n                {{ icon }}\n            </i>\n            {{ title }}\n        </a>\n    </span>\n</mat-toolbar>","import { ProductService } from './../product.service';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Product } from '../product.model';\nimport { MessageService } from '../../messages/message.service';\n\n@Component({\n  selector: 'app-product-delete',\n  templateUrl: './product-delete.component.html',\n  styleUrls: ['./product-delete.component.css']\n})\nexport class ProductDeleteComponent implements OnInit {\n\n  product!: Product;\n  productId!: number;\n\n  constructor(\n    public dialogRef: MatDialogRef<ProductDeleteComponent>,\n    private productService: ProductService,\n    private messageService: MessageService,\n    @Inject(MAT_DIALOG_DATA) public data: number) {\n    this.productId = data;\n  }\n\n  ngOnInit(): void {\n    this.productService.readById(this.productId).subscribe(product => {\n      this.product = product;\n    });\n  }\n\n  deleteProduct() {\n    this.productService.delete(this.product.id!).subscribe(() => {\n      this.messageService.showMessage(`O produto ${this.product!.name} foi excluído!`);\n      this.dialogRef.close(true);\n    });\n  }\n}\n","<div [hidden]=\"product == null\">\n    <h1 mat-dialog-title>Exclusão</h1>\n    <div mat-dialog-content>\n        <p>Deseja realmente excluir o produto {{ product != null ? product!.name : '' }}?</p>\n    </div>\n    <div mat-dialog-actions>\n        <button mat-button mat-raised-button mat-dialog-close>Não</button>\n        <button mat-button mat-raised-button (click)=\"deleteProduct()\" color=\"warn\">Sim</button>\n    </div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './views/home/home.component';\r\nimport { ProductCrudComponent } from './views/product-crud/product-crud.component';\r\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\r\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: \"products\",\r\n    component: ProductCrudComponent\r\n  },\r\n  {\r\n    path: \"products/create\",\r\n    component: ProductCreateComponent\r\n  },\r\n  {\r\n    path: \"products/update/:id\",\r\n    component: ProductUpdateComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}